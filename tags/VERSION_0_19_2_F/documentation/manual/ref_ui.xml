<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Id$ -->
<!--
// Copyright (c) 1996-2005 The Regents of the University of California. All
// Rights Reserved. Permission to use, copy, modify, and distribute this
// software and its documentation without fee, and without a written
// agreement is hereby granted, provided that the above copyright notice
// and this paragraph appear in all copies.  This software program and
// documentation are copyrighted by The Regents of the University of
// California. The software program and documentation are supplied "AS
// IS", without any accompanying services from The Regents. The Regents
// does not warrant that the operation of the program will be
// uninterrupted or error-free. The end-user understands that the program
// was developed for research purposes and is advised not to rely
// exclusively on the program for any reason.  IN NO EVENT SHALL THE
// UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
// SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
-->

<!--

This is the top level reference to the User Interface. To keep things
manageable, the description of each of the panes and the menu bar have their
own chapters.

-->

<chapter id="ch.ref.ui">
  <title>User Interface Reference</title>

  <sect1>
    <title>Introduction</title>

    <para>This chapter describes the overall behavior of the user
      interface. Description of the various component parts&mdash;the menu bar,
      panes and various diagrams&mdash; is in separate chapters.</para>
  </sect1>

  <!-- An overview of the window as a whole -->

  <sect1>
    <title>Overview of the Window</title>

    <para><xref linkend="fig.ref.gui_overview"/> shows the main ArgoUML
      window.</para>
      
    <para>
      The titlebar of the window shows the following 4  parts of information, 
      seperated from each other by a dash.
    </para>

    <itemizedlist>
      <listitem>
        <para>
          The current filename. If no filename for the project is set yet, then
          the titlebar shows "Unititled".
        </para>
      </listitem>
      <listitem>
        <para>
          The name of the currently active diagram.
        </para>
      </listitem>
      <listitem>
        <para>
          The name <quote>ArgoUML</quote>.
        </para>
      </listitem>
      <listitem>
        <para>
          An asterisk (*). This item is only present if the current project file
          is <quote>dirty</quote>, i.e. it is altered, but not yet saved. 
          In other words, if
          the asterisk is absent, then the current file has not been altered.
        </para>
      </listitem>
    </itemizedlist>

      <!-- A big diagram with all the bits pointed out.--> 
<!--    TODO: At the moment its just a
         plane screenshot, but it would be nice to float in some bubbles
         pointing out things. -->

    <figure id="fig.ref.gui_overview" float="1">
      <title>Overview of the ArgoUML window</title>

      <screenshot><mediaobject>
        <imageobject>
          <imagedata format="PNG" align="center"
                     fileref="images/reference/gui_overview.png"/>
        </imageobject>
      </mediaobject></screenshot>
    </figure>

    <para>At the top of screen is a <emphasis>menu bar</emphasis>, 
      which is described in
      <xref linkend="ch.ref.menu"/>. 
      Below that is the <emphasis>toolbar</emphasis>, as described in 
      <xref linkend="ch.ref.toolbar"/>.
    </para>
    <para>
      The bulk of the window comprises four
      sub-windows or <emphasis>panes</emphasis>. Clockwise from top left these
      are the <emphasis>explorer</emphasis> (see <xref
      linkend="ch.ref.navpane"/>), <emphasis>editing pane</emphasis> (see <xref
      linkend="ch.ref.editpane"/>), <emphasis>details pane</emphasis> (see
      <xref linkend="ch.ref.detpane"/>) and <emphasis>to-do pane</emphasis>
      (see <xref linkend="ch.ref.todopane"/>). All 4 panes
      have a <emphasis>tool bar</emphasis> at the top 
      (in the <emphasis>details pane</emphasis> it is located 
      under the <emphasis>properties</emphasis> tab).
      An overview of the panes is given in
      <xref linkend="s1.ref.panes"/>. Finally at the bottom of the window is a
      <emphasis>status bar</emphasis> described in <xref
      linkend="s1.ref.status"/>.
    </para>

  </sect1>

  <!-- The central explanation of how the mouse behaves -->

  <sect1 id="s1.ref.mouse">
    <title>General Mouse Behavior in ArgoUML</title>

    <para>Mouse behavior that is specific to the various panes of ArgoUML
      (see <xref linkend="s1.ref.panes"/>) or the menu bar, is discussed in the
      chapters covering those panes and the menu bar. In this section we cover
      behavior that is general across all of ArgoUML.</para>

    <para>In a number of places in ArgoUML text may be directly edited
      (for example the constraint editor&mdash;see
      <xref linkend="s2.ref.details_constraint_editor"/>). The behavior of the
      mouse when handling text is discussed in the sections that follow.</para>

    <sect2>
      <title>Mouse Button Terminology</title>

      <para>ArgoUML assumes a two button mouse. We will refer to the buttons
        as <quote>&button1;</quote> and <quote>&button2;</quote>. &Button1; is
        the leftmost button on a right-handed mouse, and sometimes referred to
        as the <emphasis>select</emphasis> button. &Button2; is the rightmost
        button on a right-handed mouse, and is sometimes referred to as the
        <emphasis>adjust</emphasis> button.</para>

      <para>A single depress and release of a mouse button with the mouse is
        referred to as a <emphasis>click</emphasis>. Two clicks in quick
        succession is referred to as a <emphasis>double
        click</emphasis>. Moving the mouse while holding a button down is
        referred to as <emphasis>button motion</emphasis> with the starting
        point being at <emphasis>button down</emphasis> and the end point at
        <emphasis>button up</emphasis>.</para>
    </sect2>

    <!-- Button1 click -->

    <sect2>
      <title>&Button1; Click</title>

      <para> Clicking on an user-interface object or on a diagram artifact may 
        establish many different things. Most of the behaviour is experienced 
        quite intuitive by the user, mainly because the high degree of 
        standardisation, even spanning different computer platforms (Macintosh, 
        PC, UNIX,...). ArgoUML follows the <emphasis>Java Look and Feel 
        Design Guidelines</emphasis> by Sun. 
        See <ulink url="http://java.sun.com/products/jlf/"/>.
        Hence, behaviour of common 
        user-interface components is generally not discussed in this document. 
        </para>
        
      <para>
        On the other hand, mouse actions in a diagram may not seem so intuitive
        to the user, since it is specific for ArgoUML. 
        Hence they are explained here.
        In short, clicking selects or activates the object beneath the mouse-pointer, 
        and moves the focus (i.e. navigation). 
        <!-- For example, 
        a click is used to activate a command button, 
        to select an artifact on a diagram or an item from a list, 
        or to set an insertion point in a text area.--> 
      </para>
      
      <para>More in detail, the &button1; click may cause the following result:
      </para>

      <!-- Selection -->

      <sect3>
        <title>Selection</title>

        <para>Here &button1; is used to choose (select) an artifact 
          (in a list or tree or on a diagram) on 
          which subsequent operations will take place. 
          Multiple artifacts may be selected 
          by using Shift and/or Control in combination with &button1;, see 
          <xref linkend="s2.ref.mouse.shift_control"/>. 
          Selection is always clearly indicated by a colored background.
        </para>
        
        <para>
          On a diagram, the selected artifact is indicated with colored "blocks"
          at the corners/ends of the object. Artifacts can be selected or 
          deselected in different ways:
        </para>
        
        <itemizedlist>
          <listitem>
            <para>
              &Button1; click. Deselects all artifacts, and selects the
              one clicked on.
            </para>
          </listitem>
          <listitem>
            <para>
              &Button1; motion. Button motion 
              (moving the mouse with the button down) in the diagram, 
              not on any artifact, allows to draw a rectangle around artifacts
              which will be selected when the &button1; is released.
            </para>
          </listitem>
          <listitem>
            <para>
              Menu functions and shortcuts. 
              Many menu operations change selection as side-effect, e.g.
              creating a new diagram.  
              Many keyboard shortcuts for menu operations change the selection, 
              e.g. Ctrl-A, which stands for the 
              <literal>Select All</literal> function.
            </para>
          </listitem>
        </itemizedlist>
      </sect3>

      <!-- Activation -->

      <sect3>
        <title>Activation</title>

        <para>Here &button1; is used to activate the user interface component,
          e.g. a button. 
          The object is usually highlighted when the mouse button is pressed 
          and then activated when the mouse button is released. Activating an
          user-interface object means that its function is executed.
        </para>
      </sect3>

      <!-- Navigation -->

      <sect3>
        <title>Navigation</title>

        <para>Here &button1; is used to move the focus from one 
          user interface component or diagram artifact to another.
          It is better known under the term
          keyboard focus. This because keyboard commands usually work on
          the artifact that has the focus.
          The focus is indicated by a (hardly visible) box 
          around the artifact, or for a text entry box, by a flashing cursor.
        </para>
      </sect3>
      
      <!-- General behavior when editing text -->

      <sect3>
        <title>General Behavior When Editing Text</title>

        <para>Here &button1; is used to select the point within the text at
          which operations (text entry and deletion) will take place.</para>
      </sect3>
    </sect2>

    <!-- Button1 double click -->

    <sect2>
      <title>&Button1; Double Click</title>

      <para>The behavior of &button1; double click varies betweens panes and
        is discussed in their chapters.</para>

      <!-- General behavior when editing text -->

      <sect3>
        <title>General Behavior When Editing Text</title>

        <para>Here &button1; double click is used to select a complete word, or
          other syntactic unit within the text. Subsequent operations (text
          entry and deletion) will replace the selected text.</para>
      </sect3>
    </sect2>

    <!-- Button1 Motion -->

    <sect2>
      <title>&Button1; Motion</title>

      <sect3>
        <title>General Behavior When Editing Text</title>

        <para>Here &button1; motion is used to select a range of
          text. Subsequent operations (text entry and deletion) will replace
          the selected text.</para>
      </sect3>
    </sect2>

    <!-- Shift and control keys -->

    <sect2 id="s2.ref.mouse.shift_control">
      <title>Shift and Control with &Button1;</title>

      <!-- Where there is a list of things -->

      <sect3>
        <title>Within Lists</title>

        <para>This behavior applies where there is a list of things that may
          be selected. This includes various dialog boxes, and the to-do pane,
          where there is a list of to-do items to be selected.</para>

        <para>Where selections are to be made, the SHIFT key is used to with
          &button1; to <emphasis>extend</emphasis> from the original &button1;
          selection to the current position.</para>

        <para>Similarly the CONTROL key with &button1; is used to add
          individual items to the current selection. Where Ctrl-&button1; is
          used on an item already selected, that item is removed from the
          selection.</para>

        <caution><para>Users of Microsoft Windows might be familiar with the use
          of SHIFT-CONTROL-Click 
          (i.e. holding both the Shift and Control key down when clicking), 
          to add sub-lists to an existing
          selection. ArgoUML does not support this. SHIFT-CONTROL-Click will behave
          as CONTROL-Click.</para></caution>
      </sect3>

      <!-- General behavior when editing text -->

      <sect3>
        <title>General Behavior When Editing Text</title>

        <para>In a number of places in ArgoUML text may be directly edited
          (for example
          when naming a model&mdash;element in the properties pane, 
          or when typing a UML note / comment).
          Here SHIFT
          &button1; is used to select a range of text from the previously
          selected point. Subsequent operations (text entry and deletion) will
          replace the selected text.</para>
      </sect3>
    </sect2>
    
    <sect2 id="s2.ref.mouse.alt">
      <title>Alt with &Button1;: Panning</title>
      <para>When holding down the Alt key during &button1; down on a diagram, 
        movement of the mouse pans the drawing area. The function is indicated 
        by the mousepointer which turns into a crosshair with arrows.</para>
    </sect2>

    <!-- Button2 click -->

    <sect2>
      <title>&Button2; Actions</title>

      <para>&Button2; actions are all dependent on the pane or menu bar, and
        discussed in their various chapters.</para>
    </sect2>

    <!-- Button2 double click -->

    <sect2>
      <title>&Button2; Double Click</title>

      <para>&Button2; actions are all dependent on the pane or menu bar, and
        discussed in their various chapters.</para>
    </sect2>

    <!-- Button2 Motion -->

    <sect2>
      <title>&Button2; Motion</title>

      <para>&Button2; actions are all dependent on the pane or menu bar, and
        discussed in their various chapters.</para>
    </sect2>
  </sect1>

  <!-- General information about Panes -->

  <sect1 id="s1.ref.panes">
    <title>General Information About Panes</title>

    <para>The four sub-windows of the main ArgoUML window are called
      <emphasis>panes</emphasis>. Clockwise from top left these are the
      <emphasis>explorer</emphasis> (see <xref
      linkend="ch.ref.navpane"/>), <emphasis>editing pane</emphasis> (see <xref
      linkend="ch.ref.editpane"/>), <emphasis>details pane</emphasis> (see
      <xref linkend="ch.ref.detpane"/>) and <emphasis>to-do pane</emphasis>
      (see <xref linkend="ch.ref.todopane"/>). At the top the editing pane is a
      <emphasis>tool bar</emphasis>.</para>

    <sect2>
      <title>Re-sizing Panes</title>

      <para>You can re-size panes by dragging on the divider bars between
        them. To indicate this possibility, 
        the mouse cursor changes shape when hovering 
        over the divider bars.</para>

      <!-- TODO: shouldn't we better describe this independent of the 4 
      existing panes? 
      I.e. only describe in general how such a divider works. -->
      <para>In addition you will see there are two small left pointing arrows
        within the vertical divider bars, one at the top of the vertical
        divider bar between explorer and editing pane and one at the top
        of the vertical divider bar between to-do pane and details
        pane. &Button1; click on the first of these will expand the editing
        pane to the full width of the window, &button1; click on the second
        will expand the details pane to the full width of the window.</para>
      
      <para>There is also a small downward pointing arrow within the
        horizontal divider bar at its leftmost end. Clicking on this will
        expand the explorer and editing panes to the full depth of the
        window.</para>

      <para>By using both the top arrow on the vertical divider and the arrow
        on the horizontal divider, it is possible to expand the editing pane to
        use the entire window.</para>
        
      <para>
        The original configuration can be restored by clicking again on these
        arrows, which are now located at the edge of the window.
      </para>
    </sect2>

  </sect1>

  <!-- All about the status bar -->

  <sect1 id="s1.ref.status">
    <title>The status bar</title>

    <para>The status bar is at the very bottom of the ArgoUML window and is 
      used to display short advisory messages. In general such messages are 
      self explanatory. It is e.g. used for displaying parsing error messages 
      in case a text entered on the diagram can not be interpreted.</para>
  </sect1>

</chapter>

<!-- Local stuff for Emacs - please do not delete

Local Variables:
mode: xml
sgml-doctype: "argomanual.xml"
sgml-parent-document: ("argomanual.xml" "chapter" nil)
sgml-validate-command: "nsgmls -wxml -sv ../docbook-setup/xml.dcl \
argomanual.xml"
indent-tabs-mode: nil
End:

-->
