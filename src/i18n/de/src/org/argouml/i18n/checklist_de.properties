checklist.class.naming = Naming
checklist.class.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Klasse?
checklist.class.naming.is-noun = 	Ist \"<ocl>self</ocl>\" ein Substantiv oder ein substantiv\u00e4hnlicher Ausdruck?
checklist.class.naming.misinterpret = 	Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.class.encoding = Encoding
checklist.class.encoding.convert-to-attribute = Sollte \"<ocl>self</ocl>\" eine eigene Klasse bilden, oder nur ein einfaches Attribut einer anderen Klasse sein?
checklist.class.encoding.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.class.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Klassen heruntergebrochen werden?
checklist.class.value = Value
checklist.class.value.start-with-meaningful-values = Starten alle Attribute von \"<ocl>self</ocl>\" mit sinnvollen Werten?
checklist.class.value.convert-to-invariant = K\u00f6nnen Sie eine Invariante f\u00fcr diese Klasse schreiben?
checklist.class.value.establish-invariant-in-constructors = Etablieren alle Konstruktoren die Klassen-Invariante?
checklist.class.value.maintain-invariant = Behandeln alle Methoden die Klassen-Invariante?
checklist.class.location = Location
checklist.class.location.move-somewhere = Kann \"<ocl>self</ocl>\" an einer anderen Stelle in der Klassenhierarchie definiert werden?
checklist.class.location.planned-subclasses = Haben Sie eine Unterklasse von \"<ocl>self</ocl>\" geplant?
checklist.class.location.eliminate-from-model = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.class.location.eliminates-or-affects-something-else = Gibt es im Modell eine andere Klasse, die \u00fcberarbeitet oder entfernt werden sollte, weil sie dem gleichen Zweck dient wie \"<ocl>self</ocl>\"?
checklist.class.updates = Updates
checklist.class.updates.reasons-for-update = In welchen Fall wird eine Instanz von \"<ocl>self</ocl>\" aufgefrischt?
checklist.class.updates.affects-something-else = Gibt es andere Objekte, die immer aufgefrischt werden m\u00fcssen, wenn \"<ocl>self</ocl>\" aufgefrischt wurde?
checklist.attribute.naming = Naming
checklist.attribute.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung des Attributes?
checklist.attribute.naming.is-noun = 	Ist \"<ocl>self</ocl>\" ein Substantiv oder ein substantiv\u00e4hnlicher Ausdruck?
checklist.attribute.naming.misinterpret = Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.attribute.encoding = Encoding
checklist.attribute.encoding.is-too-restrictive = Ist der Typ <ocl>self.type</ocl> zu restriktiv, um alle m\u00f6glichen Werte von " + "\"<ocl>self</ocl>\" darzustellen?
checklist.attribute.encoding.allow-impossible-values = Erlaubt der Typ <ocl>self.type</ocl> Werte f\u00fcr \"<ocl>self</ocl>\", die niemals " + "richtig sein k\u00f6nnen?
checklist.attribute.encoding.combine-with-other = Kann \"<ocl>self</ocl>\" mit einigen anderen Attributen des <ocl>self.owner</ocl> kombiniert werden (z.B.: {owner.structuralFeature})?
checklist.attribute.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Teile aufgeteilt werden (z.B.: eine Telefonnummer kann in den Bereichscode, den Pr\u00e4fix und die Nummer unterteilt werden)?
checklist.attribute.encoding.is-computable = Kann \"<ocl>self</ocl>\" von anderen Attributen verarbeitet werden, ohne da\u00df es gespeichert werden mu\u00df?
checklist.attribute.value = Value
checklist.attribute.value.default-value = Sollte \"<ocl>self</ocl>\" einen Anfangs- (oder Standard-) Wert haben?
checklist.attribute.value.correct-default-value = Ist der Anfangswert <ocl>self.initialValue</ocl> richtig?
checklist.attribute.value.is-correctness-checkable = K\u00f6nnen Sie einen Ausdruck schreiben, um zu pr\u00fcfen, ob \"<ocl>self</ocl>\" richtig ist? Plausibel?
checklist.attribute.location = Location
checklist.attribute.location.move-somewhere = Kann \"<ocl>self</ocl>\" in einer anderen Klasse definiert werden, die mit <ocl>self.owner</ocl> assoziiert ist?
checklist.attribute.location.move-up-hierarchy = Kann \"<ocl>self</ocl>\" die Vererbungshierarchie hochsteigen, um es f\u00fcr den owner.name und mit anderen Klassen zu verwenden?
checklist.attribute.location.include-all = Kann \"<ocl>self</ocl>\" auf alle Instanzen der Klasse <ocl>self.owner</ocl>, einschlie\u00dflich der Instanzen der Unterklassen angewendet werden?
checklist.attribute.location.could-be-eliminated = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.attribute.location.eliminates-or-affects-something-else = Gibt es ein anderes Attribut im Modell, das \u00fcberarbeitet oder entfernt werden sollte, weil es dem gleichen Zweck wie \"<ocl>self</ocl>\" dient?
checklist.attribute.updates = Updates
checklist.attribute.updates.reasons-for-update = In welchen F\u00e4llen wird \"<ocl>self</ocl>\" aktualisiert?
checklist.attribute.updates.affects-something-else = Gibt es einige andere Attribute, die immer aktualisiert werden m\u00fcssen, wenn \"<ocl>self</ocl>\" aktualisiert wird?
checklist.attribute.updates.exists-method-for-update = Gibt es eine Methode, die aufgerufen werden sollte, wenn \"<ocl>self</ocl>\" aktualisiert wird?
checklist.attribute.updates.exists-method-for-specific-value = Gibt es eine Methode, die aufgerufen werden sollte, wenn \"<ocl>self</ocl>\" einen bestimmten Wert erh\u00e4lt?
checklist.operation.naming = Naming
checklist.operation.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Methode?
checklist.operation.naming.is-verb = 	Ist \"<ocl>self</ocl>\" ein Verb oder ein verbaler Ausdruck?
checklist.operation.naming.misinterpret = Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.operation.naming.do-just-one-thing = Tut \"<ocl>self</ocl>\" eine Sache und tut sie es richtig?
checklist.operation.encoding = Encoding
checklist.operation.encoding.is-returntype-too-restrictive = Ist der Typ des R\u00fcckgabewertes '<ocl>self.returnType</ocl>' zu restriktiv, um alle m\u00f6glichen, von \"<ocl>self</ocl>\" zur\u00fcckgegebenen Werte darzustellen?
checklist.operation.encoding.does-returntype-allow-impossible-values = Erlaubt '<ocl>self.returnType</ocl>' R\u00fcckgabewerte, die niemals korrekt sein k\u00f6nnen?
checklist.operation.encoding.combine-with-other = Kann \"<ocl>self</ocl>\" mit einigen anderen Methoden von <ocl>self.owner</ocl> kombiniert werden (z.B.: <ocl sep=', '>self.owner.behavioralFeature</ocl>)?
checklist.operation.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Teile aufgeteilt werden (z.B.: Vorverarbeitung, Hauptverarbeitung und Nachverarbeitung)?
checklist.operation.encoding.break-into-series = Kann \"<ocl>self</ocl>\" durch eine Reihe von Clientaufrufen in einfachere Methoden aufgeteilt werden?
checklist.operation.encoding.reduce-number-of-calls = Kann \"<ocl>self</ocl>\" mit anderen Methoden kombiniert werden, um die Anzahl der Clientaufrufe zu reduzieren?
checklist.operation.value = Value
checklist.operation.value.handle-all-inputs = Kann \"<ocl>self</ocl>\" alle denkbaren Eingaben verarbeiten?
checklist.operation.value.are-special-cases = Gibt es Spezialeingaben, die separat verarbeitet werden m\u00fcssen?
checklist.operation.value.is-correctness-checkable = K\u00f6nnen Sie einen Ausdruck schreiben, um zu pr\u00fcfen, ob die Argumente f\u00fcr  \"<ocl>self</ocl>\" richtig sind? Plausibel?
checklist.operation.value.express-preconditions-possible = K\u00f6nnen Sie die Vorbedingungen von \"<ocl>self</ocl>\" ausdr\u00fccken?
checklist.operation.value.express-postconditions-possible = K\u00f6nnen Sie die Nachbedingungen von \"<ocl>self</ocl>\" ausdr\u00fccken?
checklist.operation.value.how-behave-preconditions-violated = Wie wird sich \"<ocl>self</ocl>\" verhalten, wenn die Vorbedingungen verletzt werden?
checklist.operation.value.how-behave-postconditions-not-achieved = Wie wird sich \"<ocl>self</ocl>\" verhalten, wenn die Nachbedingungen nicht erreicht werden?
checklist.operation.location = Location
checklist.operation.location.move-somewhere = Kann \"<ocl>self</ocl>\" in einer anderen Klasse definiert werden, die mit <ocl>self.owner</ocl> assoziiert ist?
checklist.operation.location.move-up-hierarchy = Kann \"<ocl>self</ocl>\" die Vererbungshierarchie hochsteigen, um es f\u00fcr den owner.name und mit anderen Klassen zu verwenden?
checklist.operation.location.include-all = Kann \"<ocl>self</ocl>\" auf alle Instanzen der Klasse <ocl>self.owner</ocl>, einschlie\u00dflich der Instanzen der Unterklassen angewendet werden?
checklist.operation.location.could-be-eliminated = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.operation.location.eliminates-or-affects-something-else = Gibt es eine andere Methode im Modell, die \u00fcberarbeitet oder entfernt werden sollte, weil sie dem gleichen Zweck wie \"<ocl>self</ocl>\" dient?
checklist.association.naming = Naming
checklist.association.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Klasse?
checklist.association.naming.is-noun = 	Ist \"<ocl>self</ocl>\" ein Substantiv oder ein substantiv\u00e4hnlicher Ausdruck?
checklist.association.naming.misinterpret = Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.association.encoding = Encoding
checklist.association.encoding.convert-to-attribute = Sollte \"<ocl>self</ocl>\" eine eigene Klasse bilden, oder nur ein einfaches Attribut einer anderen Klasse sein?
checklist.association.encoding.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.association.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Klassen heruntergebrochen werden?
checklist.association.value = Value
checklist.association.value.start-with-meaningful-values = Starten alle Attribute von \"<ocl>self</ocl>\" mit sinnvollen Werten?
checklist.association.value.convert-to-invariant = K\u00f6nnen Sie eine Invariante f\u00fcr diese Klasse schreiben?
checklist.association.value.establish-invariant-in-constructors = Etablieren alle Konstruktoren die Klassen-Invariante?
checklist.association.value.maintain-invariant = Behandeln alle Methoden die Klassen-Invariante?
checklist.association.location = Location
checklist.association.location.move-somewhere = Kann \"<ocl>self</ocl>\" an einer anderen Stelle in der Klassenhierarchie definiert werden?
checklist.association.location.planned-subclasses = Haben Sie eine Unterklasse von \"<ocl>self</ocl>\" geplant?
checklist.association.location.eliminate-from-model = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.association.location.eliminates-or-affects-something-else = Gibt es im Modell eine andere Klasse, die \u00fcberarbeitet oder entfernt werden sollte, weil sie dem gleichen Zweck dient wie \"<ocl>self</ocl>\"?
checklist.association.updates = Updates
checklist.association.updates.reasons-for-update = In welchen Fall wird eine Instanz von \"<ocl>self</ocl>\" aufgefrischt?
checklist.association.updates.affects-something-else = Gibt es andere Objekte, die immer aufgefrischt werden m\u00fcssen, wenn \"<ocl>self</ocl>\" aufgefrischt wurde?
checklist.interface.naming = Naming
checklist.interface.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Klasse?
checklist.interface.naming.is-noun = 	Ist \"<ocl>self</ocl>\" ein Substantiv oder ein substantiv\u00e4hnlicher Ausdruck?
checklist.interface.naming.misinterpret = Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.interface.encoding = Encoding
checklist.interface.encoding.convert-to-attribute = Sollte \"<ocl>self</ocl>\" eine eigene Klasse bilden, oder nur ein einfaches Attribut einer anderen Klasse sein?
checklist.interface.encoding.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.interface.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Klassen heruntergebrochen werden?
checklist.interface.value = Value
checklist.interface.value.start-with-meaningful-values = Starten alle Attribute von \"<ocl>self</ocl>\" mit sinnvollen Werten?
checklist.interface.value.convert-to-invariant = K\u00f6nnen Sie eine Invariante f\u00fcr diese Klasse schreiben?
checklist.interface.value.establish-invariant-in-constructors = Etablieren alle Konstruktoren die Klassen-Invariante?
checklist.interface.value.maintain-invariant = Behandeln alle Methoden die Klassen-Invariante?
checklist.interface.location = Location
checklist.interface.location.move-somewhere = Kann \"<ocl>self</ocl>\" an einer anderen Stelle in der Klassenhierarchie definiert werden?
checklist.interface.location.planned-subclasses = Haben Sie eine Unterklasse von \"<ocl>self</ocl>\" geplant?
checklist.interface.location.eliminate-from-model = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.interface.location.eliminates-or-affects-something-else = Gibt es im Modell eine andere Klasse, die \u00fcberarbeitet oder entfernt werden sollte, weil sie dem gleichen Zweck dient wie \"<ocl>self</ocl>\"?
checklist.interface.updates = Updates
checklist.interface.updates.reasons-for-update = In welchen Fall wird eine Instanz von \"<ocl>self</ocl>\" aufgefrischt?
checklist.interface.updates.affects-something-else = Gibt es andere Objekte, die immer aufgefrischt werden m\u00fcssen, wenn \"<ocl>self</ocl>\" aufgefrischt wurde?
checklist.instance.general = General
checklist.instance.general.describe-clearly = Ist diese Instanz \"<ocl>self</ocl>\" klar beschrieben?
checklist.instance.naming = Naming
checklist.instance.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Instanz?
checklist.instance.naming.denotes-state = Beschreibt \"<ocl>self</ocl>\" mehr einen Zustand als eine Aktivit\u00e4t?
checklist.instance.naming.misinterpret = Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.instance.structure = Structure
checklist.instance.structure.merged-with-other = Sollte \"<ocl>self</ocl>\" seinen eigenen Zustand darstellen, oder kann er mit einem anderen Zustand gemischt werden?
checklist.instance.structure.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.instance.structure.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Zust\u00e4nde unterteilt werden?
checklist.instance.structure.can-write-characteristic-equation = K\u00f6nnen Sie eine charakteristische Gleichung f\u00fcr \"<ocl>self</ocl>\" schreiben?
checklist.instance.structure.belong = 	Geh\u00f6rt \"<ocl>self</ocl>\" zu diesem oder zu einem anderen Zustandsautomaten?
checklist.instance.structure.make-internal = Sollte \"<ocl>self</ocl>\" ein Anfangszustand sein?
checklist.instance.structure.is-state-in-another-machine-exclusive = Geh\u00f6ren einige Zust\u00e4nde im anderen Zustandsautomaten exklusiv zu \"<ocl>self</ocl>\"?
checklist.instance.actions = Actions
checklist.instance.actions.list-entry-actions = Welche Aktion soll beim Eintritt in \"<ocl>self</ocl>\" ausgef\u00fchrt werden?
checklist.instance.actions.update-attribute-on-entry = Sollten einige Attribute beim Eintritt in \"<ocl>self</ocl>\" aktualisiert werden?
checklist.instance.actions.list-exit-action = Welche Aktion sollte beim Verlassen von \"<ocl>self</ocl>\" ausgef\u00fchrt werden?
checklist.instance.actions.update-attribute-on-exit = Sollten einige Attribute beim Verlassen von \"<ocl>self</ocl>\" aktualisiert werden?
checklist.instance.actions.list-do-action = Welche Aktionen sollen innerhalb von \"<ocl>self</ocl>\" ausgef\u00fchrt werden?
checklist.instance.actions.maintained-state = Verarbeiten Zustandsaktionen \"<ocl>self</ocl>\" als aktuellen Zustand?
checklist.instance.transitions = Transitions
checklist.instance.transitions.need-another-transition-into = Sollte es einen anderen Zustands\u00fcbergang zu \"<ocl>self</ocl>\" geben?
checklist.instance.transitions.use-all-transitions-into = K\u00f6nnen alle Zustands\u00fcberg\u00e4nge in \"<ocl>self</ocl>\" verwendet werden?
checklist.instance.transitions.combine-with-other-incoming = K\u00f6nnen einige kommende Zustands\u00fcberg\u00e4nge kombiniert werden?
checklist.instance.transitions.need-another-transition-out-of = Sollte es einen anderen Zustands\u00fcbergang gehend von \"<ocl>self</ocl>\" geben?
checklist.instance.transitions.use-all-transitions-out-of = K\u00f6nnen alle gehenden Zustands\u00fcberg\u00e4nge von \"<ocl>self</ocl>\" verwendet werden?
checklist.instance.transitions.are-transitions-out-of-exclusive = Ist jeder gehende Zustands\u00fcbergang exklusiv?
checklist.instance.transitions.combine-with-other-outgoing = K\u00f6nnen einige gehende Zustands\u00fcberg\u00e4nge kombiniert werden?
checklist.link.naming = Naming
checklist.link.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Klasse?
checklist.link.naming.is-noun = 	Ist \"<ocl>self</ocl>\" ein Substantiv oder ein substantiv\u00e4hnlicher Ausdruck?
checklist.link.naming.misinterpret = 	Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.link.encoding = Encoding
checklist.link.encoding.convert-to-attribute = Sollte \"<ocl>self</ocl>\" eine eigene Klasse bilden, oder nur ein einfaches Attribut einer anderen Klasse sein?
checklist.link.encoding.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.link.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Klassen heruntergebrochen werden?
checklist.link.value = Value
checklist.link.value.start-with-meaningful-values = Starten alle Attribute von \"<ocl>self</ocl>\" mit sinnvollen Werten?
checklist.link.value.convert-to-invariant = K\u00f6nnen Sie eine Invariante f\u00fcr diese Klasse schreiben?
checklist.link.value.establish-invariant-in-constructors = Etablieren alle Konstruktoren die Klassen-Invariante?
checklist.link.value.maintain-invariant = Behandeln alle Methoden die Klassen-Invariante?
checklist.link.location = Location
checklist.link.location.move-somewhere = Kann \"<ocl>self</ocl>\" an einer anderen Stelle in der Klassenhierarchie definiert werden?
checklist.link.location.planned-subclasses = Haben Sie eine Subklasse von \"<ocl>self</ocl>\" geplant?
checklist.link.location.eliminate-from-model = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.link.location.eliminates-or-affects-something-else = Gibt es im Modell eine andere Klasse, die \u00fcberarbeitet oder entfernt werden sollte, weil sie dem gleichen Zweck dient wie \"<ocl>self</ocl>\"?
checklist.link.updates = Updates


checklist.state.naming = Naming
checklist.state.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung des Zustandes?
checklist.state.naming.denotes-state = 	Beschreibt \"<ocl>self</ocl>\" mehr einen Zustand als eine Aktivit\u00e4t?
checklist.state.naming.misinterpret = 	Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.state.structure = Structure
checklist.state.structure.merged-with-other = Sollte \"<ocl>self</ocl>\" seinen eigenen Zustand darstellen, oder kann er mit einem anderen Zustand gemischt werden?
checklist.state.structure.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.state.structure.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Zust\u00e4nde unterteilt werden?
checklist.state.structure.can-write-characteristic-equation = K\u00f6nnen Sie eine charakteristische Gleichung f\u00fcr \"<ocl>self</ocl>\" schreiben?
checklist.state.structure.belong = 	Geh\u00f6rt \"<ocl>self</ocl>\" zu diesem oder zu einem anderen Zustandsautomaten?
checklist.state.structure.make-internal = Sollte \"<ocl>self</ocl>\" ein Anfangszustand sein?
checklist.state.structure.is-state-in-another-machine-exclusive = Geh\u00f6ren einige Zust\u00e4nde im anderen Zustandsautomaten exklusiv zu \"<ocl>self</ocl>\"?
checklist.state.actions = Actions
checklist.state.actions.list-entry-actions = Welche Aktion soll beim Eintritt in \"<ocl>self</ocl>\" ausgef\u00fchrt werden?
checklist.state.actions.update-attribute-on-entry = Sollten einige Attribute beim Eintritt in \"<ocl>self</ocl>\" aktualisiert werden?
checklist.state.actions.list-exit-action = Welche Aktion sollte beim Verlassen von \"<ocl>self</ocl>\" ausgef\u00fchrt werden?
checklist.state.actions.update-attribute-on-exit = Sollten einige Attribute beim Verlassen von \"<ocl>self</ocl>\" aktualisiert werden?
checklist.state.actions.list-do-action = Welche Aktionen sollen innerhalb von \"<ocl>self</ocl>\" ausgef\u00fchrt werden?
checklist.state.actions.maintained-state = Verarbeiten Zustandsaktionen \"<ocl>self</ocl>\" als aktuellen Zustand?
checklist.state.transitions = Transitions
checklist.state.transitions.need-another-transition-into = Sollte es einen anderen Zustands\u00fcbergang zu \"<ocl>self</ocl>\" geben?
checklist.state.transitions.use-all-transitions-into = K\u00f6nnen alle Zustands\u00fcberg\u00e4nge in \"<ocl>self</ocl>\" verwendet werden?
checklist.state.transitions.combine-with-other-incoming = K\u00f6nnen einige kommende Zustands\u00fcberg\u00e4nge kombiniert werden?
checklist.state.transitions.need-another-transition-out-of = Sollte es einen anderen Zustands\u00fcbergang gehend von \"<ocl>self</ocl>\" geben?
checklist.state.transitions.use-all-transitions-out-of = K\u00f6nnen alle gehenden Zustands\u00fcberg\u00e4nge von \"<ocl>self</ocl>\" verwendet werden?
checklist.state.transitions.are-transitions-out-of-exclusive = Ist jeder gehende Zustands\u00fcbergang exklusiv?
checklist.state.transitions.combine-with-other-outgoing = K\u00f6nnen einige gehende Zustands\u00fcberg\u00e4nge kombiniert werden?
checklist.transition.structure = Structure
checklist.transition.structure.start-somewhere-else = Sollte dieser Zustands\u00fcbergang eine andere Quelle starten?
checklist.transition.structure.end-somewhere-else = Sollte dieser Zustands\u00fcbergang an einem anderen Ziel enden?
checklist.transition.structure.need-another-like-this = Sollte es einen anderen Zustands\u00fcbergang \"wie\" diesen geben?
checklist.transition.structure.unneeded-because-of-this = Ist ein anderer Zustands\u00fcbergang wegen diesem hier unn\u00f6tig?
checklist.transition.trigger = Trigger
checklist.transition.trigger.needed = 	Ben\u00f6tigt dieser Zustands\u00fcbergang ein Signal?
checklist.transition.trigger.happen-too-often = Werden zu oft Signale ausgel\u00f6st?
checklist.transition.trigger.happen-too-rarely = Werden zu selten Signale ausgel\u00f6st?
checklist.transition.guard = Guard
checklist.transition.guard.taken-too-often = K\u00f6nnte dieser Zustands\u00fcbergang zu oft verwendet werden?
checklist.transition.guard.is-too-restrictive = Ist die Bedingung dieses Zustands\u00fcberganges zu streng?
checklist.transition.guard.break-into-parts = Kann er in zwei oder mehrere Zustands\u00fcberg\u00e4nge aufgeteilt werden?
checklist.transition.actions = Actions
checklist.transition.actions.should-have = Sollte dieser Zustands\u00fcbergang eine Aktion haben?
checklist.transition.actions.should-have-exit = Sollte diese Zustands\u00fcbergangs-Aktion eine Verlassen-Aktion sein?
checklist.transition.actions.should-have-entry = Sollte diese Zustands\u00fcbergangs-Aktion eine Eintritt-Aktion sein?
checklist.transition.actions.is-precondition-met = Tritt die Vorbedingung der Aktion immer ein?
checklist.transition.actions.is-postcondition-consistant-with-destination = Ist die Nachbedingung der Aktion mit dem Ziel konsistent?
checklist.usecase.naming = Naming
checklist.usecase.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Klasse?
checklist.usecase.naming.is-noun = 	Ist \"<ocl>self</ocl>\" ein Substantiv oder ein substantiv\u00e4hnlicher Ausdruck?
checklist.usecase.naming.misinterpret = Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.usecase.encoding = Encoding
checklist.usecase.encoding.convert-to-attribute = Sollte \"<ocl>self</ocl>\" eine eigene Klasse bilden, oder nur ein einfaches Attribut einer anderen Klasse sein?
checklist.usecase.encoding.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.usecase.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Klassen heruntergebrochen werden?
checklist.usecase.value = Value
checklist.usecase.value.start-with-meaningful-values = Starten alle Attribute von \"<ocl>self</ocl>\" mit sinnvollen Werten?
checklist.usecase.value.convert-to-invariant = K\u00f6nnen Sie eine Invariante f\u00fcr diese Klasse schreiben?
checklist.usecase.value.establish-invariant-in-constructors = Etablieren alle Konstruktoren die Klassen-Invariante?
checklist.usecase.value.maintain-invariant = Behandeln alle Methoden die Klassen-Invariante?
checklist.usecase.location = Location
checklist.usecase.location.move-somewhere = Kann \"<ocl>self</ocl>\" an einer anderen Stelle in der Klassenhierarchie definiert werden?
checklist.usecase.location.planned-subclasses = Haben Sie eine Unterklasse von \"<ocl>self</ocl>\" geplant?
checklist.usecase.location.eliminate-from-model = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.usecase.location.eliminates-or-affects-something-else = Gibt es im Modell eine andere Klasse, die \u00fcberarbeitet oder entfernt werden sollte, weil sie dem gleichen Zweck dient wie \"<ocl>self</ocl>\"?
checklist.usecase.updates = Updates
checklist.usecase.updates.reasons-for-update = In welchen Fall wird eine Instanz von \"<ocl>self</ocl>\" aufgefrischt?
checklist.usecase.updates.affects-something-else = Gibt es andere Objekte, die immer aufgefrischt werden m\u00fcssen, wenn \"<ocl>self</ocl>\" aufgefrischt wurde?
checklist.actor.naming = Naming
checklist.actor.naming.describe-clearly = Gibt der Name \"<ocl>self</ocl>\" eine klare Beschreibung der Klasse?
checklist.actor.naming.is-noun = 	Ist \"<ocl>self</ocl>\" ein Substantiv oder ein substantiv\u00e4hnlicher Ausdruck?
checklist.actor.naming.misinterpret = 	Kann der Name \"<ocl>self</ocl>\" falsch interpretiert werden und etwas anderes bedeuten?
checklist.actor.encoding = Encoding
checklist.actor.encoding.convert-to-attribute = Sollte \"<ocl>self</ocl>\" eine eigene Klasse bilden, oder nur ein einfaches Attribut einer anderen Klasse sein?
checklist.actor.encoding.do-just-one-thing = Tut \"<ocl>self</ocl>\" exakt eine einzige Sache und tut sie es richtig?
checklist.actor.encoding.break-into-parts = Kann \"<ocl>self</ocl>\" in zwei oder mehrere Klassen heruntergebrochen werden?
checklist.actor.value = Value
checklist.actor.value.start-with-meaningful-values = Starten alle Attribute von \"<ocl>self</ocl>\" mit sinnvollen Werten?
checklist.actor.value.convert-to-invariant = K\u00f6nnen Sie eine Invariante f\u00fcr diese Klasse schreiben?
checklist.actor.value.establish-invariant-in-constructors = Etablieren alle Konstruktoren die Klassen-Invariante?
checklist.actor.value.maintain-invariant = Behandeln alle Methoden die Klassen-Invariante?
checklist.actor.location = Location
checklist.actor.location.move-somewhere = Kann \"<ocl>self</ocl>\" an einer anderen Stelle in der Klassenhierarchie definiert werden?
checklist.actor.location.planned-subclasses = Haben Sie eine Unterklasse von \"<ocl>self</ocl>\" geplant?
checklist.actor.location.eliminate-from-model = Kann \"<ocl>self</ocl>\" aus dem Modell entfernt werden?
checklist.actor.location.eliminates-or-affects-something-else = Gibt es im Modell eine andere Klasse, die \u00fcberarbeitet oder entfernt werden sollte, weil sie dem gleichen Zweck dient wie \"<ocl>self</ocl>\"?
checklist.actor.updates = Updates
checklist.actor.updates.reasons-for-update = In welchen Fall wird eine Instanz von \"<ocl>self</ocl>\" aufgefrischt?
checklist.actor.updates.affects-something-else = Gibt es andere Objekte, die immer aufgefrischt werden m\u00fcssen, wenn \"<ocl>self</ocl>\" aufgefrischt wurde?












































































































































































































































































