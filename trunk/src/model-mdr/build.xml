<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$
// Copyright (c) 2005-2006 The Regents of the University of California. All
// Rights Reserved. Permission to use, copy, modify, and distribute this
// software and its documentation without fee, and without a written
// agreement is hereby granted, provided that the above copyright notice
// and this paragraph appear in all copies.  This software program and
// documentation are copyrighted by The Regents of the University of
// California. The software program and documentation are supplied "AS
// IS", without any accompanying services from The Regents. The Regents
// does not warrant that the operation of the program will be
// uninterrupted or error-free. The end-user understands that the program
// was developed for research purposes and is advised not to rely
// exclusively on the program for any reason.  IN NO EVENT SHALL THE
// UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
// SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.

This is the build file for building the MDR version of the Model subsystem.

For this file to work you need to have argouml either checked out alongside
this directory and built using the package target or downloaded a release
and unpacked in a directory argouml/build alongside this one. Like this:

argouml-mdr/build.xml <- This file.
argouml/build/argouml-model.jar
argouml/build/log4j.jar
argouml/build/xml-apis.jar
argouml/build/xercesImpl.jar
etc.
  -->

<project basedir="." default="compile" name="ArgoUML MDR Model subsystem">
  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <!-- TODO: This should inherit more from the argouml project (compile
         settings, JUnit version, etc), but since they are supposed to get
         merged we won't clean up now - tfm
      -->
    <tstamp/>
    <property name="build.dir" value="build"/>
    <property name="build.classes" value="${build.dir}/classes"/>
    <property name="build.javas" value="${build.dir}/java"/>

    <property name="tests.classes" value="${build.dir}/tests/classes"/>
    <property name="tests.reports" value="${build.dir}/tests/reports"/>

    <property name="lib.dir" value="lib" /> 

    <property name="debug" value="yes"/>
    <property name="deprecation" value="yes"/>
    <property name="optimize" value="yes"/>

    <property name="argo.root.dir" value="../argouml"/>
    <property name="argo.build.dir" value="${argo.root.dir}/build"/>

    <property name="result.jar" value="argouml-mdr.jar"/>
    <property name="javainterfaces.jar" value="java-interfaces.jar"/>

    <property name="mdrant.jar" value="tools/lib/mdrant.jar" /> 
    <property name="mof.jar" value="${lib.dir}/mof.jar" /> 
    <property name="jmi.jar" value="${lib.dir}/jmi.jar" /> 
    <property name="mdrapi.jar" value="${lib.dir}/mdrapi.jar" /> 
    <property name="nbmdr.jar" value="${lib.dir}/nbmdr.jar" /> 
    <property name="jmiutils.jar" value="${lib.dir}/jmiutils.jar" /> 
    <property name="openide-lookup.jar" value="${lib.dir}/openide-util.jar" /> 
        
    <path id="mdr.generate.classpath">
      <pathelement location="${mdrant.jar}" /> 
      <pathelement location="${nbmdr.jar}" /> 
      <pathelement location="${mdrapi.jar}" /> 
      <pathelement location="${jmiutils.jar}" /> 
      <pathelement location="${mof.jar}" /> 
      <pathelement location="${jmi.jar}" /> 
      <pathelement location="${openide-lookup.jar}" /> 
    </path>
        
    <path id="mdr.compile.classpath">
      <path refid="mdr.generate.classpath"/>
      <pathelement location="${build.dir}/${javainterfaces.jar}"/>
    </path>

    <path id="mdr.run.classpath">
      <path refid="mdr.compile.classpath"/>
    </path>
                
    <path id="compile.classpath">
      <pathelement location="${argo.build.dir}/log4j.jar"/>
        <pathelement location="${argo.build.dir}/argouml-model.jar"/>
      <path refid="mdr.compile.classpath"/>
    </path>

    <property name="junit.jar.path"
              value="${argo.root.dir}/tools/junit-3.8.1/junit.jar"/> 

    <path id="junit.classpath">
      <pathelement location="${build.classes}"/>
      <pathelement location="${junit.jar.path}"/>
      <path refid="compile.classpath"/>
    </path>

    <path id="run.classpath">
      <fileset dir="${argo.build.dir}" includes="*.jar"/>
      <path refid="mdr.run.classpath"/>
    </path>

    <property name="xmi-file.path" value="org/argouml/model/mdr/mof"/>
        
    <!-- Implementation classes for UML 1.4 are generated from this file -->
    <!-- When changing to a different UML metamodel, be sure to use the 
         _Diff file which adds the Java specific tags for JMI, not the
         base OMG file
      -->
    <property name="xmi-file" value="src/${xmi-file.path}/01-02-15_Diff" /> 

    <taskdef name="mdr" classname="org.netbeans.mdrant.MdrTask">
      <classpath>
        <path refid="mdr.generate.classpath" />
      </classpath>
    </taskdef>
        
    <path id="ant.optional.classpath">
      <pathelement location="${ant.home}/libopt/ant-junit.jar"/>
      <pathelement location="${junit.jar.path}"/>
    </path>
        
    <taskdef classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" name="junit">
      <classpath refid="ant.optional.classpath"/>
    </taskdef>

    <taskdef classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator" name="junitreport">
      <classpath>
         <path refid="ant.optional.classpath"/>
      </classpath>
    </taskdef>

  </target>


  <!-- =================================================================== -->
  <!-- Generate the interfaces                                             -->
  <!-- =================================================================== -->
  <target name="generate" depends="init,generate-needed,generate-skipped" 
      description="Generate the JMI interfaces for a UML metamodel."
      unless="generate.notRequired">
    <!-- create directories -->
    <mkdir dir="${build.dir}"/>
    <delete dir="${build.javas}"/>
    <mkdir dir="${build.javas}"/>

    <!-- NOTE: When called from the main argouml build.xml, the storage
               file (but not any of the others) will be generated relative
               to that root, not our current directory.  This will cause
               obscure build failures if the corresponding directory
               doesn't exist in the main argouml project.  Typical error is
               DebugException: leave() without enter()
    -->
    <echo message="Generating JMI interfaces from ${xmi-file}"/>
    <mdr storageFile="${build.javas}/mymdr">
      <instantiate name="mof4models" /> 
      <readXMI file="${xmi-file}.xml" extent="mof4models" /> 
      <mapJava dir="${build.javas}" extent="mof4models" /> 
      
      <!-- not sure this is correct, but try to generate a DTD -->
      <instantiate name="uml" extent="mof4models" package="UML"/> 
      <writeDTD file="${build.dir}/UML14.dtd" extent="uml"/>

      <!-- Other functions available
      <writeXMI file="${storageDir}/${model}/xmi/${xmi-file}.xml" extent="mof4models" xmiVersion="1.2"/>
      <writeDTD file="${storageDir}/${model}/xmi/${xmi-file}.dtd" extent="mof4models"/>
      <mapClass dir="${build.javas}" extent="mof4models" /> 
      <printExtentNames/>
      -->
    </mdr>

    <javac srcdir="${build.javas}" source="1.4" target="1.4">
      <classpath>
        <pathelement location="${jmi.jar}" /> 
      </classpath>
    </javac>

    <jar basedir="${build.javas}"
         includes="**/*.class"
         jarfile="${build.dir}/${javainterfaces.jar}"/>
  </target>

  <target name="generate-needed" depends="init">
    <uptodate property="generate.notRequired" 
      srcfile="${xmi-file}.xml"
      targetfile="${build.dir}/${javainterfaces.jar}" >
    </uptodate>

  </target>

  <target name="generate-skipped" if="generate.notRequired">
    <echo message="${build.dir}/${javainterfaces.jar} is up to date"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Run from classes                                                    -->
  <!-- =================================================================== -->
  <target name="run" depends="compile"
          description="Run ArgoUML with MDR model implementation.">
    <java classname="org.argouml.application.Main"
          fork="yes"
          taskname="argouml"
          maxmemory="500M">
      <sysproperty key="log4j.configuration"
                   value="org/argouml/resource/warn_console.lcf"/>
      <!-- the following is redundant since it's the default, but leave for now -->
      <sysproperty key="argouml.model.implementation"
                   value="org.argouml.model.mdr.MDRModelImplementation"/>
      <sysproperty key="org.netbeans.lib.jmi.Logger"
                   value="0"/>
      <classpath>
        <pathelement location="${build.classes}"/>
        <path refid="run.classpath"/>
      </classpath>
    </java>
  </target>
        


  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile"
          depends="init,generate"
          description="Compile the sources.">
    <!-- create directories -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes}"/>

    <javac srcdir="src"
           destdir="${build.classes}"
           includes="org/argouml/**/*.java"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}"
           source="1.4"
           target="1.4"
       >
       <classpath>
         <path refid="compile.classpath"/>
       </classpath>
    </javac>
    <copy todir="${build.classes}">
      <fileset dir="src">
        <include name="**/*.xsl"/>
        <include name="${xmi-file.path}/**"/>
      </fileset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the jar file                                                -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile"
          description="Build the ${result.jar} file.">
    <jar basedir="${build.classes}"
         includes="org/argouml/**"
         manifest="src/manifest.mf"
         jarfile="${build.dir}/${result.jar}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Install the jar file                                                -->
  <!-- =================================================================== -->
  <target name="install" depends="jar"
          description="Copy the ${result.jar} file to the ArgoUML directory.">
    <copy todir="${argo.build.dir}">
      <fileset dir="${build.dir}" includes="*.jar"/>
      <fileset dir="${lib.dir}" includes="*.jar"/>
    </copy>
    <copy file="argouml-mdr.bat" tofile="${argo.build.dir}/argouml.bat"/>
    <copy file="argouml-mdr.sh"  tofile="${argo.build.dir}/argouml.sh"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the tests directory                                        -->
  <!-- =================================================================== -->
  <target name="compile-tests"
          depends="init,compile">
    <!-- create directories -->
    <mkdir dir="${tests.classes}"/>

    <javac srcdir="tests"
           destdir="${tests.classes}"
           includes="org/argouml/**/*.java"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}"
           source="1.4"
           target="1.4"
       >
       <classpath>
         <path refid="junit.classpath"/>
         <path>
           <fileset dir="${argo.build.dir}">
             <include name="*.jar"/>
           </fileset>
         </path>
       </classpath>
    </javac>
        
  </target>

  <!-- =================================================================== -->
  <!-- Clean out the tests                                                 -->
  <!-- =================================================================== -->
  <target name="junit-report-clean">
    <mkdir dir="${tests.reports}/junit/output"/>
    <mkdir dir="${tests.reports}/junit/output/html"/>
    <delete>
      <fileset dir="${tests.reports}/junit/output">
        <include name="TEST-*.xml"/>
        <include name="TEST-*.txt"/>
      </fileset>
    </delete>
  </target>

  <!-- =================================================================== -->
  <!-- Create the report                                                   -->
  <!-- =================================================================== -->
  <target name="junit-report-create">
    <junitreport todir="${tests.reports}/junit/output">
      <fileset dir="${tests.reports}/junit/output">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${tests.reports}/junit/output/html"/>
    </junitreport>
  </target>

  <!-- =================================================================== -->
  <!-- Runs the tests                                                      -->
  <!-- =================================================================== -->
  <target name="tests"
          depends="init,compile,compile-tests,junit-report-clean">
    <!-- create directories -->
    <mkdir dir="${tests.classes}"/>

    <junit errorproperty="junit.failure" fork="yes" haltonfailure="false"
           maxmemory="256M" printsummary="true">
        <sysproperty key="log4j.configuration"
                   value="org/argouml/resource/info_console.lcf"/>
        <sysproperty key="argouml.model.implementation"
                   value="org.argouml.model.mdr.MDRModelImplementation"/>
        <classpath>
        <pathelement location="${tests.classes}"/>
        <path refid="junit.classpath"/>
        <path refid="run.classpath"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="${tests.reports}/junit/output">
        <fileset dir="tests">
          <include name="org/argouml/**/Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <antcall target="junit-report-create"/>
  </target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init"
          description="Clean out all built files.">
    <delete dir="${build.dir}" quiet="true"/>
  </target>
        
</project>
