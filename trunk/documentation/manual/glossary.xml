<?xml version="1.0" encoding="UTF-8"?>
<!--

The glossary for the user manual. Some cross-references are not available at
present. Look for comments with "Fix when ready" in them.

Modifications
=============

30 Nov 2001:  Jeremy Bennett. Created as a top level file including other
              sections from the original manual by Alejandro, Phillipe and
              Andreas.

-->

<glossary id="glossary">        
  <title>Glossary</title>

  <!-- A -->

  <glossdiv>
    <title>A</title>

    <!-- Activity Diagram -->

    <glossentry id="gl.activitydiag">
      <glossterm>Activity Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>Activity Diagram</primary>
      </indexterm>
      <indexterm>
	<primary>Diagram</primary>
	<secondary>Activity</secondary>
      </indexterm>

        <para>A UML diagram capturing the dynamic behavior of a system or
sub-system.
See <xref linkend="s1.umlactivitydiags"/> for more information.
</para>
      </glossdef>
    </glossentry>

    <!-- Action -->

    <glossentry id="gl.action">
      <glossterm>Action</glossterm>

      <glossdef>
      <indexterm>
        <primary>Action</primary>
      </indexterm>

        <para>Behavior associated with <emphasis>States</emphasis> or
          <emphasis>Transitions</emphasis> in <emphasis>State
          Diagram</emphasis>. These actions are invocations of
          <emphasis>Methods</emphasis> and appear on
          <emphasis>Sequence</emphasis> and <emphasis>Collaboration
          Diagrams</emphasis>.</para>

        <glossseealso otherterm="gl.collabdiag"/>
        <glossseealso otherterm="gl.seqdiag"/>
        <glossseealso otherterm="gl.state"/>
        <glossseealso otherterm="gl.statediag"/>
        <glossseealso otherterm="gl.transition"/>
      </glossdef>
    </glossentry>

    <!-- Actor -->

    <glossentry id="gl.actor">
      <glossterm>Actor</glossterm>

      <glossdef>
      <indexterm>
        <primary>Actor</primary>
      </indexterm>

        <para>A representation of an agent (animate or inanimate) on a
          <emphasis>Use Case Diagram</emphasis> external to the system being
          designed.</para>

        <glossseealso otherterm="gl.usecase"/>
        <glossseealso otherterm="gl.usecasediag"/>
      </glossdef>
    </glossentry>

    <!-- Analysis -->

    <glossentry id="gl.analysis">
      <glossterm>Analysis</glossterm>

      <glossdef>
      <indexterm>
        <primary>Analysis</primary>
      </indexterm>

        <para>Analysis is the process of taking the <quote>customer</quote>
         requirements and re-casting them in the language of, and from the
         perspective of, a putative solution.</para>
      </glossdef>
    </glossentry>

    <!-- Association Class -->

    <glossentry id="gl.assocclass">
      <glossterm>Association Class</glossterm>

      <glossdef>
      <indexterm>
        <primary>Association Class</primary>
      </indexterm>

        <para>A class that characterises the association between two other
          clases.</para>

        <glossseealso otherterm="gl.class"/>
      </glossdef>
    </glossentry>

    <!-- Association -->

    <glossentry id="gl.association">
      <glossterm>Association</glossterm>

      <glossdef>
      <indexterm>
        <primary>Association</primary>
      </indexterm>

        <para>A relationship between two classes in a Class Diagram or between
          Use Cases or Use Cases and Actors in a Use Case Diagram.</para>

        <glossseealso otherterm="gl.actor"/>
        <glossseealso otherterm="gl.classdiag"/>
        <glossseealso otherterm="gl.usecase"/>
        <glossseealso otherterm="gl.usecasediag"/>
      </glossdef>
    </glossentry>

    <!-- Attribute -->

    <glossentry id="gl.attribute">
      <glossterm>Attribute (of a Class or Object)</glossterm>

      <glossdef>
      <indexterm>
        <primary>Attribute</primary>
	<secondary>of a Class</secondary>
      </indexterm>
      <indexterm>
        <primary>Attribute</primary>
	<secondary>of an Object</secondary>
      </indexterm>

        <para>An attribute of a class or object is a specification of a data
          element encapsulated by that object.</para>

        <glossseealso otherterm="gl.class"/>
        <glossseealso otherterm="gl.method"/>
        <glossseealso otherterm="gl.object"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- B -->

  <!-- C -->

  <glossdiv>
    <title>C</title>

    <!-- CASE -->

    <glossentry id="gl.case">
      <glossterm>CASE</glossterm>

      <glossdef>
      <indexterm>
        <primary>CASE</primary>
      </indexterm>

        <para>Computer Aided Sofware Engineering.</para>
      </glossdef>
    </glossentry>

    <!-- Class -->

    <glossentry id="gl.class">
      <glossterm>Class</glossterm>

      <glossdef>
      <indexterm>
        <primary>Class</primary>
      </indexterm>

        <para>The encapsulation of the data associated with an artifact (its
          <emphasis>attributes</emphasis>) and the actions associated with the
          artifact (its <emphasis>methods</emphasis>).</para>

        <para>A class specifies the characteristics of an artifact. An
          <emphasis>object</emphasis> represents an instance of the
          artifact.</para>

        <para>Classes and objects in UML are represented on <emphasis>Activity
          Diagrams</emphasis>, <emphasis>Class Diagrams</emphasis>,
          <emphasis>Collaboration Diagrams</emphasis> and <emphasis>Sequence
          Diagrams</emphasis>.</para>

        <glossseealso otherterm="gl.activitydiag"/>
        <glossseealso otherterm="gl.attribute"/>
        <glossseealso otherterm="gl.classdiag"/>
        <glossseealso otherterm="gl.collabdiag"/>
        <glossseealso otherterm="gl.method"/>
        <glossseealso otherterm="gl.object"/>
        <glossseealso otherterm="gl.seqdiag"/>
      </glossdef>
    </glossentry>

    <!-- Class Diagram -->

    <glossentry id="gl.classdiag">

      <glossterm>Class Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>Class Diagram</primary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>Class</secondary>
      </indexterm>

        <para>A UML Diagram showing the structural relationship between
          classes. See
          <xref linkend="s1.umlclassdiags"/> for more information.</para>

        <glossseealso otherterm="gl.class"/>
      </glossdef>
    </glossentry>

    <!-- Collaboration Diagram -->

    <glossentry id="gl.collabdiag">
      <glossterm>Collaboration Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>Collaboration Diagram</primary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>Collaboration</secondary>
      </indexterm>

        <para>A UML Diagram showing the dyanamic behavior as messages are
          passed between objects. Equivalent to a <emphasis>Sequence
          Diagram</emphasis>. Which representation is appropriate depends on
          the problem under consideration. See

          <!-- Fix when ready <xref linkend="s1.umlcollabdiags"/> -->

          for more information.</para>

        <glossseealso otherterm="gl.seqdiag"/>
      </glossdef>
    </glossentry>

    <!-- Comprehension and Problem Solving -->

    <glossentry id="gl.comprehension">
      <glossterm>Comprehension and Problem Solving</glossterm>

      <glossdef>
      <indexterm>
        <primary>Comprehension</primary>
      </indexterm>
      <indexterm>
        <primary>Problem Solving</primary>
      </indexterm>

        <para>A design visualization theory within cognitive psychology. The
          theory notes that designers must bridge a gap between their mental
          model of the problem or situation and the formal model of a solution
          or system.</para>

        <para>This theory suggests that programmers will benefit from:</para>

        <orderedlist>
          <listitem><para>Multiple representations such as program syntactic
            decomposition, state transitions, control flow, and data
            flow. These allow the programmer to better identify elements and
            relationships in the problem and solution and thus more readily
            create a mapping between their situation models and working system
            models.</para></listitem>

          <listitem><para>Familiar aspects of a situation model, which improve
            designers' abilities to formulate solutions.</para></listitem>
        </orderedlist>

        <glossseealso otherterm="gl.critic"/>
      </glossdef>
    </glossentry>

    <!-- Concept Class Diagram -->

    <glossentry id="gl.conceptclassdiag">
      <glossterm>Concept Class Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>Concept Class Diagram</primary>
      </indexterm>
      <indexterm>
        <primary>Class Diagram</primary>
	<secondary>Concept</secondary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>Concept Class</secondary>
      </indexterm>

        <para>A Class Diagram constructed during the Analysis Phase to show the
          main structural components of the problem identified in the
          Requirements Phase. See 
          <xref linkend="ch.tut.analysis"/> for more information.</para>

        <glossseealso otherterm="gl.classdiag"/>
      </glossdef>
    </glossentry>

    <!-- Critic -->

    <glossentry id="gl.critic">
      <glossterm>Critic</glossterm>

      <glossdef>
      <indexterm>
        <primary>Critic</primary>
      </indexterm>

        <para>A process within &argouml; that provides suggestions as to how
          the design might be improved. Suggestions are based on principles
          within three theories of cognitive psychology,
          <emphasis>reflection-in action</emphasis>, <emphasis>opportunistic
          design</emphasis> and <emphasis>comprehension and problem
          solving</emphasis>.</para>

        <glossseealso otherterm="gl.reflection"/>
        <glossseealso otherterm="gl.oppdesign"/>
        <glossseealso otherterm="gl.comprehension"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- D -->

  <!-- E -->

  <glossdiv>
    <title>E</title>

    <!-- Extend Relationship -->

    <glossentry id="gl.extends">
      <glossterm>Extend Relationship</glossterm>

      <glossdef>
      <indexterm>
        <primary>Extend Relationship</primary>
      </indexterm>
      <indexterm>
        <primary>Relationship</primary>
	<secondary>Extend</secondary>
      </indexterm>

        <para>A relationship between two Use Cases, where the
          <emphasis>extended</emphasis> Use Case describes a special variant
          of the <emphasis>extending</emphasis> Use Case.</para> 

        <glossseealso otherterm="gl.generalization"/>
        <glossseealso otherterm="gl.includes"/>
        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- F -->

  <!-- G -->

  <glossdiv>
    <title>G</title>

    <!-- Generalization Relationship -->

    <glossentry id="gl.generalization">
      <glossterm>Generalization Relationship</glossterm>

      <glossdef>
      <indexterm>
        <primary>Generalization Relationship</primary>
      </indexterm>
      <indexterm>
        <primary>Relationship</primary>
	<secondary>Generalization</secondary>
      </indexterm>

        <para>A relationship between one <emphasis>generalising</emphasis>
          Use Cases and one or more <emphasis>generalised</emphasis> Use
          Cases, where the <emphasis>generalised</emphasis> Use Cases are
          particular examples of the <emphasis>generalising</emphasis> Use
          Case.</para>

        <glossseealso otherterm="gl.extends"/>
        <glossseealso otherterm="gl.includes"/>
        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>

    <!-- GNU -->

    <glossentry id="gl.gnu">
      <glossterm>GNU</glossterm>

      <glossdef>
      <indexterm>
        <primary>GNU</primary>
      </indexterm>

        <para>"GNU's Not Unix". One of the first open/free source
          projects. Originally best known for its GNU version of the &emacs;
          editor, it now has many other projects, usually closely allied to
          Linux.</para>

        <glossseealso otherterm="gl.linux"/>
      </glossdef>
    </glossentry>

    <!-- GUI -->

    <glossentry id="gl.gui">
      <glossterm>GUI</glossterm>

      <glossdef>
      <indexterm>
        <primary>GUI</primary>
      </indexterm>

        <para>Graphical User Interface.</para>
      </glossdef>
    </glossentry>

  </glossdiv>

  <!-- H -->

  <glossdiv>
    <title>H</title>

    <!-- Hierarchical State Diagram -->

    <glossentry id="gl.hierstatediag">
      <glossterm>Hierarchical State Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>Hierarchical State Diagram</primary>
      </indexterm>
      <indexterm>
        <primary>State Diagram</primary>
	<secondary>Hierarchical</secondary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>Hierarchical State</secondary>
      </indexterm>

        <para>A <emphasis>State Diagram</emphasis> that contains subsidiary
          state diagrams within individual <emphasis>States</emphasis>.</para>

        <glossseealso otherterm="gl.state"/>
        <glossseealso otherterm="gl.statediag"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- I -->

  <glossdiv>
    <title>I</title>

    <!-- Include Relationship -->

    <glossentry id="gl.includes">
      <glossterm>Include Relationship</glossterm>

      <glossdef>
      <indexterm>
        <primary>Include Relationship</primary>
      </indexterm>
      <indexterm>
        <primary>Relationship</primary>
	<secondary>Include</secondary>
      </indexterm>

        <para>A relationship between two Use Cases, where the
          <emphasis>included</emphasis> Use Case describes part of the
          functionality of the <emphasis>including</emphasis> Use
          Case.</para>

        <glossseealso otherterm="gl.extends"/>
        <glossseealso otherterm="gl.generalization"/>
        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>

    <!-- Iterative Design Process -->

    <glossentry id="gl.iterative">
      <glossterm>Iterative Design Process</glossterm>

      <glossdef>
      <indexterm>
        <primary>Iterative Design Process</primary>
      </indexterm>
      <indexterm>
        <primary>Design Process</primary>
	<secondary>Iterative</secondary>
      </indexterm>


        <para>A design process where each all phases (requirements, analysis,
          design, build, test) are tackled partially in a series of
          iterations. See <xref linkend="s2.proctypes"/> for more
          information.</para>

        <glossseealso otherterm="gl.waterfall"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- J -->

  <glossdiv>
    <title>J</title>

    <!-- Java -->

    <glossentry id="gl.java">
      <glossterm>Java</glossterm>

      <glossdef>
      <indexterm>
        <primary>Java</primary>
      </indexterm>

        <para>A fully object oriented programming language introduced by Sun
          Microsystems. More strongly typed than C++, it compiles to an
          interpreted code, the Java Virtual Machine (JVM). The JVM means that
          Java code should run on any machine that has implemented the
          JVM.</para>

        <para>The most significant component of Java was integration of the JVM
          into web browsers, allowing code (Applets) to be download and run
          over the web.</para>

        <para>&argouml; is written in Java.</para>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- K -->

  <!-- L -->

  <glossdiv>
    <title>L</title>

    <!-- Linux -->

    <glossentry id="gl.linux">
      <glossterm>Linux</glossterm>

      <glossdef>
      <indexterm>
        <primary>Linux</primary>
      </indexterm>

        <para>An open source version of the Unix operating system.</para>

        <glossseealso otherterm="gl.gnu"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- M -->

  <glossdiv>
    <title>M</title>

    <!-- Mealy Machine -->

    <glossentry id="gl.mealy">
      <glossterm>Mealy Machine</glossterm>

      <glossdef>
      <indexterm>
        <primary>Mealy Machine</primary>
      </indexterm>

        <para>A <emphasis>State Diagram</emphasis> where actions are associated
          with <emphasis>States</emphasis>.</para>

        <glossseealso otherterm="gl.action"/>
        <glossseealso otherterm="gl.moore"/>
        <glossseealso otherterm="gl.state"/>
        <glossseealso otherterm="gl.statediag"/>
        <glossseealso otherterm="gl.transition"/>
      </glossdef>
    </glossentry>

    <!-- Method -->

    <glossentry id="gl.method">
      <glossterm>Method (of a Class or Object)</glossterm>

      <glossdef>
      <indexterm>
        <primary>Method</primary>
	<secondary>of a Class</secondary>
      </indexterm>
      <indexterm>
        <primary>Method</primary>
	<secondary>of an Object</secondary>
      </indexterm>
      <indexterm>
	<primary>Class Method</primary>
      </indexterm>
      <indexterm>
	<primary>Object Method</primary>
      </indexterm>

        <para>A method of a class or object is a specification of behavior
          encapsulated by that object.</para>

        <glossseealso otherterm="gl.attribute"/>
        <glossseealso otherterm="gl.class"/>
        <glossseealso otherterm="gl.object"/>
      </glossdef>
    </glossentry>

    <!-- Moore Machine -->

    <glossentry id="gl.moore">
      <glossterm>Moore Machine</glossterm>

      <glossdef>
      <indexterm>
        <primary>Moore Machine</primary>
      </indexterm>

        <para>A <emphasis>State Diagram</emphasis> where actions are associated
          with <emphasis>Transitions</emphasis>.</para>

        <glossseealso otherterm="gl.action"/>
        <glossseealso otherterm="gl.mealy"/>
        <glossseealso otherterm="gl.state"/>
        <glossseealso otherterm="gl.statediag"/>
        <glossseealso otherterm="gl.transition"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- N -->

  <!-- O -->

  <glossdiv>
    <title>O</title>

    <!-- Object -->

    <glossentry id="gl.object">
      <glossterm>Object</glossterm>

      <glossdef>
      <indexterm>
        <primary>Object</primary>
      </indexterm>

        <para>An instance of a <emphasis>Class</emphasis>.</para>

        <para>Classes and objects in UML are represented on <emphasis>Activity
          Diagrams</emphasis>, <emphasis>Class Diagrams</emphasis>,
          <emphasis>Collaboration Diagrams</emphasis> and <emphasis>Sequence
          Diagrams</emphasis>.</para>

        <glossseealso otherterm="gl.activitydiag"/>
        <glossseealso otherterm="gl.attribute"/>
        <glossseealso otherterm="gl.classdiag"/>
        <glossseealso otherterm="gl.collabdiag"/>
        <glossseealso otherterm="gl.method"/>
        <glossseealso otherterm="gl.seqdiag"/>
      </glossdef>
    </glossentry>

    <!-- OCL -->

    <glossentry id="gl.ocl">
      <glossterm>OCL</glossterm>

      <glossdef>
      <indexterm>
        <primary>OCL</primary>
      </indexterm>
      <indexterm>
	<primary>Object Constraint Language</primary>
      </indexterm>

        <para>Object Constraint Language. A language for describing constraints
          within UML.</para>
        <glossseealso otherterm="gl.uml"/>
      </glossdef>
    </glossentry>

    <!-- OMG -->

    <glossentry id="gl.omg">
      <glossterm>OMG</glossterm>

      <glossdef>
      <indexterm>
        <primary>OMG</primary>
      </indexterm>
      <indexterm>
	<primary>Object Management Group</primary>
      </indexterm>

        <para>The Object Management Group. An international industry
          standardisation body. Best known for CORBA and UML.</para>

        <glossseealso otherterm="gl.uml"/>
      </glossdef>
    </glossentry>

    <!-- OOA&D -->

    <glossentry id="gl.ooad">
      <glossterm>&ooad;</glossterm>

      <glossdef>
      <indexterm>
        <primary>&ooad;</primary>
      </indexterm>
      <indexterm>
	<primary>Design</primary>
	<secondary>Object Oriented</secondary>
      </indexterm>
      <indexterm>
	<primary>Analysis</primary>
	<secondary>Object Oriented</secondary>
      </indexterm>

        <para>Object Oriented Analysis and Design. An approach to software
          problem analysis and design based on objects, which encapsulate both
          data and code. See See <xref linkend="s2.ooad"/> or any standard
          textbook on Software Engineering.</para>

        <para>UML is a notation to support &ooad;.</para>

        <glossseealso otherterm="gl.uml"/>
      </glossdef>
    </glossentry>

    <!-- Opportunistic Design -->

    <glossentry id="gl.oppdesign">
      <glossterm>Opportunistic Design</glossterm>

      <glossdef>
      <indexterm>
        <primary>Opportunistic Design</primary>
      </indexterm>
      <indexterm>
        <primary>Design</primary>
	<secondary>Opportunistic</secondary>
      </indexterm>

        <para>A theory within cognitive psychology suggesting that although
          designers plan and describe their work in an ordered, hierarchical
          fashion, in actuality, they choose successive tasks based on the
          criteria of cognitive cost. Simply stated, designers do not follow
          even their own plans in order, but choose steps that are mentally
          least expensive among alternatives.</para>

        <glossseealso otherterm="gl.critic"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- P -->

  <glossdiv>
    <title>P</title>

    <!-- Pane -->

    <glossentry id="gl.pane">
      <glossterm>Pane</glossterm>

      <glossdef>
      <indexterm>
        <primary>Pane</primary>
      </indexterm>

        <para>A subwindow within the main window of the &argouml; user
          interface.</para>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- Q -->

  <!-- R -->

  <glossdiv>
    <title>R</title>

    <!-- Realisation Use Case -->

    <glossentry id="gl.relusecase">
      <glossterm>Realisation Use Case</glossterm>

      <glossdef>
      <indexterm>
        <primary>Realisation Use Case</primary>
      </indexterm>
      <indexterm>
        <primary>Use Case</primary>
	<secondary>Realisation</secondary>
      </indexterm>

        <para>A <emphasis>Use Case</emphasis> where the <emphasis>Use Case
        Diagram</emphasis> and <emphasis>Use Case Specification</emphasis> are
        in the language of the solution domain, rather than the problem
        domain.</para>

        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>

    <!-- Reflection-in-Action -->

    <glossentry id="gl.reflection">
      <glossterm>Reflection-in-Action</glossterm>

      <glossdef>
      <indexterm>
        <primary>Reflection-in-Action</primary>
      </indexterm>

        <para>A theory within cognitive psychology which observes that
          designers of complex systems do not conceive a design
          fully-formed. Instead, they must construct a partial design,
          evaluate, reflect on, and revise it, until they are ready to extend
          it further. As developers work hands-on with the design, their mental
          model of the problem situation improves, hence improving their
          design.</para>

        <glossseealso otherterm="gl.critic"/>
      </glossdef>
    </glossentry>

    <!-- Requirements Capture -->

    <glossentry id="gl.requirements">
      <glossterm>Requirements Capture</glossterm>

      <glossdef>
      <indexterm>
        <primary>Requirements Capture</primary>
      </indexterm>

        <para>Requirements capture is the process of identifying what the
          <quote>customer</quote> wants from the proposed system. See
          <xref linkend="ch.tut.reqs"/> for a fuller description.</para>

        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>

  </glossdiv>

  <!-- S -->

  <glossdiv>
    <title>S</title>

    <!-- Sequence Diagram -->

    <glossentry id="gl.seqdiag">
      <glossterm>Sequence Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>Sequence Diagram</primary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>Sequence</secondary>
      </indexterm>

        <para>A UML Diagram showing the dyanamic behavior as messages are
          passed between objects. Equivalent to a <emphasis>Collaboration
          Diagram</emphasis>. Which representation is appropriate depends on
          the problem under consideration. See 
          <xref linkend="s1.umlseqdiags"/> for more information.</para>

        <glossseealso otherterm="gl.collabdiag"/>
      </glossdef>
    </glossentry>

    <!-- SGML -->

    <glossentry id="gl.sgml">
      <glossterm>SGML</glossterm>

      <glossdef>
      <indexterm>
        <primary>SGML</primary>
      </indexterm>
      <indexterm>
	<primary>Standard Graphical Markup Language</primary>
      </indexterm>

        <para>Standard Graphical Markup Language. Defined by ISO
          8879:1986.</para>

        <glossseealso otherterm="gl.xml"/>
      </glossdef>
    </glossentry>

    <!-- Simula 67 -->

    <glossentry id="gl.simula67">
      <glossterm>Simula&nbsp;67</glossterm>

      <glossdef>
      <indexterm>
        <primary>Simula&nbsp;67</primary>
      </indexterm>

        <para>A procedural programming language intended for simulation. Noted
          for its introduction of <emphasis>objects</emphasis> and
          <emphasis>coroutines</emphasis>.</para>
      </glossdef>
    </glossentry>

    <!-- State -->

    <glossentry id="gl.state">
      <glossterm>State</glossterm>

      <glossdef>
      <indexterm>
        <primary>State</primary>
      </indexterm>

        <para>Within a <emphasis>State Diagram</emphasis> a one of the possible
          configurations of the machine.</para>

        <glossseealso otherterm="gl.statediag"/>
      </glossdef>
    </glossentry>

    <!-- State Diagram -->

    <glossentry id="gl.statediag">
      <glossterm>State Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>State</primary>
	<secondary>Diagram</secondary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>State</secondary>
      </indexterm>

        <para>A UML Diagram showing the dyanamic behavior of an active
          <emphasis>Object</emphasis>. See <xref linkend="s1.umlstatediags"/>
          for more information.</para>

        <glossseealso otherterm="gl.object"/>
      </glossdef>
    </glossentry>

    <!-- Stereotypes and Stereotyping -->

    <glossentry id="gl.stereotype">
      <glossterm>Stereotypes and Stereotyping</glossterm>

      <glossdef>
      <indexterm>
        <primary>Stereotypes</primary>
      </indexterm>
      <indexterm>
	<primary>Stereotyping</primary>
      </indexterm>

        <para>Any artifact within UML can be given a
          <emphasis>stereotype</emphasis> to indicate its association with a
          particular role in the design. A stereotype <literal>spqr</literal>
          is generally indicated with the notation
          <literal>&lt;&lt;spqr&gt;&gt;</literal>.</para>

        <para>A stereotype defines a namespace within the design. Examples of
          stereotypes are <literal>&lt;&lt;business&gt;&gt;</literal> and
          <literal>&lt;&lt;realisation&gt;&gt;</literal> for Use Cases, used to
          distinguish between Use Cases at the requirements phase defined in
          terms of the problem domain, and Use Cases at the analysis phase
          defined in terms of the solution domain.</para>

        <glossseealso otherterm="gl.uml"/>
      </glossdef>
    </glossentry>

    <!-- Supplementary Specification -->

    <glossentry id="gl.supspec">
      <glossterm>Supplementary Specification</glossterm>

      <glossdef>
      <indexterm>
        <primary>Supplementary Specification</primary>
      </indexterm>

        <para>The document capturing non-functional requirements that cannot be
          associated with Use Cases.</para>

        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>

    <!-- SVG -->

    <glossentry id="gl.svg">
      <glossterm>SVG</glossterm>

      <glossdef>
      <indexterm>
        <primary>SVG</primary>
      </indexterm>

        <para>Scalable Vector Graphics format. A standard representation of
          graphics diagrams that use vectors.
ArgoUML can export diagrams in SVG.
</para>
      </glossdef>
    </glossentry>

    <!-- System Sequence Diagram -->

    <glossentry id="gl.sysseqdiag">
      <glossterm>System Sequence Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>System Sequence Diagram</primary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>System Sequence</secondary>
      </indexterm>

        <para>A <emphasis>Sequence Diagram</emphasis> used in the
          <emphasis>Analysis</emphasis> Phase showing the dyanamic behavior of
          the overall system. See
          <xref linkend="ch.tut.analysis"/> for more information.</para>

        <glossseealso otherterm="gl.seqdiag"/>
      </glossdef>
    </glossentry>

    <!-- System State Diagram -->

    <glossentry id="gl.sysstatediag">
      <glossterm>System State Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>System State Diagram</primary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>System State</secondary>
      </indexterm>

        <para>A <emphasis>State Diagram</emphasis> used in the
          <emphasis>Analysis</emphasis> Phase showing the dyanamic behavior of
          an active top level system objects. See
          <xref linkend="ch.tut.analysis"/> for more information.</para>

        <glossseealso otherterm="gl.statediag"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- T -->

  <glossdiv>
    <title>T</title>

    <!-- To-Do List -->

    <glossentry id="gl.todo">
      <glossterm>To-Do List</glossterm>

      <glossdef>
      <indexterm>
        <primary>To-Do List</primary>
      </indexterm>

        <para>A feature of &argouml; allowing the user to record activities
          that are yet to be completed.</para>
      </glossdef>
    </glossentry>

    <!-- Transition -->

    <glossentry id="gl.transition">
      <glossterm>Transition</glossterm>

      <glossdef>
      <indexterm>
        <primary>Transition</primary>
      </indexterm>

        <para>The change between <emphasis>States</emphasis> in a
          <emphasis>State Diagram</emphasis>..</para>

        <glossseealso otherterm="gl.state"/>
        <glossseealso otherterm="gl.statediag"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- U -->

  <glossdiv>
    <title>U</title>

    <!-- UML -->

    <glossentry id="gl.uml">
      <glossterm>UML</glossterm>

      <glossdef>
      <indexterm>
        <primary>UML</primary>
      </indexterm>

        <para>Universal Modelling Language. A graphical notation for &ooad;
          processes, standardised by the OMG. &argouml; follows UML
          v1.3. Version 1.4 was released during 2001, with v2.0 planned for
          2002.</para>

        <glossseealso otherterm="gl.omg"/>
      </glossdef>
    </glossentry>

    <!-- Use Case -->

    <glossentry id="gl.usecase">
      <glossterm>Use Case</glossterm>

      <glossdef>
      <indexterm>
        <primary>Use Case</primary>
      </indexterm>

        <para>A UML notation for capturing requirements of a system or
          sub-system. See <xref linkend="s1.tut.req_process_output"/> for more
          information.</para>

        <glossseealso otherterm="gl.uml"/>
        <glossseealso otherterm="gl.ucspec"/>
      </glossdef>
    </glossentry>

    <!-- Use Case Diagram -->

    <glossentry id="gl.usecasediag">
      <glossterm>Use Case Diagram</glossterm>

      <glossdef>
      <indexterm>
        <primary>Use Case</primary>
	<secondary>Diagram</secondary>
      </indexterm>
      <indexterm>
        <primary>Diagram</primary>
	<secondary>Use Case</secondary>
      </indexterm>

        <para>A UML diagram showing the relationships between Actors and Use
          Cases. See <xref linkend="s1.tut.req_process_output"/> for more
          information.</para>

        <glossseealso otherterm="gl.actor"/>
        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>

    <!-- Use Case Specification -->

    <glossentry id="gl.ucspec">
      <glossterm>Use Case Specification</glossterm>

      <glossdef>
      <indexterm>
        <primary>Use Case</primary>
	<secondary>Specification</secondary>
      </indexterm>

        <para>The document capturing the detailed requirements behind a Use
          Case.</para>

        <glossseealso otherterm="gl.usecase"/>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- V -->

  <glossdiv>
    <title>V</title>

    <!-- Vision Document -->

    <glossentry id="gl.vision">
      <glossterm>Vision Document</glossterm>

      <glossdef>
      <indexterm>
        <primary>Vision Document</primary>
      </indexterm>

        <para>The top level document describing what the system being developed
          is to achieve.</para>
      </glossdef>
    </glossentry>
  </glossdiv>

  <!-- W -->

  <glossdiv>
    <title>W</title>

    <!-- W3C -->

    <glossentry id="gl.w3c">
      <glossterm>W3C</glossterm>

      <glossdef>
      <indexterm>
        <primary>W3C</primary>
      </indexterm>

        <para>The World Wide Web Consortium,
          <ulink url="http://www.w3c.org">www.w3c.org</ulink>. An
          international standardisation body for all things to do with the
          World Wide Web.</para>
      </glossdef>
    </glossentry>

    <!-- Waterfall Design Process -->

    <glossentry id="gl.waterfall">
      <glossterm>Waterfall Design Process</glossterm>

      <glossdef>
      <indexterm>
        <primary>Waterfall Design Process</primary>
      </indexterm>
      <indexterm>
	<primary>Design Process</primary>
	<secondary>Waterfall</secondary>
      </indexterm>

        <para>A design process where each phase (requirements, analysis,
          design, build, test) is completed before the next starts. See
          <xref linkend="s2.proctypes"/> for more information.</para>

        <glossseealso otherterm="gl.iterative"/>
      </glossdef>
    </glossentry>
  </glossdiv>
    
  <!-- X -->

  <glossdiv>
    <title>X</title>

    <!-- XMI -->

    <glossentry id="gl.xmi">
      <glossterm>XMI</glossterm>

      <glossdef>
      <indexterm>
        <primary>XMI</primary>
      </indexterm>

        <para>XML Model Interchange format. A format for file storage of UML
          models. Currently incomplete, since it does not carry all graphical
          layout information, so must be supplemented by files carrying that
          information.</para>

        <glossseealso otherterm="gl.uml"/>
        <glossseealso otherterm="gl.xml"/>
      </glossdef>
    </glossentry>

    <!-- XML -->

    <glossentry id="gl.xml">
      <glossterm>XML</glossterm>

      <glossdef>
      <indexterm>
        <primary>XML</primary>
      </indexterm>

        <para>eXtensible Markup Language. A simplified derivative of SGML
          defined by W3C</para>

        <glossseealso otherterm="gl.sgml"/>
        <glossseealso otherterm="gl.w3c"/>
      </glossdef>
    </glossentry>
  </glossdiv>
    
  <!-- Y -->

  <!-- Z -->

</glossary>

<!-- Local stuff for Emacs - please do not delete

Local Variables:
mode: xml
sgml-doctype: "argomanual.xml"
sgml-parent-document: ("argomanual.xml" "glossary" nil)
sgml-validate-command: "nsgmls -wxml -sv ../docbook-setup/xml.dcl \
  argomanual.xml"
End:

-->
