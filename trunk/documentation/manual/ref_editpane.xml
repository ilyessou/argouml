<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Id$ -->

<!--

A description of the Editing Pane. This has been known in the past as the
Diagram Pane or the Drawing Pane of the Multi-Editor Pane.

-->

<chapter id="ch.ref.editpane">
  <title>The Editing Pane</title>

  <sect1>
    <title>Introduction</title>

    <para><xref linkend="fig.ref.editing_pane"/> shows the &argouml; window
      with the editing pane highlighted.</para>

    <!-- An example of the editing pane in action. -->

    <figure id="fig.ref.editing_pane" float="1">
      <title>Overview of the editing pane</title>

      <screenshot><mediaobject>
        <imageobject>
          <imagedata format="PNG" align="center"
                     fileref="images/reference/editing_pane.png"/>
        </imageobject>
      </mediaobject></screenshot>
    </figure>

    <!-- Need to clarify that this has been known in the past as the Diagram
         Pane or the Drawing Pane of the Multi-Editor Pane. -->

    <para>This is where all the diagrams are drawn. In earlier versions of
      &argouml; this pane went under a variety of names. You may encounter
      <quote>drawing pane</quote>, <quote>diagram pane</quote> or
      <quote>multi-editor pane</quote> in other documentation that is still
      being updated.</para>

    <para>The pane has a tool bar at the top, and a single tab labeled
      <literal>As&nbsp;Diagram</literal> at the bottom. So long as your
      window is big enough, you will see the name of the diagram in the top
      right corner at the end of the tool bar.
      <!-- TODO: This will change in V0.15.x due to issue ...  -->
    </para>
  </sect1>

  <!-- How the mouse behaves in the editing pane -->

  <sect1 id="s1.ref.edit_mouse">
    <title>Mouse Behavior in the Editing Pane</title>

    <para>Behavior of the mouse in general, and the naming of the buttons is
      covered in the chapter on the overall user interface (see
      <xref linkend="ch.ref.ui"/>).</para>

    <!-- Button1 click -->

    <sect2>
      <title>&Button1; Click</title>

      <para>In the tool bar of the editing pane, &button1; click is used to
        select the next tool for adding an artifact to the diagram 
        (see double clicking for adding multiple artifacts).  Adding
        to the diagram is achieved by moving the mouse to the editing area and
        clicking again.</para>

      <para>In the main editing area &button1; click is used to select an
        individual artifact.</para>

      <para>Some artifacts (e.g. actor, class) show special handles
        (called <quote>Selection Action Buttons</quote>, see <xref
        linkend="s1.ref.edit_pane_selection_action_buttons"/>)
        at the sides, top and bottom, 
        which can be clicked to create a new related artifact, 
        with the relation indicated. 
        If the shift key
        is pressed when hovering the mouse over a selected artifact,
        sometimes different handles are shown, 
        which stand for different relation types. 
      </para>

      <para>Where &button2; click has been used to bring up a context sensitive
        pop-up menu (see below), &button1; click is used to select the menu
entry required.
The pop-up menu will be removed by any &button1; click 
outside of the menu area.
</para>

      <para>There are various more detailed effects, which are discussed under
        the descriptions of the various tools (see <xref
        linkend="s1.ref.edit_pane_tool_bar"/>).</para>
    </sect2>

    <!-- Button1 double click -->

    <sect2 id="s2.ref.edit_button1_double_click">
      <title>&Button1; Double Click</title>

      <para>When used on the tool bar with a tool to add an artifact, the
        selected artifact will be added multiple times to the drawing area,
        once for each further button click, until the tool is again selected or
        another tool chosen.
        <!-- TODO Make issue for the bug: The status area should indicate 
        e.g. "Click to place Class" not only the first time! -->
      </para>

      <para>When used within the drawing area on an artifact that has
        sub-components, double click will select the sub-component (creating
        it if necessary).</para> 

      <para>For example double clicking over an operation compartment of a
        class will select the operation. Or create one if there is none yet.
      </para>

      <para>A special use is with package artifacts on the class diagram. A
        double click on a package will navigate to the class diagram associated
        with a package (the first created if there is more than one), or will
        offer to create one for you if there is none.
        See <xref linkend="fig.ref.edit_add_class_diagram"/>
      </para>

      <figure id="fig.ref.edit_add_class_diagram" float="1">
        <title>The dialog for adding a new class diagram
        </title>

        <screenshot><mediaobject>
          <imageobject>
            <imagedata format="PNG" align="center"
                       fileref="images/reference/edit_add_class_diagram.png"/>
          </imageobject>
        </mediaobject></screenshot>
      </figure>

      <para>You can <quote>spawn</quote> a copy of the editing pane by
        double-clicking on the <literal>As Diagram</literal> tab at the bottom
        of the pane. It will then show as an individual window and you can put
        it where you will on the screen.
        <!-- TODO: This despite the fact that the tab is downlighted! Come up
        with a better solution... See issue ... -->
      </para>
    </sect2>

    <!-- Button1 Motion -->

    <sect2>
      <title>&Button1; Motion</title>

      <para>When adding an artifact using the toolbar, &button1; motion can
        generally be used to define the size of the new artifact. Its
        dimensions (line ends, diagonal corners of a rectangular artifact etc)
        are defined by &button1; down and &button1; up.</para>

      <para>Where the artifact being added is some form of connector its
        termination point is shown with &button1; up over the terminating
        artifact. &button1; click may be used in the space between artifacts to
        create articulation points in the connector. This is particularly
        useful where connectors must loopback on themselves.</para>
<!-- TODO: Rewrite the 2 paragraphs above into something understandable. -->

      <para>Over graphical artifacts &button1; motion will move the artifact to
        a new position.
      </para>
      
      <para>Graphical artifacts that are selected show handles 
        at the corners or ends, and
        these can be used for re-sizing.</para>

      <para>Some artifacts (e.g. actor, class) show special handles 
        (called <quote>Selection Action Buttons</quote>, see <xref
        linkend="s1.ref.edit_pane_selection_action_buttons"/>)
        at the
        sides, top and bottom, which can be dragged to form types of
        relationship with other artifacts.</para>

      <para>Where the artifact is some form of connector between other items,
        &button1; motion other than at a handle will cause a new handle to be
        created, allowing the connector to be articulated at that point.
        This only works when the connecting line is not straight angled.
        Such new handles can be removed by moving them to the end of the
        connector.</para>

      <para>There are various more detailed effects, which are discussed under
        the descriptions of the various tools (see <xref
        linkend="s1.ref.edit_pane_tool_bar"/>).</para>
    </sect2>

    <!-- Shift and control keys -->

    <sect2>
      <title>Shift and Control with &Button1;</title>

      <para>Where selections are to be made, the SHIFT key is used with
        &button1; to <emphasis>add</emphasis> unselected artifacts to the
        current selection. Where an artifact is already selected, it is removed
        from the current selection.
        <!-- TODO: This function is broken in V0.14. See issue ... -->
      </para>

      <para>Clicking &Button1; while the CONTROL key is pressed, 
        invokes the broom tool, which causes the selected
        artifacts (and any others swept up with them) to be moved with the
        broom tool (see <xref linkend="s2.ref.edit_layout"/>).</para>
        
      <para>
        However, if the CONTROL key is pressed while moving an artifact, 
        then the artifact's
        movement is constrained to one orthogonal direction, i.e. either
        vertical or horizontal, depending on the first movement made.
      </para>
    </sect2>

    <!-- Button2 click -->

    <sect2>
      <title>&Button2; Actions</title>

      <para>When used over artifacts in the the editing pane, this will display
        a context dependent pop-up menu. Menu entries are highlighted (but not
        selected) and sub-menus exposed by subsequent mouse motion (without any
        buttons). Menu entry selection is with &button1; or &button2;. 
        See <xref
        linkend="s1.ref.edit_pane_pop_up"/> for details of the specific pop-up
        menus.</para>

      <para>The artifact generating the menu 
        will be selected, and all other artifacts are deselected. 
        This means that the pop-up menu always only applies to the artifact 
        on which it was invoked.
      </para>
    </sect2>

    <!-- Button2 double click -->

    <sect2>
      <title>&Button2; Double Click</title>

      <para>This has no effect other than that of &button2; single
        click.</para>
    </sect2>

    <!-- Button2 Motion -->

    <sect2>
      <title>&Button2; Motion</title>

      <para>This is used to select items in a context sensitive menu popped up
        by use of &button2; click.</para>
    </sect2>
  </sect1>

  <!-- The Tool Bar -->

  <sect1 id="s1.ref.edit_pane_tool_bar">
    <title>The tool bar</title>

    <para>The toolbar at the top of the editing pane provides the main
      functions of the pane. The default tool is the <literal>Select</literal>
      tool (<guiicon><inlinemediaobject><imageobject><imagedata format="GIF"
        align="center" fileref="images/icons/select.gif"/>
      </imageobject></inlinemediaobject></guiicon>). 
      In general &button1; click on any
      tool selects a tool for one use, before reverting to the default
      tool, and &button1; double click selects a tool for repeated use.</para>

    <para>The tools fall into four categories.</para>

    <itemizedlist>
      <listitem><para><emphasis>Layout tools.</emphasis> Provide assistance in
        laying out artifacts on the diagram.</para></listitem>

      <listitem><para><emphasis>Annotation tools.</emphasis> Used to annotate
        artifacts on the diagram.</para></listitem>

      <listitem><para><emphasis>Drawing tools.</emphasis> Used to add general
graphic artifacts to diagrams.</para></listitem>

      <listitem><para><emphasis>Diagram specific tools.</emphasis> Used to add
        UML artifacts specific to a particular diagram type to the
        diagram.</para></listitem>
    </itemizedlist>

    <!-- Tools for organizing layout -->

    <sect2 id="s2.ref.edit_layout">
      <title>Layout Tools</title>

      <para>The following two tools are provided in all diagrams in this category.
      </para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/select.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Select</literal>. This tool provides for general selection
          of artifacts on the diagram. &Button1; click will select an
          artifact. SHIFT with &button1; can be used to select (or deselect)
          multiple artifacts. &Button1; motion will move selected 2D items or
          add and move a new control point on a link. &Button1; motion on a
          selected component's control point will stretch that component's
          shape.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/broom.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <emphasis>Broom</emphasis>. &Button1; motion with this tool provide a
          <quote>broom</quote> which will sweep all artifacts along. This is
          a very shortcut way of lining things up.</para>

        <para>The Broom can also be invoked by using CONTROL with &button1; motion
          when the <literal>Select</literal> tool is in use.</para>
        <para>The Broom is discussed at length in its own chapter, see 
          <xref linkend="s1.ref.edit_pane_broom"/></para>
        </listitem>
      </itemizedlist>

      <!-- Don't forget other ways of doing this -->
      <tip><para>Additional control of artifact layout is provided through the
        <literal>Arrange</literal> menu (see
        <xref linkend="s1.ref.menu_arrange"/>).</para></tip>
    </sect2>

    <!-- Tools for adding annotation (only one in the present
         implementation -->

    <sect2>
      <title>Annotation Tools</title>

      <para>Only one annotation tool is provide, <literal>Note</literal>
        (<guiicon><inlinemediaobject><imageobject><imagedata format="GIF"
          align="center" fileref="images/icons/note.gif"/>
        </imageobject></inlinemediaobject></guiicon>). This is used to add a
        note to a selected UML artifact.</para>

      <caution><para>Unlike most other tools you use the
        <literal>Select</literal> tool to select an artifact, and then
        &button1; click on <literal>Note</literal> to create the
        note.
        <!-- TODO: Maybe it is better to order this chapter according 
        this principle, instead of pretending it is an extension. 
        Also in the toolbar implementation itself, 
        we could order them according the way they work. -->
      </para></caution>

      <para>The note is created alongside the selected artifact, 
        empty by default. The text can be selected
        with &button1; double-click and edited from the keyboard.</para>

      <para>The UML standard allows notes to be attached to any
        artifact. 
      </para>

    </sect2>

    <!-- Tools for drawing non-UML artifacts on diagrams -->

    <sect2 id="s2.ref.edit_pane_drawing_tools">
      <title>Drawing Tools</title>

      <para>These are a series of tools for providing graphical additions to
        diagrams. Although they are not UML artifacts, the UML standard
        provides for such decoration to improve the readability of
        diagrams.</para>

      <tip><para>These drawing tools provide a useful way to partially support
        some of the UML features (such as general purpose notes) that are
        missing from the current release of &argouml;.
      <!-- TODO: Remove this tip when ArgoUML finally supports all of UML ;-) -->
      </para></tip>

      <para>Eight tools are provided, all grouped into one drop-down widget.
        See <xref linkend="fig.ref.edit_graphical_tools"/>.
        &Button1; click on the diagram will place
        an instance of the graphical item of the same size as the last one
        placed. The size can be controlled by &button1; motion during
        placement. One side or end of the element will be at &button1; down,
        the other side or end at &button1; up. In general after they are placed
        on the diagram, graphical elements can be moved with the
        <literal>Select</literal> tool and &button1; and re-sized by &button1;
        motion on the handles after they have been selected.</para>

      <figure id="fig.ref.edit_graphical_tools" float="1">
        <title>The drawing tools selector.</title>
        <screenshot><mediaobject>
          <imageobject>
            <imagedata format="PNG" align="center"
                       fileref="images/reference/edit_graphical_tools.png"/>
          </imageobject>
        </mediaobject></screenshot>
      </figure>


      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/rectangle.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Rectangle</literal>. Provides a rectangle.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/rounded_rectangle.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Rounded Rectangle</literal>. Provides a rectangle with
          rounded corners. There is no control over the degree of
          rounding.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/circle.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Circle</literal>. Provides a circle.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/line.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Line</literal>. Provides a line.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/text.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Text</literal>. Provides a text box. The text is entered by
          selecting the box and typing. Text is in blue and centered and
          after typing, the box will shrink to the size of the text. However it
          can be re-sized by dragging on the corners.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/polygon.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Polygon</literal>. Provides a polygon. The points of the
          polygon are selected by &button1; click and the polygon closed with
          &button1; double click (which will link the final point to the first
          point).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/spline.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Spline</literal>. Provide an open spline. The control points
          of the spline are selected with &button1; and the last point selected
          with &button1; double click.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/ink.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Ink</literal>. Provide a polyline. The points are provided
          by &button1; motion.</para></listitem>
      </itemizedlist>
    </sect2>

    <!-- Tools just for Use Case Diagrams -->

    <sect2>
      <title>Use Case Diagram Specific Tools</title>

      <para>Seven tools are provided specific to UML artifacts on use case
        diagrams. The detailed properties of these artifacts are described in
        the section on use case diagram artifacts (see
        <xref linkend="ch.ref.entusecase"/>).</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/actor.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Actor</literal>. Add an actor to the
          diagram. For convenience, when the mouse is over a selected actor it
          displays two handles to left and right which may be dragged to form
          association relationships.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/use_case.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Use Case</literal>. Add a use case to the
          diagram. For convenience, when the mouse is over a selected use case
          it displays two handles to left and right which may be dragged to
          form association relationships and two handles top and bottom which
          may be dragged to form generalization and specialization
          relationships respectively.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/association_plain.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Association</literal>. Add an association between two
          artifacts selected using &button1; motion (from the first artifact to
          the second). There are 6 types of association offered here, 
          see <xref linkend="fig.ref.edit_association_tools"/>: 
          <literal>association</literal>,
          <literal>aggregation</literal> and 
          <literal>composition</literal>, and all these three can be  
          <literal>bidirectional</literal> or
          <literal>unidirectional</literal>.
          </para>
      
          <figure id="fig.ref.edit_association_tools" float="1">
            <title>The association tool selector.</title>
            <screenshot><mediaobject>
              <imageobject>
                <imagedata format="PNG" align="center"
                       fileref="images/reference/edit_association_tools.png"/>
              </imageobject>
            </mediaobject></screenshot>
          </figure>
        </listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/dependency.gif"/>
          </imageobject></inlinemediaobject></guiicon>
          <literal>Dependency</literal>. Add a dependency between two artifacts
          selected using &button1; motion (from the dependent artifact).</para>

        <!--caution><para>Older versions of &argouml; incorrectly used stereotyped
          dependencies to represent UML <literal>extends</literal> and
          <literal>includes</literal> relationships. Where these are found they
          should be replaced by proper extend and include relationships, which
          are now supported on the use case
          diagram.</para></caution-->
        </listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/generalization.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Generalization</literal>. Add a generalization between two
          artifacts selected using &button1; motion (from the child to the
          parent).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/extend.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Extend</literal>. Add an extend relationship between two
          artifacts selected using &button1; motion (from the extended to the
          extending use case).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/include.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Include</literal>. Add an include relationship between two
          artifacts selected using &button1; motion (from the including to the
          included use case).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject> <imagedata
          format="GIF" align="center"
          fileref="images/icons/extension_point.gif"/>
          </imageobject></inlinemediaobject></guiicon> <literal>Add Extension
          Point</literal>. Add an extension point to a selected use case. The
          extension point is given the default name <literal>newEP</literal>
          and location <literal>loc</literal>. Where the extension point
          compartment is displayed, the extension point may be edited by
          &button1; double click and using the keyboard, or by selecting with
          &button1; click (after the use case has been selected) and using the
          property tab. Otherwise it may be edited through its property tab,
          selected through the property tab of the owning use case.
          <!-- TODO: Editing the name of the EP on the diagram does not give a
          usable result: the name is not shown in the properties pane. 
          See issue ... -->
          </para>

          <note><para>This tool is grayed out except when a use case is
            selected.</para></note>
        </listitem>

      </itemizedlist>
    </sect2>

    <!-- Tools just for Class Diagrams -->

    <sect2>
      <title>Class Diagram Specific Tools</title>

      <para>Nine tools are provided specific to UML artifacts on class
        diagrams. The detailed properties of these artifacts are described in
        the section on class diagram artifacts (see
        <xref linkend="ch.ref.entclass"/>).</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/package.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Package</literal>. Add a package to the
          diagram.</para>
          <!-- TODO: Why is a package a drop-down selector with 1 item? 
          See issue 2095. -->
        </listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/class.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Class</literal>. Add a class to the
          diagram. For convenience, when the mouse is over a selected class it
          displays two handles to left and right which may be dragged to form
          association relationships 
          (or composition in case SHIFT has been pressed) 
          and two handles top and bottom which may be
          dragged to form generalization and specialization relationships
          respectively.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/association_plain.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Association</literal>. Add an association between two
          artifacts selected using &button1; motion (from the first artifact to
          the second). There are 6 types of association offered here, 
          see <xref linkend="fig.ref.edit_association_tools"/>: 
          <literal>association</literal>,
          <literal>aggregation</literal> and 
          <literal>composition</literal>, and all these three can be  
          <literal>bidirectional</literal> or
          <literal>unidirectional</literal>.
          </para>
        </listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/dependency.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Dependency</literal>. Add a dependency between two artifacts
          selected using &button1; motion (from the dependent
          artifact).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/permission.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Permission</literal>. Add a permission between two artifacts
          selected using &button1; motion (from the dependent
          artifact).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/usage.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Usage</literal>. Add a usage between two artifacts
          selected using &button1; motion (from the dependent
          artifact).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/generalization.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Generalization</literal>. Add a generalization between two
          artifacts selected using &button1; (from the child to the
          parent).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/interface.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Interface</literal>. Add an interface to the
          diagram. For convenience, when the mouse is over a selected interface
          it displays a handle at the bottom which may be dragged to form a
          realization relationship (the target being the realizing
          class).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/realization.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Realization</literal>. Add a realization between a class and
          an interface selected using &button1; motion (from the realizing
          class to the realized interface).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/attribute.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Add Attribute</literal>. Add an attribute to the
          currently selected class. The attribute is given the default name
          <literal>newAttr</literal> of type <literal>int</literal> and may be
          edited by &button1; double click and using the keyboard, or by
          selecting with &button1; click (after the class has been selected)
          and using the property tab.</para>

        <note><para>This tool is grayed out except when a class or interface is
          selected.</para></note></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/operation.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Add Operation</literal>. Add an operation to the
          currently selected class or interface. The operation is given the
          default name <literal>newOperation</literal> with no arguments and
          return type <literal>void</literal> and may be edited by &button1;
          double click and using the keyboard, or by selecting with &button1;
          click (after the class has been selected) and using the property
          tab.</para>

        <note><para>This tool is grayed out except when a class or interface is
          selected.</para></note></listitem>
      </itemizedlist>
    </sect2>

    <!-- Tools just for Sequence Diagrams -->

    <sect2>
      <title>Sequence Diagram Specific Tools</title>

      <warning>
        <para>
          Sequence diagrams are not implemented in V0.14 of &argouml;. Hence the
          description below will (might) only become correct in future versions of
          &argouml;.
        </para>
      </warning>
      
      <para>Six tools are provided specific to UML artifacts on sequence
        diagrams. The detailed properties of these artifacts are described in
        the section on sequence diagram artifacts (see
        <xref linkend="ch.ref.entseq"/>).</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/object.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Object</literal>. Add an object to the
          diagram.</para></listitem> 

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/stimulus_call.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Stimulus Call</literal>. Add a call stimulus between two
          objects selected using &button1; motion (from the originating object
          to the receiving object).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/stimulus_create.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Stimulus Create</literal>. Add a create stimulus between two
          objects selected using &button1; motion (from the originating object
          to the receiving object).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/stimulus_destroy.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Stimulus Destroy</literal>. Add a destroy stimulus between
          two objects selected using &button1; motion (from the originating
          object to the receiving object).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/stimulus_send.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Stimulus Send</literal>. Add a send stimulus between two
          objects selected using &button1; motion (from the originating object
          to the receiving object).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/stimulus_return.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Stimulus Return</literal>. Add a return stimulus between two
          objects selected using &button1; motion (from the originating object
          to the receiving object).</para></listitem>
      </itemizedlist>
    </sect2>

    <!-- Tools for Statechart Diagrams and in many cases for Activity Diagrams -->

    <sect2>
      <title>Statechart Diagram Specific Tools</title>

      <para>Ten tools are provided specific to UML artifacts on state
        diagrams. The detailed properties of these artifacts are described in
        the section on statechart diagram artifacts (see
        <xref linkend="ch.ref.entstate"/>).</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/state.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>State</literal>. Add a state to the
          diagram.</para></listitem> 

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/composite_state.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Composite State</literal>. Add a composite state to the
          diagram. All artifacts that are subsequently placed on the diagram on
          top of the composite state will form part of that composite
          state.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/transition.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Transition</literal>. Add a transition between two states
          selected using &button1; motion (from the originating state to the
          receiving state).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/initial_state.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Initial</literal>. Add an initial pseudostate to the
          diagram.</para>

        <caution><para>There is nothing to stop you adding more than one
          initial state to a diagram or composite state. However to do so is
          meaningless, and one of the critics will
          complain.
          <!-- TODO: Is that so? Check which critic. -->
        </para></caution></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/final_state.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Final State</literal>. Add a final state to the
          diagram.</para></listitem> 

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/branch.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Branch</literal>. Add a branch pseudostate to the
          diagram.</para>

        <caution><para>A well formed branch should have one incoming transition
          and two or more outgoing. &argouml; does not enforce this, but an
          &argouml; critic will complain about any branch that does not follow
          this rule.
          <!-- TODO: Is that so? Check which critic. -->
        </para></caution></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/fork.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Fork</literal>. Add a fork pseudostate to the
          diagram.</para>

        <caution><para>A well formed fork should have one incoming transition
          and two or more outgoing. &argouml; does not enforce this, but an
          &argouml; critic will complain about any fork that does not follow
          this rule.
          <!-- TODO: Is that so? Check which critic. -->
        </para></caution></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/join.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Join</literal>. Add a join pseudostate to the
          diagram.</para>

        <caution><para>A well formed join should have one outgoing transition
          and two or more incoming. &argouml; does not enforce this, but an
          &argouml; critic will complain about any join that does not follow
          this rule.
          <!-- TODO: Is that so? Check which critic. -->
        </para></caution></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/shallow_history.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Shallow History</literal>. Add a shallow history pseudostate
          to the diagram.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/deep_history.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Deep History</literal>. Add a deep history pseudostate
          to the diagram.</para></listitem>
      </itemizedlist>
    </sect2>

    <!-- Tools just for Collaboration Diagrams -->

    <sect2>
      <title>Collaboration Diagram Specific Tools</title>

      <para>Three tools are provided specific to UML artifacts on collaboration
        diagrams. The detailed properties of these artifacts are described in
        the section on collaboration diagram artifacts (see
        <xref linkend="ch.ref.entcollab"/>).</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/classifier_role.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Classifier Role</literal>. Add a classifier role to the
          diagram.</para></listitem> 

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/association_plain.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Association Role</literal>. Add an association role between 
          two classifier roles selected using &button1; motion (from the
          originating classifier role to the receiving classifier
          role). 
          There are 6 types of association roles offered here, 
          see <xref linkend="fig.ref.edit_association_tools"/>: 
          <literal>association</literal>,
          <literal>aggregation</literal> and 
          <literal>composition</literal>, and all these three can be  
          <literal>bidirectional</literal> or
          <literal>unidirectional</literal>.
          </para>
        </listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/message.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Add Message</literal>. Add a message to the selected
          association role.</para>

        <note><para>This tool is grayed out except when an association role is
          selected.</para></note></listitem>
      </itemizedlist>
    </sect2>

    <!-- Tools just for Activity Diagrams -->

    <sect2>
      <title>Activity Diagram Specific Tools</title>

      <para>Seven tools are provided specific to UML artifacts on activity
        diagrams. The detailed properties of these artifacts are described in
        the section on activity diagram artifacts (see
        <xref linkend="ch.ref.entactiv"/>).</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/action_state.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Action State</literal>. Add an action state to the
          diagram.</para></listitem> 

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/transition.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Transition</literal>. Add a transition between two action
          states selected using &button1; motion (from the originating action
          state to the receiving action state).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/initial_state.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Initial</literal>. Add an initial pseudostate to the
          diagram.</para>

        <caution><para>There is nothing to stop you adding more than one
          initial state to a diagram. However to do so is meaningless, and one
          of the critics will complain.</para></caution></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/final_state.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Final State</literal>. Add a final state to the
          diagram.</para></listitem> 

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/branch.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Branch</literal>. Add a branch pseudostate to the
          diagram.</para>

        <caution><para>A well formed branch should have one incoming transition
          and two or more outgoing. &argouml; does not enforce this, but an
          &argouml; critic will complain about any branch that does not follow
          this rule.</para></caution></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/fork.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Fork</literal>. Add a fork pseudostate to the
          diagram.</para>

        <caution><para>A well formed fork should have one incoming transition
          and two or more outgoing. &argouml; does not enforce this, but an
          &argouml; critic will complain about any fork that does not follow
          this rule.</para></caution></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/join.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Join</literal>. Add a join pseudostate to the
          diagram.</para>

        <caution><para>A well formed join should have one outgoing transition
          and two or more incoming. &argouml; does not enforce this, but an
          &argouml; critic will complain about any join that does not follow
          this rule.</para></caution></listitem>
      </itemizedlist>
    </sect2>

    <!-- Tools just for Deployment Diagrams -->

    <sect2>
      <title>Deployment Diagram Specific Tools</title>

      <para>Ten tools are provided specific to UML artifacts on deployment
        diagrams. The detailed properties of these artifacts are described in
        the section on deployment diagram artifacts (see
        <xref linkend="ch.ref.entdeploy"/>).</para>

      <note><para>Remember that &argouml;'s deployment diagrams are also used
        for component diagrams.</para></note>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/node.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Node</literal>. Add a node to the
          diagram. For convenience, when the mouse is over a selected node it
          displays four handles to left, right, top and bottom which may be
          dragged to form association relationships.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/node_instance.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Node Instance</literal>. Add a node instance to the
          diagram. For convenience, when the mouse is over a selected node
          instance it displays four handles to left, right, top and bottom
          which may be dragged to form link relationships.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/component.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Component</literal>. Add a component to the
          diagram. For convenience, when the mouse is over a selected component
          it displays four handles to left, right, top and bottom which may be
          dragged to form dependency relationships.</para></listitem> 

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/component_instance.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Component Instance</literal>. Add a component instance to
          the diagram. For convenience, when the mouse is over a selected
          component instance it displays four handles to left, right, top and
          bottom which may be dragged to form dependency
          relationships.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/dependency.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Dependency</literal>. Add a dependency between two artifacts
          selected using &button1; motion (from the dependent
          artifact).</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/association_plain.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Association</literal>. Add an association between two
          artifacts (node, component, class or interface) selected using
          &button1; motion (from the first artifact to the second
          artifact). There are 6 types of association offered here, 
          see <xref linkend="fig.ref.edit_association_tools"/>: 
          <literal>association</literal>,
          <literal>aggregation</literal> and 
          <literal>composition</literal>, and all these three can be  
          <literal>bidirectional</literal> or
          <literal>unidirectional</literal>.
          </para>

          <caution><para>The constraint that associations between classes and
          interfaces must not be navigable <emphasis>from</emphasis> the
          interface still applies on deployment
          diagrams.</para></caution>
        </listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject> <imagedata
          format="GIF" align="center" fileref="images/icons/object.gif"/>
          </imageobject></inlinemediaobject></guiicon>
          <literal>Object</literal>. Add an object to the diagram. For
          convenience, when the mouse is over a selected object it displays
          four handles to left, right, top and bottom, which may be dragged to
          form link relationships.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject>
          <imagedata format="GIF" align="center"
                     fileref="images/icons/link.gif"/> 
          </imageobject></inlinemediaobject></guiicon>
          <literal>Link</literal>. Add a link between two artifacts
          (node instance, component instance or object) selected using
          &button1; motion.</para></listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <!-- The Broom -->
  
  <sect1 id="s1.ref.edit_pane_broom">
    <title>The Broom</title>
    
    <para>&argouml;'s broom alignment tool is specialized to support the needs 
      of designers in achieving the kind of alignment used in UML diagrams. 
      It is common for designers to roughly align objects as they are created 
      or by using simple movement commands. 
      The broom is an easy way to precisely align objects 
      that are already roughly aligned.
      Furthermore, the broom's distribution options are suited 
      to the needs of UML designers: 
      making related objects appear evenly spaced, 
      packing objects to save diagram space, 
      and spreading objects out to make room for new objects. 
      The broom also makes it easy to change 
      from horizontal to vertical alignment or 
      from left-alignment to right-alignment.
    </para>
    
    <para>The T-shaped icon in &argouml;'s diagram toolbar 
      invokes the broom alignment tool. 
      <!-- TODO: Rewrite this para into something better explaining what to do
      as user to operate the broom. -->
      When the mouse &button1; is pressed while in broom-mode, 
      the designer's initial mouse movement orients the broom 
      to face in one of four directions: north, south, east, or west. 
      After that, mouse drag events cause the broom to advance 
      in the chosen direction, withdraw, or grow in a lateral direction. 
      Like a real-world push broom, the broom tool pushes diagram elements 
      that come in contact with it. 
      This has the effect of aligning objects along the face of the broom 
      and provides immediate visual feedback 
      (see the figure below). 
      Unlike a real-world broom, moving backwards 
      allows diagram elements to return to their original position. 
      Growing the broom makes it possible to align objects 
      that are not near each other. 
      When the mouse button is released, the broom disappears 
      and the moved objects are selected 
      to make it easy to manipulate them further.
    </para>
    <figure id="fig.ref.editpane_broom" float="1">
      <title>The Broom.</title>
      <informaltable frame="none">
        <tgroup cols="2">
          <tbody>
            <row>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_broom1.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_broom2.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
            </row>
            <row>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_broom3.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_broom4.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </figure>

    <para>If the designer presses the space bar while using the broom, 
      objects on the face of the broom are distributed (i.e., spaced evenly). 
      &argouml;'s broom supports three distribution modes: 
      objects can be spaced evenly across the space that they use, 
      objects can be packed together with only a small gap between them, 
      or objects can be distributed evenly over the entire length 
      of the broom's face. 
      Repeatedly pressing the space bar cycles among these three 
      distribution modes 
      and displays a brief message indicating the operation just performed.
    </para>
    <warning><para>
      This distribution function does not work in V0.14 of &argouml;.
    </para></warning>
      <!-- TODO: This does not seem to work. Did it ever?
      See issue ...-->

  </sect1>
  
  <!-- Selection Action Buttons -->
  
  <sect1 id="s1.ref.edit_pane_selection_action_buttons">
    <title>Selection Action Buttons</title>
    
    <para>When the user selects an artifact in a UML diagram, 
      several handles are drawn on it to indicate that it is selected 
      and to provide user interface affordances to resize the node. 
      &argouml; also displays some <quote>selection-action buttons</quote> 
      around the selected artifact. 
      See the figure below for some examples of the handles and 
      <quote>selection-action buttons</quote>. 
      The two figures for a class differ because for creating the second one,
      the shift key has been depressed.
    </para>
    
    <figure id="fig.ref.editpane_selection_action_buttons" float="1">
      <title>Some examples of <quote>Selection Action Buttons</quote>.</title>
      <informaltable frame="none">
        <tgroup cols="3">
          <tbody>
            <row>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_selection_action_buttons1.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_selection_action_buttons2.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_selection_action_buttons3.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
            </row>
            <row>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_selection_action_buttons4.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_selection_action_buttons5.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
              <entry>
                <screenshot><mediaobject>
                    <imageobject>
                      <imagedata format="PNG" align="center"
                                 fileref="images/reference/edit_selection_action_buttons6.png"/>
                    </imageobject>
                  </mediaobject></screenshot>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </figure>

    <para>Selection-action buttons offer common operations 
      on the selected object. For example, a class node has a button at 
      12-o'clock for adding a superclass, one at 6-o'clock for adding a subclass, 
      and buttons at 3-o'clock and 9-o'clock for adding associations. 
      These buttons support a "click or drag" interaction: 
      a single click creates a new related class at a default position 
      relative to the original class and creates a generalization or association; 
      a drag from the button to an existing class creates 
      only the generalization or association; 
      and, a drag to an empty space in the diagram creates a new class 
      at the mouse position and the generalization or association. 
      &argouml; provides some automated layout support so that clicking 
      the subclass button will position the new classes so 
      that they do not overlap.
    </para>
    
    <para>Selection-action buttons are transparent. 
      They have a visibly recognizable rectangular shape and size 
      and they contain an icon that is the same as the icon used 
      for the corresponding type of design element on the standard toolbar. 
      However, these icons are unfilled line drawings with many 
      transparent pixels. 
      This allows selection-action buttons to be overlaid onto the drawing area 
      without overly obscuring the diagram itself. 
      Also, the buttons are only drawn when the mouse is over the selected 
      artifact; if any part of the diagram is obscured, 
      the mouse can simply be moved away to get a clearer view of the diagram.
    </para>

  </sect1>


  <!-- Clarifiers -->

  <sect1>
    <title>Clarifiers</title>

    <para>A key feature of &argouml; are the critics, which run in parallel
      with the main &argouml; tool. When they find a problem, they typically
      raise a to-do item, and also highlight the problem on the editing
      pane. The graphical techniques used for highlighting are called
      <emphasis>Clarifiers</emphasis></para>

    <itemizedlist>
      <listitem><para>Note icon (<guiicon><inlinemediaobject><imageobject>
        <imagedata format="GIF" align="center"
                   fileref="images/icons/note.gif"/> 
        </imageobject></inlinemediaobject></guiicon>). Displayed at the top
        left of an artifact indicates a critic of that artifact. Moving the
        mouse over the icon will pop up the critic headline.</para></listitem>

      <listitem><para>Colored wavy line (<guiicon><inlinemediaobject>
        <imageobject><imagedata format="PNG" align="center"
                                fileref="images/reference/wavy_line.png"/> 
        </imageobject></inlinemediaobject></guiicon>). Used for critics
        specific to sub-components of graphical artifacts. For example to
        underline attributes with a problem within a class.</para></listitem>

      <listitem><para>Solid colored line (<guiicon><inlinemediaobject>
        <imageobject><imagedata format="PNG" align="center"
                                fileref="images/reference/solid_line.png"/> 
        </imageobject></inlinemediaobject></guiicon>). Not seen in ordinary
        editing, but used when a to-do item is highlighted from the to-do pane
        (see <xref linkend="ch.ref.todopane"/>) by &button1; double click. The
        solid line is used to show all the artifacts affected by the critic,
        for example all stimuli that are out of order.</para>
        <!-- TODO: Does this still work? -->
      </listitem>
    </itemizedlist>
  </sect1>

  <!-- The Grid -->

  <sect1>
    <title>The Drawing Grid</title>

    <para>The editing pane is provided with a background grid which can be set
      in various styles or turned off altogether through the
      menu (see
      <xref linkend="s2.ref.menu_adjust_grid"/>).</para>

    <para>Whatever grid is actually displayed, placement of items on the
      diagram is always controlled by the setting for grid snap, which ranges
      from 4 to 32 pixels (see <xref linkend="s2.ref.menu_grid_snap"/>).</para>
  </sect1>

  <!-- The Diagram Tab -->

  <sect1>
    <title>The Diagram Tab</title>

    <para>At the bottom of the editing pane is a small tab labeled as
      <literal>As Diagram</literal>. The concept is that a UML diagram can be
      displayed in a number of ways, for example as a graphical diagram or as a
      table. Each representation would have its own tab and be selected by
      &button1; click on the tab.</para>

    <para>Earlier versions of &argouml; did implement a tabular representation,
      but the current release only supports a diagram representation, so this
      tab does not function.</para>

    <para>In addition you can use &button1; double click on this tab to spawn a
      copy of the current diagram (see <xref linkend="s2.ref.spawn"/> for more
      details).</para>
  </sect1>

  <!-- The context sensitive pop-up menus -->

  <sect1 id="s1.ref.edit_pane_pop_up">
    <title>Pop-Up Menus</title>

    <!-- Tool Bar selection -->

    <para>Within the editing pane, &button2; click over an artifact will bring
      up a pop-up menu with a variable number of main entries, each with a
      sub-menu.</para>

    <!-- Critiques sub-menu -->

    <sect2>
      <title>Critiques</title>

      <para>This sub-menu gives list of all the critics that have triggered for
        this artifact. Selection of a menu entry causes that entry to be
        highlighted in the to-do pane and its detailed explanation to be placed
        in the <literal>ToDoItem</literal> tab of the details pane.</para>
    </sect2>

    <!-- Ordering sub-menu -->

    <sect2>
      <title>Ordering</title>

      <para>This menu controls the ordering of overlapping artifacts on the
        diagram. It is equivalent to the <literal>Reorder</literal> sub-menu of
        the <literal>Arrange</literal> menu (see
        <xref linkend="s2.ref.menu_reorder"/>). There are four entries.</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject><imagedata
            format="GIF" align="center"
            fileref="images/icons/forward.gif"/>
          </imageobject></inlinemediaobject></guiicon>
          <literal>Forward</literal>. The selected artifacts are moved one
          step forward in the ordering hierarchy with respect to 
          other artifacts they overlap.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject><imagedata
            format="GIF" align="center"
            fileref="images/icons/backward.gif"/>
          </imageobject></inlinemediaobject></guiicon>
          <literal>Backward</literal>. The selected artifacts are moved one
          step back in the ordering hierarchy with respect to 
          other artifacts they overlap.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject><imagedata
            format="GIF" align="center"
            fileref="images/icons/to_front.gif"/>
          </imageobject></inlinemediaobject></guiicon> <literal>To
          Front</literal>. The selected artifacts are moved to the front of
          any other artifacts they overlap.</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject><imagedata
            format="GIF" align="center"
            fileref="images/icons/to_back.gif"/>
          </imageobject></inlinemediaobject></guiicon> <literal>To
          Back</literal>. The selected artifacts are moved to the back of any
          other artifacts they overlap.</para></listitem>
      </itemizedlist>
    </sect2>

    <!-- Properties sub-menu -->

    <sect2>
      <title>Properties</title>

      <para>This entry has no sub-menu. Selecting the entry will cause the
        property tab for the selected artifact to be displayed in the details
        pane.
        <!-- TODO: Enter an issue to remove this useless item. -->
      </para>
    </sect2>

    <!-- Add sub-menu -->

    <sect2>
      <title>Add</title>

      <para>This sub-menu only appears for artifacts that can have notes
        attached (class, interface, object, state, pseudostate) or have
        operations or attributes added (class, interface). There are at most
        three entries.</para>

      <itemizedlist>
        <listitem><para><guiicon><inlinemediaobject><imageobject><imagedata
            format="GIF" align="center"
            fileref="images/icons/attribute.gif"/>
          </imageobject></inlinemediaobject></guiicon>
          <literal>Add Attribute</literal>. Only appears where the selected
            artifact is a class<!-- or interface-->. Adds an attribute to the
            artifact</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject><imagedata
            format="GIF" align="center"
            fileref="images/icons/operation.gif"/>
          </imageobject></inlinemediaobject></guiicon>
          <literal>Add Operation</literal>. Only appears where the selected
            artifact is a class or interface. Adds an operation to the
            artifact</para></listitem>

        <listitem><para><guiicon><inlinemediaobject><imageobject><imagedata
            format="GIF" align="center"
            fileref="images/icons/note.gif"/>
          </imageobject></inlinemediaobject></guiicon>
          <literal>Note</literal>. Attaches a note to the selected
          artifact.</para></listitem>
      </itemizedlist>
    </sect2>

    <!-- Show sub-menu -->

    <sect2>
      <title>Show</title>

      <para>This sub-menu only appears with use case, class or object
        artifacts. It is used to control whether the extension point
        compartment is displayed for use cases and whether the attribute and
        operation compartments are displayed for classes and objects. There are
        six possible entries, but at most three show at any one time.</para>

      <itemizedlist>
        <listitem><para><literal>Hide Extension Point
          Compartment</literal>. Only appears when the extension point
          compartment of a use case is displayed. Hides the
          compartment.</para></listitem>

        <listitem><para><literal>Show Extension Point
          Compartment</literal>. Only appears when the extension point
          compartment of a use case is hidden. Displays the
          compartment.</para></listitem>

        <listitem><para><literal>Hide All Compartments</literal>. Only appears
          when both attribute and operation compartments are displayed on a
          class or object. Hides both compartments.</para></listitem>

        <listitem><para><literal>Show All Compartments</literal>. Only appears
          when both attribute and operation compartments are hidden on a class
          or object. Displays both compartments.</para></listitem>

        <listitem><para><literal>Hide Attribute Compartment</literal>. Only
          appears when the attribute compartment of a class or object is
          displayed. Hides the compartment.</para></listitem>

        <listitem><para><literal>Show Attribute Compartment</literal>. Only
          appears when the attribute compartment of a class or object is
          hidden. Displays the compartment.</para></listitem>

        <listitem><para><literal>Hide Operation Compartment</literal>. Only
          appears when the operation compartment of a class or object is
          displayed. Hides the compartment.</para></listitem>

        <listitem><para><literal>Show Operation Compartment</literal>. Only
          appears when the operation compartment of a class or object is
          hidden. Displays the compartment.</para></listitem>

        <listitem><para><literal>Show All Edges</literal>. Only
          appears on a class.  Displays all associations (to shown artifacts)
          that are not shown yet. This is the same function as the "add to
          Diagram" on the asociation in the explorer context menu.
          currently.
        </para></listitem>

        <listitem><para><literal>Hide All Edges</literal>. Only
          appears on a class. Hides all associations. 
          This is the same function as <quote>Remove from
          Diagram</quote> on all the associations of this class.
        </para></listitem>

        <listitem><para><literal>Hide Stereotype</literal>. Only
          appears when the Stereotype of a package is displayed.
          Hides the stereotype.
        </para></listitem>

        <listitem><para><literal>Show Stereotype</literal>. Only
          appears when the Stereotype of a package is hidden.
          Displays the stereotype.
        </para></listitem>

        </itemizedlist>
    </sect2>

    <!-- Modifiers sub-menu -->

    <sect2>
      <title>Modifiers</title>

      <para>This sub-menu only appears with class, interface, package 
        and use case artifacts. 
        It is used to set
        or clear the values of the various modifiers available.</para>

      <itemizedlist>
        <listitem><para><literal>Public</literal>. Set if this artifact is
          visible outside its package.</para></listitem>

        <listitem><para><literal>Abstract</literal>. Set for an abstract
        artifact.</para></listitem>

        <listitem><para><literal>Leaf</literal>. Set for a final artifact,
          i.e. one with no subartifacts.</para></listitem>

        <listitem><para><literal>Root</literal>. Set for a root artifact, i.e. one
          with no superartifacts.</para></listitem>

        <listitem><para><literal>Active</literal>. Set for a artifact with dynamic
          behavior.</para>

        <note><para>This really ought to be set automatically for artifacts with
          state machines or activity diagrams.</para></note></listitem>
      </itemizedlist>
    </sect2>

    <!-- Multiplicity sub-menu -->

    <sect2>
      <title>Multiplicity</title>

      <para>This sub-menu only appears with association artifacts, 
        when clicking at one end of the association. It is
        used to control the multiplicity at the end of the association nearest
        the mouse click point. There are only four entries, a sub-set of the
        range of multiplicities that are available through the property sheet
        of a association end (see
        <xref linkend="s1.ref.association_end_use_case"/>).</para>

      <itemizedlist>
        <listitem><para><literal>1</literal></para></listitem>

        <listitem><para><literal>0..1</literal></para></listitem>

        <listitem><para><literal>1..*</literal></para></listitem>

        <listitem><para><literal>0..*</literal></para></listitem>
      </itemizedlist>
    </sect2>

    <!-- Aggregatio sub-menu -->

    <sect2>
      <title>Aggregation</title>

      <para>This sub-menu only appears with association artifacts, 
        when clicking at one end of the association. It is
        used to control the aggregation at the end of the association nearest
        the mouse click point. There are three entries.</para>

      <itemizedlist>
        <listitem><para><literal>none</literal>. Remove any
          aggregation.</para></listitem>

        <listitem><para><literal>aggregate</literal>. Make this end a shared
          aggregation (loosely known as an
          <quote>aggregation</quote>).</para></listitem>

        <listitem><para><literal>composite</literal>. Make this end a composite
          aggregation (loosely known as a
          <quote>composition</quote>).</para></listitem>
      </itemizedlist>

      <caution><para>UML requires that an end with a composition relationship
        must have a multiplicity of 1 (the default).</para></caution>
    </sect2>

    <!-- Navigability sub-menu -->

    <sect2>
      <title>Navigability</title>

      <para>This sub-menu only appears with association artifacts, 
        when clicking at one end of the association. It is used
        to control the navigability of the association. There are three
        entries.</para>

      <itemizedlist>
        <listitem><para><literal>bidirectional</literal>. Make the association
          navigable in both directions.</para></listitem>

        <listitem><para><literal>&lt;class1&gt; to
          &lt;class2&gt;</literal>. Make the association navigable
          only from &lt;class1&gt; to
          &lt;class2&gt;. In other words
          &lt;class1&gt; can reference &lt;class2&gt;
          but not the other way round.</para></listitem>

        <listitem><para><literal>&lt;class2&gt; to
          &lt;class1&gt;</literal>. Make the association navigable
          only from &lt;class2&gt; to
          &lt;class1&gt;. In other words
          &lt;class2&gt; can reference &lt;class1&gt;
          but not the other way round.</para></listitem>
      </itemizedlist>

      <note><para>UML does permit an association to be non-navigable in both
        directions. &argouml; will allow this, but you will have to set each of the
        association ends navigation property, reached from the property tab of
        the association - and the diagram does not show any arrows in this case.
        </para>

      <para>This is considered bad design practice (it will trigger a critic in
        &argouml;), so is only of theoretical interest.</para></note>

      <note><para>UML does not permit navigability from an interface to a
        class.
        <!-- TODO: The next statement is not working for V0.14. See issue ... -->
        <!--This drop down is disabled for associations between interfaces
        and classes.--> &argouml; does not prevent this.
      </para></note>
    </sect2>

  </sect1>

</chapter>

<!-- Local stuff for Emacs - please do not delete

Local Variables:
mode: xml
sgml-doctype: "argomanual.xml"
sgml-parent-document: ("argomanual.xml" "chapter" nil)
sgml-validate-command: "nsgmls -wxml -sv ../docbook-setup/xml.dcl \
  argomanual.xml"
indent-tabs-mode: nil
End:

-->
