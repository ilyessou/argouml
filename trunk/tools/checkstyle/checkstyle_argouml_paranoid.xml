<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<module name="Checker">
  <property name="severity" value="warning"/>

  <module name="NewlineAtEndOfFile"/>

  <module name="PackageHtml"/>

  <module name="StrictDuplicateCode">
    <property name="min" value="30"/> <!-- Raised to avoid the Copyright -->
  </module>

  <module name="Translation"/>

  <module name="TreeWalker">

    <module name="AnonInnerLength"/>
    <module name="ArrayTrailingComma"/>
    <module name="ArrayTypeStyle"/>
    <module name="AvoidInlineConditionals"/>
    <module name="AvoidNestedBlocks"/>
    <module name="AvoidStarImport"/>
    <module name="ConstantName"/>
    <module name="CovariantEquals"/>

    <module name="CyclomaticComplexity">
      <property name="max" value="15"/>
    </module>

    <module name="DoubleCheckedLocking"/>

    <module name="EmptyBlock">
      <!-- All except catch and for. -->
      <property name="tokens" value="LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_IF,LITERAL_TRY,LITERAL_WHILE,STATIC_INIT"/>
    </module>

    <module name="EmptyBlock">
      <property name="tokens" value="LITERAL_CATCH"/>
      <property name="option" value="text"/>
    </module>


    <module name="EmptyForIteratorPad"/>
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="ExecutableStatementCount"/>
    <module name="ExplicitInitialization"/>
    <module name="FileLength"/>
    <module name="FinalClass"/>

    <module name="GenericIllegalRegexp">
      <property name="format" value="@todo"/>
    </module>

    <module name="GenericIllegalRegexp">
      <property name="format" value="TODO "/>
    </module>

    <module name="GenericIllegalRegexp">
      <property name="format" value="[Nn]eeds?-?more-?work"/>
    </module>

    <module name="GenericIllegalRegexp">
      <property name="format" value="non-Javadoc"/>
    </module>


    <module name="GenericIllegalRegexp">
      <property 
            name="format"
            value="/\*\* (needs documenting|to be documented|\s*) \*/"/>
    </module>


    <module name="GenericIllegalRegexp">
      <property 
            name="format"
            value="(public|protected).*Logger"/>
      <property
	        name="message"
            value="The Logger shall be private in the ArgoUML project."/>
    </module>

    <module name="GenericIllegalRegexp">
      <property 
            name="format"
            value="^[^/*]*Logger[ \t][ \t]*([^L]|L[^O]|LO[^G]|LOG[^ \t])"/>
      <property
	        name="message"
            value="The Logger shall be named LOG in the ArgoUML project."/>
    </module>


    <module name="GenericIllegalRegexp">
      <property name="format" value="^//\s*File:"/>
      <property name="message"
	            value="Remove line from old style header format. Get filename from your editor."/>
    </module>


    <module name="GenericIllegalRegexp">
      <property name="format" value="^//\s*Class(es)?:"/>
      <property name="message"
	            value="Remove line from old style header format. Get class list from your IDE."/>
    </module>


    <module name="GenericIllegalRegexp">
      <property name="format" value="^//\s*(Original )?[Aa]uthor:"/>
      <property name="message"
	            value="Remove line from old style header format. Use @author tag."/>
    </module>


    <module name="GenericIllegalRegexp">
      <property name="format" value="\s+$"/>
      <property name="message" value="Line has trailing spaces."/>
    </module>



    <!-- Forbid assignments that are split later. -->
    <module name="GenericIllegalRegexp">
      <property name="format" value=" = [^;{]*$"/>
      <property name="message" value="Preferably split assignments immediatly."/>
    </module>

    
    <module name="HiddenField"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="IllegalCatch"/>

    <module name="IllegalImport">
      <property name="severity" value="error"/>
    </module>

    <module name="IllegalInstantiation">
      <property name="severity" value="error"/>
    </module>

    <module name="IllegalType"/>

    <module name="Indentation">
      <property name="caseIndent" value="0"/>
    </module>

    <module name="InterfaceIsType"/>
    <module name="InnerAssignment"/>

    <module name="JavadocType">
      <property name="scope" value="private"/>
    </module>

    <module name="JavadocMethod">
      <property name="scope" value="private"/>
      <property name="allowUndeclaredRTE" value="true"/>
      <property name="logLoadErrors" value="true"/>
      <property name="suppressLoadErrors" value="true"/>
      <property name="allowMissingJavadoc" value="true"/>
    </module>

    <module name="JavadocStyle"/>

    <module name="JavadocVariable">
      <property name="scope" value="private"/>
    </module>

    <module name="JUnitTestCase"/>
    <module name="LeftCurly"/>

    <module name="LineLength">
      <!-- ignore Javadoc refs, imports, & CVS Id tagline -->
      <property name="ignorePattern"
	      value="^( *\* @see |import |// \$Id:)"/>
    </module>

    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MagicNumber"/>

    <module name="MemberName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$|^LOG$"/>
    </module>

    <module name="MethodLength"/>
    <module name="MethodName"/>
    <module name="MissingSwitchDefault"/>
    <module name="ModifierOrder"/>
    <module name="MutableException"/>
    <module name="NeedBraces"/>

    <module name="NestedIfDepth">
      <property name="max" value="3"/>
    </module>

    <module name="NestedTryDepth"/>    
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>

    <module name="NoWhitespaceBefore">
      <property name="tokens" value="DOT"/>
      <property name="allowLineBreaks" value="true"/>
    </module>

    <module name="OperatorWrap"/>
    <module name="PackageDeclaration"/>
    <module name="PackageName"/>
    <module name="ParameterAssignment"/>
    <module name="ParameterName"/>
    <module name="ParameterNumber"/>
    <module name="ParenPad"/>
    <module name="RedundantImport"/>
    <module name="RedundantModifier"/>
    <module name="RedundantThrows"/>

    <module name="RegexpHeader">
      <property name="headerFile" value="${checkstyle.header.file}"/>
    </module>

    <module name="RightCurly"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>
    <module name="StaticVariableName"/>
    <module name="StringLiteralEquality"/>

    <module name="ThrowsCount">
      <property name="max" value="2"/>
    </module>

    <module name="TypecastParenPad"/>
    <module name="TypeName"/>
    <module name="UnusedImports"/>
    <module name="UpperEll"/>

    <module name="VisibilityModifier">
      <property name="publicMemberPattern" value="^$"/>
    </module>

    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN"/>
    </module>

    <!-- Formatting of Javadoc comments.
		
         These rules contains some suggested formatting rules.
         If you don't like them, please tell me (Linus) why!
		
     -->

    <module name="GenericIllegalRegexp">
      <property name="format" value="^\s*/\*\*.*\S"/>
      <property name="message" value="Javadoc first sentence on same line as opening comment."/>
    </module>

    <module name="GenericIllegalRegexp">
      <property name="format" value="^\s*\*.*\*/"/>
      <property name="message" value="Javadoc end not on line by itself."/>
    </module>

    <module name="GenericIllegalRegexp">
      <!-- Make sure <p> is last on a line. -->
      <property name="format" value="^\s*\*\s*&lt;p&gt;"/>            
      <property name="message" value="&lt;p&gt; should be at the end of a line to improve readability of the non-formatted comment."/>
    </module>

    <module name="GenericIllegalRegexp">
      <!-- Allow: a, code, em, img, li, ol, p, pre, strong, ul -->
      <!-- The following HTML tags are among others forbidden by this: 
           Fonts: basefont, font, b, i, s, strike, u, tt, big, small, sub, sup, blink.
           Comments: xmp, listing, plaintext, comment
           Images: AREA, MAP, SPACER
           Lines and paragraphs: br, center, hr, nobr, wbr, blockquote, </p>
           lists: dir, menu, dl, dt, dd
           Logical: h1-h6, ins, del, cite, address, samp, kbd, var, dfn
           All tags to support forms, frames, scripts, sounds, applets, css, embedded objects.
        -->
      <property name="format" value="^\s*\*.*&lt;([^aceilopsu/]|a[^ >]|c[^o]|co[^d]|cod[^e]|code[^>]|e[^m]|em[^>]|i[^m]|im[^g]|img|l[^i]|li[^>]|o[^l]|ol[^>]|p[^r>]|pr[^e]|pre[^>]|s[^t]|st[^r]|str[^o]|stro[^n]|stron[^g]|strong[^>]|u[^l]|ul[^>])"/>
      <property name="message" value="Strange HTML tag. There should be no reason to use this tag."/>
    </module>

    <module name="GenericIllegalRegexp">
      <!-- Allow closing: a, code, em, ol, pre, strong, ul -->
      <property name="format" value="^\s*\*.*&lt;/([^aceiopsu]|a[^>]|c[^o]|co[^d]|cod[^e]|code[^>]|e[^m]|em[^>]|o[^l]|ol[^>]|p[^r]|pr[^e]|pre[^>]|s[^t]|st[^r]|str[^o]|stro[^n]|stron[^g]|strong[^>]|u[^l]|ul[^>])"/>
      <property name="message" value="End of strange HTML tag. There should be no reason to use this end tag."/>
    </module>

	<!-- Over the top also in the paranoid version:

    <module name="DesignForExtension"/>
    <module name="FinalParameters"/>
	-->

  </module>
</module>
