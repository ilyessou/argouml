<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<module name="Checker">
  <property name="severity" value="warning"/>

  <module name="PackageHtml"/>

  <module name="Translation"/>

  <module name="TreeWalker">

    <module name="ConstantName"/>
    <module name="DoubleCheckedLocking"/>

    <module name="EmptyBlock">
        <property name="option" value="text"/>
      <!-- All except catch and for. -->
      <property name="tokens" value="LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_IF,LITERAL_TRY,LITERAL_WHILE,STATIC_INIT"/>
    </module>

    <module name="EqualsHashCode"/>
    <module name="FileContentsHolder"/>
    <module name="FileLength"/>
    <module name="GenericIllegalRegexp">
      <property name="format" value="@todo"/>
    </module>

    <module name="GenericIllegalRegexp">
      <property name="format" value="[Nn]eeds?-?more-?work"/>
    </module>

    <module name="GenericIllegalRegexp">
      <property name="format" value="non-Javadoc"/>
    </module>


    <module name="GenericIllegalRegexp">
      <property 
            name="format"
            value="/\*\* (needs documenting|to be documented|\s*) \*/"/>
    </module>


    <module name="GenericIllegalRegexp">
      <property 
            name="format"
            value="(public|protected).*Logger"/>
      <property
	        name="message"
            value="The Logger shall be private in the ArgoUML project."/>
    </module>

    <module name="GenericIllegalRegexp">
      <property 
            name="format"
            value="^[^/*]*Logger[ \t][ \t]*([^L]|L[^O]|LO[^G]|LOG[^ \t])"/>
      <property
	        name="message"
            value="The Logger shall be named LOG in the ArgoUML project."/>
    </module>

    <module name="HiddenField"/>

    <module name="IllegalImport">
      <property name="severity" value="error"/>
    </module>

    <module name="IllegalInstantiation">
      <property name="severity" value="error"/>
    </module>
    <module name="Indentation">
      <property name="caseIndent" value="0"/>
    </module>

    <module name="InnerAssignment"/>

    <module name="JavadocType">
      <property name="scope" value="protected"/>
    </module>

    <module name="JavadocMethod">
      <property name="scope" value="protected"/>
      <property name="allowUndeclaredRTE" value="true"/>
      <property name="logLoadErrors" value="true"/>
      <property name="suppressLoadErrors" value="true"/>
      <property name="allowMissingJavadoc" value="true"/>
    </module>
    <module name="JavadocVariable">
      <property name="scope" value="protected"/>
    </module>

    <module name="LineLength">
      <!-- ignore Javadoc refs, imports, & CVS Id tagline -->
      <property name="ignorePattern"
	      value="^( *\* @see |import |/[/*] \$Id:)"/>
    </module>

    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>

    <module name="MemberName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$|^LOG$"/>
    </module>

    <module name="MethodLength"/>
    <module name="MethodName"/>
    <module name="NeedBraces"/>

    <module name="ModifierOrder"/>
    <module name="NoWhitespaceAfter"/>

    <module name="NoWhitespaceBefore"/>
    <module name="NoWhitespaceBefore">
      <property name="tokens" value="DOT"/>
      <property name="allowLineBreaks" value="true"/>
    </module>

    <module name="OperatorWrap"/>

    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="ParameterNumber"/>
    <module name="RedundantImport"/>

    <module name="RegexpHeader">
      <property name="headerFile" value="${checkstyle.header.file}"/>
    </module>

    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>
    <module name="UnusedImports"/>
    <module name="UpperEll"/>
    <module name="VisibilityModifier">
      <property name="publicMemberPattern" value="^$"/>
    </module>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN"/>
    </module>

    <!-- To enable later:

    <module name="EmptyBlock">
      <property name="tokens" value="LITERAL_CATCH"/>
      <property name="option" value="text"/>
    </module>

    <module name="LeftCurly">
      <property name="option" value="nl"/>
      <property name="tokens" value="CLASS_DEF,INTERFACE_DEF"/>
    </module>
    <module name="LeftCurly">
      <property name="option" value="nlow"/>
      <property name="tokens" value="METHOD_DEF,CTOR_DEF,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE"/>
    </module>

    <module name="RedundantModifier"/>
    <module name="RightCurly">
      <property name="option" value="alone"/>
      <property name="tokens" value="LITERAL_ELSE"/>
    </module>
    <module name="RightCurly">
      <property name="option" value="same"/>
      <property name="tokens" value="LITERAL_CATCH,LITERAL_TRY"/>
    </module>

    <module name="TodoComment"/>
    -->
  </module>
  
  <module name="SuppressionCommentFilter"/>

</module>
