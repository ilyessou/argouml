# $Id$
# Copyright (c) 2004 The Regents of the University of California. All
# Rights Reserved. Permission to use, copy, modify, and distribute this
# software and its documentation without fee, and without a written
# agreement is hereby granted, provided that the above copyright notice
# and this paragraph appear in all copies.  This software program and
# documentation are copyrighted by The Regents of the University of
# California. The software program and documentation are supplied "AS
# IS", without any accompanying services from The Regents. The Regents
# does not warrant that the operation of the program will be
# uninterrupted or error-free. The end-user understands that the program
# was developed for research purposes and is advised not to rely
# exclusively on the program for any reason.  IN NO EVENT SHALL THE
# UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
# SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
# UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
# 
# Keys in the same order as in org.argouml.uml.cognitive.critics.Init
#

checklist.class.naming = Naming
checklist.class.naming.describe-clearly = \
	Does the name '<ocl>self</ocl>' clearly describe the class?
checklist.class.naming.is-noun = \
	Is '<ocl>self</ocl>' a noun or noun phrase?
checklist.class.naming.misinterpret = \
	Could the name '<ocl>self</ocl>' be misinterpreted to mean \
	something else?

checklist.class.encoding = Encoding
checklist.class.encoding.convert-to-attribute = \
	Should <ocl>self</ocl> be its own class or \
	a simple attribute of another class?
checklist.class.encoding.do-just-one-thing = \
	Does <ocl>self</ocl> do exactly one thing and do it well?
checklist.class.encoding.break-into-parts = \
	Could <ocl>self</ocl> be broken down into two or more classes?

checklist.class.value = Value
checklist.class.value.start-with-meaningful-values = \
	Do all attributes of <ocl>self</ocl> start with meaningful values?
checklist.class.value.convert-to-invariant = \
	Could you write an invariant for this class?
checklist.class.value.establish-invariant-in-constructors = \
	Do all constructors establish the class invariant?
checklist.class.value.maintain-invariant = \
	Do all operations maintain the class invariant?

checklist.class.location = Location
checklist.class.location.move-somewhere = \
	Could <ocl>self</ocl> be defined in a different location \
	in the class hierarchy?
checklist.class.location.planned-subclasses = \
 	Have you planned to have subclasses of <ocl>self</ocl>?
checklist.class.location.eliminate-class = \
	Could <ocl>self</ocl> be eliminated from the model?
checklist.class.location.eliminates-or-affects-something-else = \
	Is there another class in the model that should be revised 
	or eliminated because it serves the same purpose as <ocl>self</ocl>?

checklist.class.updates = Updates
checklist.class.updates.reasons-for-update = \
	For what reasons will an instance of <ocl>self</ocl> be updated?
checklist.class.updates.affects-something-else = \
	Is there some other object that must be updated whenever \
	<ocl>self</ocl> is updated?


checklist.attribute.naming = Naming
checklist.attribute.naming.describe-clearly = \
	Does the name '<ocl>self</ocl>' clearly describe the attribute?
checklist.attribute.naming.is-noun = \
	Is '<ocl>self</ocl>' a noun or noun phrase?
checklist.attribute.naming.misinterpret = \
	Could the name '<ocl>self</ocl>' be misinterpreted to mean \
	something else?

checklist.attribute.encoding = Encoding
checklist.attribute.encoding.is-too-restrictive = \
	Is the type <ocl>self.type</ocl> too restrictive to represent \
	all possible values of <ocl>self</ocl>?
checklist.attribute.encoding.allow-impossible-values = \
	Does the type <ocl>self.type</ocl> allow values for <ocl>self</ocl> \
	that could never be correct?
checklist.attribute.encoding.combine-with-other = \
	Could <ocl>self</ocl> be combined with some other \
	attribute of <ocl>self.owner</ocl> (e.g., {owner.structuralFeature})?
checklist.attribute.encoding.break-into-parts = \
	Could <ocl>self</ocl> be broken down into two or more parts \
	(e.g., a phonenumber can be broken down into \
	area code, prefix, and number)?
checklist.attribute.encoding.is-computable = \
	Could <ocl>self</ocl> be computed from other attributes \
	instead of stored?

checklist.attribute.value = Value
checklist.attribute.value.default-value = \
	Should <ocl>self</ocl> have an initial (or default) value?
checklist.attribute.value.correct-default-value = \
	Is the initial value <ocl>self.initialValue</ocl> correct?
checklist.attribute.value.is-correctness-checkable = \
	Could you write an expression to check if <ocl>self</ocl> is correct? \
	Plausible?

checklist.attribute.location = Location
checklist.attribute.location.move-somewhere = \
	Could <ocl>self</ocl> be defined in a different class \
	that is associated with <ocl>self.owner</ocl>?
checklist.attribute.location.move-up-hierarchy = \
	Could <ocl>self</ocl> be moved up the inheritance hierarchy \
	to apply to <ocl>owner.name</ocl> and to other classes?
checklist.attribute.location.include-all = \
	Does <ocl>self</ocl> apply to all instances of \
	class <ocl>self.owner</ocl> including instances of subclasses?
checklist.attribute.location.could-be-eliminated = \
	Could <ocl>self</ocl> be eliminated from the model?
checklist.attribute.location.eliminates-or-affects-something-else = \
	Is there another attribute in the model that should be revised or \
	eliminated because it serves the same purpose as <ocl>self</ocl>?

checklist.attribute.updates = Updates
checklist.attribute.updates.reasons-for-update = \
	For what reasons will <ocl>self</ocl> be updated?
checklist.attribute.updates.affects-something-else = \
	Is there some other attribute that must be updated whenever \
	<ocl>self</ocl> is updated?
checklist.attribute.updates.exists-method-for-update = \
	Is there a method that should be called when \
	<ocl>self</ocl> is updated?
checklist.attribute.updates.exists-method-for-specific-value = \
	Is there a method that should be called when \
	<ocl>self</ocl> is given a certain kind of value?

