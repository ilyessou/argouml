<?xml version="1.0" encoding="ISO-8859-1"?>
<sect1 id="logging">
<title>Logging</title>
<para>
        <application>ArgoUML</application> uses the standard 
        <ulink url="http://jakarta.apache.org/log4j/">log4j</ulink>
        logging facility. the following sections deal with the current
        implementation in <application>ArgoUML</application>. By
        default, logging is turned off and only the version
        information of all used libraries and Exceptions are shown on
        the console.
    </para>
 
    <note>
        <para>
            <application>ArgoUML</application> currently uses 
            <ulink url="http://jakarta.apache.org/log4j/">log4j</ulink>
            version 1.1.3.
            An update to
            <ulink url="http://jakarta.apache.org/log4j/">log4j</ulink>
            version 1.2.x is planned for
            <application>ArgoUML</application> release 0.11.x.
            Instructions in the following sections deal with
            <ulink url="http://jakarta.apache.org/log4j/">log4j</ulink>
            version 1.2.x.
        </para>
    </note>
    
    <sect2>
        <title>What to Log</title>
        <para>
            Logging entries in
            <ulink url="http://jakarta.apache.org/log4j/">log4j</ulink>
            belong to exactly <emphasis>one</emphasis> level:
            <itemizedlist>
                <listitem>FATAL</listitem>
                <listitem>ERROR</listitem>
                <listitem>WARN</listitem>
                <listitem>INFO</listitem>
                <listitem>DEBUG</listitem>
            </itemizedlist>

            This list is ordered according to the priority of these
            logging entries i.e.  if logging on level WARN is enabled,
            all logging entries that belong to the above levels ERROR
            and FATAL are logged as well.
        </para>
        <itemizedlist>
            <listitem>
                General rules for logging in <application>ArgoUML</application>
                <para>TBD</para>
            </listitem>
            <listitem>
                Rules for assigning levels to logging entries 
                (DEBUG, INFO, WARN, ERROR, FATAL)
                <para>TBD</para>
            </listitem>
        </itemizedlist>
    </sect2>
    
    <sect2>
        <title>How to Create Log Entries...</title>
        <important>
            <para>
                You should <emphasis>not</emphasis> use
                <function>System.out.println</function> in your own
                Java Code. The only exception of this rule shall be to
                print the usage of <application>ArgoUML</application>
                in <classname>main.java</classname>.
            </para>
        </important>
        
        <para>
            To make log entries from within your own classes, you just
            need to follow the three steps below:
            <orderedlist>
                <listitem>Import the org.apache.log4j.Logger package</listitem>
                <listitem>Get a Logger</listitem>
                <listitem>Start Logging...</listitem>
            </orderedlist>
        </para>
        <example>
            <title>For log4j version 1.2.x</title>
            <programlisting>
import org.apache.log4j.Logger;

Logger _logger = Logger.getLogger(<emphasis>theClass</emphasis>.class.getName());

...

public void anExample() {
    _logger.debug("This is a debug message.");
    _logger.info("This is a info message.");
    _logger.warn("This is a warning.");
    _logger.error("This is an error.");
    _logger.fatal("This is fatal. The program stops now working...");
}
            </programlisting>
        </example>
        <para>
            For more information go to the log4j homepage at
            <ulink url="http://jakarta.apache.org/log4j/">http://jakarta.apache.org/log4j</ulink>.
        </para>
    </sect2>
    
    <sect2>
        <title>How to Enable Logging...</title>
        <para>
            <ulink url="http://jakarta.apache.org/log4j/">log4j</ulink>
            uses the command line parameter
            <parameter>-Dlog4j.configuration = URL</parameter>
            to configure itself where URL points to the location of
            your log4j configuration file.
        </para>
        <example>
            <title>Various URLs</title>
            <programlistingco>
                <programlisting>
org/argouml/resource/<emphasis>filename.lcf</emphasis>              <co id="ex.url.package"/>

http://localhost/shared/argouml/<emphasis>filename.lcf</emphasis>   <co id="ex.url.link"/>

file://home/username/<emphasis>filename.lcf</emphasis>              <co id="ex.url.file"/>
                </programlisting>
                <calloutlist>
                    <callout arearefs="ex.url.package">
                        Reference to a configuration file <emphasis>filename.lcf</emphasis> 
                        within argouml.jar.
                    </callout>
                    <callout arearefs="ex.url.link">
                        Reference to a configuration file <emphasis>filename.lcf</emphasis> 
                        on a remote server/localhost.
                    </callout>
                    <callout arearefs="ex.url.file">
                        Reference to a configuration file <emphasis>filename.lcf</emphasis>
                        on your localmachine.
                    </callout>
                </calloutlist>
            </programlistingco>
        </example>
        <sect3>
            <title>...when running ArgoUML from the command line</title>
            <para>
                There are currently two possibilities of running
                <application>ArgoUML</application> from the command
                line:
                <orderedlist>
                    <listitem>
                        Run <application>ArgoUML</application> using
                        <filename>argouml.jar</filename>
                    </listitem>
                    <listitem>
                        Run <application>ArgoUML</application> using
                        the ant script
                    </listitem>                    
                </orderedlist>

                In the first case, the configuration file is specified
                directly on the command line, whereas in the latter
                case this parameter is specified in the
                <filename>build.xml</filename> (which in that case
                needs to be modified).
                <application>ArgoUML</application> is then started as
                usual with <command>./build run</command>.
             </para>
             <example>
                <title>Command Line for argouml.jar</title>
                <programlisting>
[localhost:~] billy% java -Dlog4j.configuration=URL -jar argouml.jar                        
                </programlisting>
            </example>
            <example>
                <title>Modification of build.xml</title>
                <programlisting>
&lt;!-- =================================================================== --&gt;
&lt;!-- Run ArgoUML from compiled sources                                   --&gt;
&lt;!-- =================================================================== --&gt;
&lt;target name="run" depends="compile"&gt;
    &lt;echo message="--- Executing ${Name} ---"/&gt;
    &lt;!-- Uncomment the sysproperty and change the value if you want --&gt;
    &lt;java classname="org.argouml.application.Main"
          fork="yes"
          classpath="${build.dest};${classpath}"&gt;
          <emphasis>&lt; sysproperty key="log4j.configuration"
                       value="org/argouml/resource/<emphasis>filename.lcf</emphasis>"&gt;&lt;/sysproperty&gt;</emphasis>
    &lt;/java&gt;
&lt;/target&gt;
                </programlisting>
            </example>

        </sect3>
        
        <sect3>
            <title>...when running ArgoUML from WebStart</title>
            <para>
                To view the console output, the WebStart user has to
                set <parameter>Enable Java Console</parameter> in the
                Java WebStart preferences.  In the same dialog, there
                is also an option to save the Console Output to a
                file.
            </para>
            <para>
                As you cannot provide any userspecific parameters to a
                WebStart Application from within WebStart, the
                webmaster of the application providing site has to
                enable logging for
                <application>ArgoUML</application>. The log4j
                configuration file needs to be specified in the *.jnlp
                file used to start <application>ArgoUML</application>
                <footnote><para> Add the following XML to the *.jnlp
                file (which resides on the webserver):
                <parameter>&lt;property name="log4j.configuration"
                value="URL"/&gt;</parameter>.  (For more information,
                see the <ulink
                url="http://java.sun.com/products/javawebstart/">WebStart
                FAQ</ulink> on SUN's Java Website.)</para>
                </footnote>.
            </para>
            <para>
                Therefore, you can find two different WebStart links
                on the
                <ulink url="http://argouml.tigris.org"><application>ArgoUML</application></ulink>
                website. OR, alternatively, there is only one link and
                a log4j configuration file for full logging on the
                console is specified as default.
            </para>
            <note>
              <para>This is not implemented yet.</para>
            </note>
        </sect3>
        
        <sect3>
            <title>...when running ArgoUML from NetBeans</title>
            <para>
                TBD
            </para>
        </sect3>
    </sect2>
    
    <sect2>
        <title>How to Customize Logging...</title>
        <para>
            There are some sample configuration files provided in 
            <parameter>org.argouml.resource</parameter>. Modify these according
            to your needs.
        </para>    
    </sect2>
    
    <sect2>
        <title>References</title>
        <itemizedlist>
            <listitem>
                The log4j project homepage at 
                    <ulink url="http://jakarta.apache.org/log4j/">http://jakarta.apache.org/log4j</ulink>
            </listitem>
            <!-- TO DO
                ... add links to other log4j tutorials etc.
            -->
        </itemizedlist>
</sect2>
</sect1> <!-- End of logging -->
