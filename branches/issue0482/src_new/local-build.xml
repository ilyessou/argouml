<?xml version="1.0"?>

<project name="argouml" default="replace" basedir=".">

  <target name="replace">
      <replace dir="org/argouml" summary="yes" includes="**/*.java">

<replacefilter token="import org.argouml.model.uml.*;"
value="import org.argouml.model.uml.UmlFactory;"/>

<replacefilter token="new MExpression("
value="UmlFactory.getFactory().getDataTypes().createExpression("/>
<replacefilter token="new MExpression ("
value="UmlFactory.getFactory().getDataTypes().createExpression ("/>

<replacefilter token="new MActionExpression("
value="UmlFactory.getFactory().getDataTypes().createActionExpression("/>
<replacefilter token="new MActionExpression ("
value="UmlFactory.getFactory().getDataTypes().createActionExpression ("/>

<replacefilter token="new MBooleanExpression("
value="UmlFactory.getFactory().getDataTypes().createBooleanExpression("/>
<replacefilter token="new MBooleanExpression ("
value="UmlFactory.getFactory().getDataTypes().createBooleanExpression ("/>

<replacefilter token="new MProcedureExpression("
value="UmlFactory.getFactory().getDataTypes().createProcedureExpression("/>
<replacefilter token="new MProcedureExpression ("
value="UmlFactory.getFactory().getDataTypes().createProcedureExpression ("/>

<replacefilter token="new MMultiplicity("
value="UmlFactory.getFactory().getDataTypes().createMultiplicity("/>
<replacefilter token="new MMultiplicity ("
value="UmlFactory.getFactory().getDataTypes().createMultiplicity ("/>

<replacefilter token="MFactory.getDefaultFactory().createExtensionPoint("
value="UmlFactory.getFactory().getUseCases().createExtensionPoint("/>

<replacefilter token="MFactory.getDefaultFactory().createInclude("
value="UmlFactory.getFactory().getUseCases().createInclude("/>

<replacefilter token="MFactory.getDefaultFactory().createExtend("
value="UmlFactory.getFactory().getUseCases().createExtend("/>

<replacefilter token="MFactory.getDefaultFactory().createActor("
value="UmlFactory.getFactory().getUseCases().createActor("/>

<replacefilter token="MFactory.getDefaultFactory().createUseCase("
value="UmlFactory.getFactory().getUseCases().createUseCase("/>

<replacefilter token="MFactory.getDefaultFactory().createModel("
value="UmlFactory.getFactory().getModelManagement().createModel("/>

<replacefilter token="MFactory.getDefaultFactory().createElementImport("
value="UmlFactory.getFactory().getModelManagement().createElementImport("/>

<replacefilter token="MFactory.getDefaultFactory().createPackage("
value="UmlFactory.getFactory().getModelManagement().createPackage("/>

<replacefilter token="MFactory.getDefaultFactory().createSubsystem("
value="UmlFactory.getFactory().getModelManagement().createSubsystem("/>

<replacefilter token="MFactory.getDefaultFactory().createClass("
value="UmlFactory.getFactory().getCore().createClass("/>

<replacefilter token="MFactory.getDefaultFactory().createDataType("
value="UmlFactory.getFactory().getCore().createDataType("/>

<replacefilter token="MFactory.getDefaultFactory().createAssociationEnd("
value="UmlFactory.getFactory().getCore().createAssociationEnd("/>

<replacefilter token="MFactory.getDefaultFactory().createAssociation("
value="UmlFactory.getFactory().getCore().createAssociation("/>

<replacefilter token="MFactory.getDefaultFactory().createOperation("
value="UmlFactory.getFactory().getCore().createOperation("/>

<replacefilter token="MFactory.getDefaultFactory().createParameter("
value="UmlFactory.getFactory().getCore().createParameter("/>

<replacefilter token="MFactory.getDefaultFactory().createConstraint("
value="UmlFactory.getFactory().getCore().createConstraint("/>

<replacefilter token="MFactory.getDefaultFactory().createAttribute("
value="UmlFactory.getFactory().getCore().createAttribute("/>

<replacefilter token="MFactory.getDefaultFactory().createGeneralization("
value="UmlFactory.getFactory().getCore().createGeneralization("/>

<replacefilter token="MFactory.getDefaultFactory().createElementResidence("
value="UmlFactory.getFactory().getCore().createElementResidence("/>

<replacefilter token="MFactory.getDefaultFactory().createMethod("
value="UmlFactory.getFactory().getCore().createMethod("/>

<replacefilter token="MFactory.getDefaultFactory().createNode("
value="UmlFactory.getFactory().getCore().createNode("/>

<replacefilter token="MFactory.getDefaultFactory().createAbstraction("
value="UmlFactory.getFactory().getCore().createAbstraction("/>

<replacefilter token="MFactory.getDefaultFactory().createUsage("
value="UmlFactory.getFactory().getCore().createUsage("/>

<replacefilter token="MFactory.getDefaultFactory().createTaggedValue("
value="UmlFactory.getFactory().getExtensionMechanisms().createTaggedValue("/>

<replacefilter token="MFactory.getDefaultFactory().createComment("
value="UmlFactory.getFactory().getCore().createComment("/>

<replacefilter token="MFactory.getDefaultFactory().createComponent("
value="UmlFactory.getFactory().getCore().createComponent("/>

<replacefilter token="MFactory.getDefaultFactory().createStereotype("
value="UmlFactory.getFactory().getExtensionMechanisms().createStereotype("/>

<replacefilter token="MFactory.getDefaultFactory().createLink("
value="UmlFactory.getFactory().getCommonBehavior().createLink("/>

<replacefilter token="MFactory.getDefaultFactory().createLinkEnd("
value="UmlFactory.getFactory().getCommonBehavior().createLinkEnd("/>

<replacefilter token="MFactory.getDefaultFactory().createObject("
value="UmlFactory.getFactory().getCommonBehavior().createObject("/>

<replacefilter token="MFactory.getDefaultFactory().createCallAction("
value="UmlFactory.getFactory().getCommonBehavior().createCallAction("/>

<replacefilter token="MFactory.getDefaultFactory().createStimulus("
value="UmlFactory.getFactory().getCommonBehavior().createStimulus("/>

<replacefilter token="MFactory.getDefaultFactory().createTransition("
value="UmlFactory.getFactory().getStateMachines().createTransition("/>

<replacefilter token="MFactory.getDefaultFactory().createCompositeState("
value="UmlFactory.getFactory().getStateMachines().createCompositeState("/>

<replacefilter token="MFactory.getDefaultFactory().createStateMachine("
value="UmlFactory.getFactory().getStateMachines().createStateMachine("/>

<replacefilter token="MFactory.getDefaultFactory().createState("
value="UmlFactory.getFactory().getStateMachines().createState("/>

<replacefilter token="MFactory.getDefaultFactory().createCallEvent("
value="UmlFactory.getFactory().getStateMachines().createCallEvent("/>

<replacefilter token="MFactory.getDefaultFactory().createGuard("
value="UmlFactory.getFactory().getStateMachines().createGuard("/>

<replacefilter token="MFactory.getDefaultFactory().createNodeInstance("
value="UmlFactory.getFactory().getCommonBehavior().createNodeInstance("/>

<replacefilter token="MFactory.getDefaultFactory().createException("
value="UmlFactory.getFactory().getCommonBehavior().createException("/>

<replacefilter token="MFactory.getDefaultFactory().createSignal("
value="UmlFactory.getFactory().getCommonBehavior().createSignal("/>

<replacefilter token="MFactory.getDefaultFactory().createComponentInstance("
value="UmlFactory.getFactory().getCommonBehavior().createComponentInstance("/>

<replacefilter token="MFactory.getDefaultFactory().createActionState("
value="UmlFactory.getFactory().getActivityGraphs().createActionState("/>

<replacefilter token="MFactory.getDefaultFactory().createActivityGraph("
value="UmlFactory.getFactory().getActivityGraphs().createActivityGraph("/>

<replacefilter token="MFactory.getDefaultFactory().createDependency("
value="UmlFactory.getFactory().getCore().createDependency("/>

<replacefilter token="MFactory.getDefaultFactory().createBinding("
value="UmlFactory.getFactory().getCore().createBinding("/>

<replacefilter token="MFactory.getDefaultFactory().createInteraction("
value="UmlFactory.getFactory().getCollaborations().createInteraction("/>

<replacefilter token="MFactory.getDefaultFactory().createCollaboration("
value="UmlFactory.getFactory().getCollaborations().createCollaboration("/>

<replacefilter token="MFactory.getDefaultFactory().createMessage("
value="UmlFactory.getFactory().getCollaborations().createMessage("/>

<replacefilter token="MFactory.getDefaultFactory().createAssociationRole("
value="UmlFactory.getFactory().getCollaborations().createAssociationRole("/>

<replacefilter token="MFactory.getDefaultFactory().createAssociationEndRole("
value="UmlFactory.getFactory().getCollaborations().createAssociationEndRole("/>

      </replace>
  </target>

  <target name="run">
    <ant antfile="build.xml" target="package"/>
    <property name="lib.dir" value="../lib"/>
    <java classname="org.argouml.application.Main" fork="yes">
       <classpath>
	  <pathelement location="../build/argouml.jar"/>
       </classpath>
       <sysproperty key="log4j.configuration"
                    value="org/argouml/resource/model.lcf"/>
    </java>
  </target>


</project>

