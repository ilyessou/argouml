checklist.class.naming = Naming
checklist.class.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement la classe ?
checklist.class.naming.is-noun = 												    \u00ab <ocl>self</ocl> \u00bb est-il un nom ou une phrase nominale ?
checklist.class.naming.misinterpret = 												    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.class.encoding = Encoding
checklist.class.encoding.convert-to-attribute = 										    <ocl>self</ocl> doit-elle \u00eatre sa propre classe ou un simple attribut d'une autre classe ?
checklist.class.encoding.do-just-one-thing = 											    La classe <ocl>self</ocl> fait-elle exactement une chose et la fait-elle bien ?
checklist.class.encoding.break-into-parts = 											    <ocl>self</ocl> pourrait-elle \u00eatre scind\u00e9e en deux classes ou plus ?
checklist.class.value = Value
checklist.class.value.start-with-meaningful-values = 										    Tous les attributs de <ocl>self</ocl> ont-ils des valeurs initiales significatives ?
checklist.class.value.convert-to-invariant = 											    Pourriez-vous \u00e9crire un invariant pour cette classe ?
checklist.class.value.establish-invariant-in-constructors = 									    Tous les constructeurs \u00e9tablissent-ils l'invariant de classe ?
checklist.class.value.maintain-invariant = 											    Toutes les op\u00e9rations maintiennent-elles l'invariant de classe ?
checklist.class.location = Location
checklist.class.location.move-somewhere = 											    La classe <ocl>self</ocl> pourrait-elle \u00eatre positionn\u00e9e diff\u00e9remment dans la hi\u00e9rarchie de classes ?
checklist.class.location.planned-subclasses = 											    Avez-vous pr\u00e9vu d'avoir des sous-classes de <ocl>self</ocl> ?
checklist.class.location.eliminate-from-model = 										    La classe <ocl>self</ocl> pourrait-elle \u00eatre \u00e9limin\u00e9e du mod\u00e8le ?
checklist.class.location.eliminates-or-affects-something-else = 								    Existe-t-il une autre classe du mod\u00e8le qui pourrait \u00eatre revue ou \u00e9limin\u00e9e car elle a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.class.updates = Updates
checklist.class.updates.reasons-for-update = 											    \u00c0 quelles occasions les instances de <ocl>self</ocl> doivent-elles \u00eatre mises \u00e0 jour ?
checklist.class.updates.affects-something-else = 										    Y a-t-il d'autres objets qui doivent \u00eatre mis \u00e0 jour lorsque <ocl>self</ocl> est mise \u00e0 jour ?
checklist.attribute.naming = Naming
checklist.attribute.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement l'attribut ?
checklist.attribute.naming.is-noun = 												    \u00ab <ocl>self</ocl> \u00bb est-il un nom ou une phrase nominale ?
checklist.attribute.naming.misinterpret = 											    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.attribute.encoding = Encoding
checklist.attribute.encoding.is-too-restrictive = 										    Le type <ocl>self.type</ocl> est-il trop restrictif pour repr\u00e9senter toutes les valeurs possibles de <ocl>self</ocl>?
checklist.attribute.encoding.allow-impossible-values = 										    Le type <ocl>self.type</ocl> permet-il \u00e0 <ocl>self</ocl> de prendre des valeurs qui ne pourront jamais \u00eatre correctes ?
checklist.attribute.encoding.combine-with-other = 										    L'attribut <ocl>self</ocl> pourrait-il \u00eatre combin\u00e9 avec un autre attribut de <ocl>self.owner</ocl> (par exemple {owner.structuralFeature}) ?
checklist.attribute.encoding.break-into-parts = 										    L'attribut <ocl>self</ocl> pourrait-il \u00eatre scind\u00e9 en deux parties ou plus (par exemple un num\u00e9ro de t\u00e9l\u00e9phone peut \u00eatre s\u00e9par\u00e9 en code r\u00e9gional, pr\u00e9fixe et num\u00e9ro) ?
checklist.attribute.encoding.is-computable = 											    L'attribut <ocl>self</ocl> pourrait-il \u00eatre calcul\u00e9 \u00e0 partir d'autres attributs au lieu d'\u00eatre stock\u00e9 ?
checklist.attribute.value = Value
checklist.attribute.value.default-value = 											    L'attribut <ocl>self</ocl> a-t-il une valeur initiale ou par d\u00e9faut ?
checklist.attribute.value.correct-default-value = 										    La valeur initiale <ocl>self.initialValue</ocl> est-elle correcte ?
checklist.attribute.value.is-correctness-checkable = 										    Pourriez-vous \u00e9crire une expression v\u00e9rifiant si <ocl>self</ocl> est correcte ou plausible ?
checklist.attribute.location = Location
checklist.attribute.location.move-somewhere = 											    L'attribut <ocl>self</ocl> pourrait-il \u00eatre d\u00e9fini dans une autre classe associ\u00e9e \u00e0 <ocl>self.owner</ocl> ?
checklist.attribute.location.move-up-hierarchy = 										    L'attribut <ocl>self</ocl> pourrait-il \u00eatre remont\u00e9 dans la hi\u00e9rarchie et s'appliquer \u00e0 <ocl>owner.name</ocl> et \u00e0 d'autres classes ?
checklist.attribute.location.include-all = 											    L'attribut <ocl>self</ocl> s'applique-t-il \u00e0 toutes les instances de la classe <ocl>self.owner</ocl> y compris les instances de sous-classes ?
checklist.attribute.location.could-be-eliminated = 										    L'attribut <ocl>self</ocl> pourrait-il \u00eatre supprim\u00e9 du mod\u00e8le ?
checklist.attribute.location.eliminates-or-affects-something-else = 								    Existe-t-il un autre attribut du mod\u00e8le qui pourrait \u00eatre revu ou \u00e9limin\u00e9 car il a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.attribute.updates = Updates
checklist.attribute.updates.reasons-for-update = 										    \u00c0 quelles occasions l'attribut <ocl>self</ocl> doit-il \u00eatre mis \u00e0 jour ?
checklist.attribute.updates.affects-something-else = 										    Y a-t-il d'autres attributs qui doivent \u00eatre mis \u00e0 jour lorsque <ocl>self</ocl> est mis \u00e0 jour ?
checklist.attribute.updates.exists-method-for-update = 										    Y a-t-il une m\u00e9thode qui doivent \u00eatre appel\u00e9e lorsque <ocl>self</ocl> est mis \u00e0 jour ?
checklist.attribute.updates.exists-method-for-specific-value = 									    Y a-t-il une m\u00e9thode qui doivent \u00eatre appel\u00e9e lorsque <ocl>self</ocl> prend certaines valeurs ?
checklist.operation.naming = Naming
checklist.operation.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement l'op\u00e9ration ?
checklist.operation.naming.is-verb = 												    \u00ab <ocl>self</ocl> \u00bb est-il un verbe ou une phrase verbale ?
checklist.operation.naming.misinterpret = 											    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.operation.naming.do-just-one-thing = 											    L'op\u00e9ration <ocl>self</ocl> fait-elle exactement une chose et la fait-elle bien ?
checklist.operation.encoding = Encoding
checklist.operation.encoding.is-returntype-too-restrictive = 									    Le type de retour <ocl>self.returnType</ocl> est-il trop restrictif pour repre\u00e9senter toutes les valeurs retourn\u00e9es par <ocl>self</ocl> ?
checklist.operation.encoding.does-returntype-allow-impossible-values = 								    Le type de retour <ocl>self.returnType</ocl> permet-il de repr\u00e9senter des valeurs qui ne pourront jamais \u00eatre correctes ?
checklist.operation.encoding.combine-with-other = 										    L'op\u00e9ration <ocl>self</ocl> peut-elle \u00eatre combin\u00e9e avec d'autres op\u00e9rations de <ocl>self.owner</ocl> (par exemple <ocl sep=', '>self.owner.behavioralFeature</ocl>) ?
checklist.operation.encoding.break-into-parts = 										    L'op\u00e9ration<ocl>self</ocl> pourrait-elle \u00eatre scind\u00e9e en deux op\u00e9rations ou plus (par exemple un pr\u00e9-traitement, le traitement et un post-traitement) ?
checklist.operation.encoding.break-into-series = 										    L'op\u00e9ration <ocl>self</ocl> pourrait-elle \u00eatre remplac\u00e9e par une s\u00e9rie d'appels par le client \u00e0 des op\u00e9rations plus simples ?
checklist.operation.encoding.reduce-number-of-calls = 										    L'op\u00e9ration <ocl>self</ocl> pourrait-elle \u00eatre combin\u00e9e avec d'autres op\u00e9rations pour r\u00e9duire le nombre d'appels que le client doit faire ?
checklist.operation.value = Value
checklist.operation.value.handle-all-inputs = 											    L'op\u00e9ration <ocl>self</ocl> peut-elle traiter toutes les entr\u00e9es possibles ?
checklist.operation.value.are-special-cases = 											    Y a-t-il des cas d'entr\u00e9es qui doivent \u00eatre trait\u00e9s s\u00e9par\u00e9ments ?
checklist.operation.value.is-correctness-checkable = 										    Pourriez-vous \u00e9crire une expression v\u00e9rifiant si les arguments de <ocl>self</ocl> sont corrects ou plausibles ?
checklist.operation.value.express-preconditions-possible = 									    Pourriez-vous exprimer les pr\u00e9-conditions de <ocl>self</ocl>?
checklist.operation.value.express-postconditions-possible = 									    Pourriez-vous exprimer les post-conditions de <ocl>self</ocl>?
checklist.operation.value.how-behave-preconditions-violated = 									    Comment l'op\u00e9ration <ocl>self</ocl> r\u00e9agit-elle lorsque les pr\u00e9-conditions sont viol\u00e9es ?
checklist.operation.value.how-behave-postconditions-not-achieved = 								    Comment l'op\u00e9ration <ocl>self</ocl> r\u00e9agit-elle lorsque les post-conditions sont viol\u00e9es ?
checklist.operation.location = Location
checklist.operation.location.move-somewhere = 											    L'op\u00e9ration <ocl>self</ocl> pourrait-elle \u00eatre d\u00e9finie dans une autre classe associ\u00e9e \u00e0 <ocl>self.owner</ocl> ?
checklist.operation.location.move-up-hierarchy = 										    L'op\u00e9ration <ocl>self</ocl> pourrait-elle \u00eatre remont\u00e9e dans la hi\u00e9rarchie et s'appliquer \u00e0 <ocl>self.owner</ocl> et \u00e0 d'autres classes ?
checklist.operation.location.include-all = 											    L'op\u00e9ration <ocl>self</ocl> s'applique-t-elle \u00e0 toutes les instances de la classe <ocl>self.owner</ocl> y compris les instances de sous-classes ?
checklist.operation.location.could-be-eliminated = 										    L'op\u00e9ration <ocl>self</ocl> pourrait-elle \u00eatre supprim\u00e9e du mod\u00e8le ?
checklist.operation.location.eliminates-or-affects-something-else = 								    Existe-t-il une autre op\u00e9ration du mod\u00e8le qui pourrait \u00eatre revue ou \u00e9limin\u00e9e car elle a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.association.naming = Naming
checklist.association.naming.describe-clearly = 										    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement la classe ?
checklist.association.naming.is-noun = 												    \u00ab <ocl>self</ocl> \u00bb est-il un nom ou une phrase nominale ?
checklist.association.naming.misinterpret = 											    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.association.encoding = Encoding
checklist.association.encoding.convert-to-attribute = 										    <ocl>self</ocl> doit-elle \u00eatre sa propre classe ou un simple attribut d'une autre classe ?
checklist.association.encoding.do-just-one-thing = 										    La classe <ocl>self</ocl> fait-elle exactement une chose et la fait-elle bien ?
checklist.association.encoding.break-into-parts = 										    <ocl>self</ocl> pourrait-elle \u00eatre scind\u00e9e en deux classes ou plus ?
checklist.association.value = Value
checklist.association.value.start-with-meaningful-values = 									    Tous les attributs de <ocl>self</ocl> ont-ils des valeurs initiales significatives ?
checklist.association.value.convert-to-invariant = 										    Pourriez-vous \u00e9crire un invariant pour cette classe ?
checklist.association.value.establish-invariant-in-constructors = 								    Tous les constructeurs \u00e9tablissent-ils l'invariant de classe ?
checklist.association.value.maintain-invariant = 										    Toutes les op\u00e9rations maintiennent-elles l'invariant de classe ?
checklist.association.location = Location
checklist.association.location.move-somewhere = 										    La classe <ocl>self</ocl> pourrait-elle \u00eatre positionn\u00e9e diff\u00e9remment dans la hi\u00e9rarchie de classes ?
checklist.association.location.planned-subclasses = 										    Avez-vous pr\u00e9vu d'avoir des sous-classes de <ocl>self</ocl> ?
checklist.association.location.eliminate-from-model = 										    La classe <ocl>self</ocl> pourrait-elle \u00eatre \u00e9limin\u00e9e du mod\u00e8le ?
checklist.association.location.eliminates-or-affects-something-else = 								    Existe-t-il une autre classe du mod\u00e8le qui pourrait \u00eatre revue ou \u00e9limin\u00e9e car elle a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.association.updates = Updates
checklist.association.updates.reasons-for-update = 										    \u00c0 quelles occasions les instances de <ocl>self</ocl> doivent-elles \u00eatre mises \u00e0 jour ?
checklist.association.updates.affects-something-else = 										    Y a-t-il d'autres objets qui doivent \u00eatre mis \u00e0 jour lorsque <ocl>self</ocl> est mise \u00e0 jour ?
checklist.interface.naming = Naming
checklist.interface.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement la classe ?
checklist.interface.naming.is-noun = 												    \u00ab <ocl>self</ocl> \u00bb est-il un nom ou une phrase nominale ?
checklist.interface.naming.misinterpret = 											    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.interface.encoding = Encoding
checklist.interface.encoding.convert-to-attribute = 										    <ocl>self</ocl> doit-elle \u00eatre sa propre classe ou un simple attribut d'une autre classe ?
checklist.interface.encoding.do-just-one-thing = 										    La classe <ocl>self</ocl> fait-elle exactement une chose et la fait-elle bien ?
checklist.interface.encoding.break-into-parts = 										    <ocl>self</ocl> pourrait-elle \u00eatre scind\u00e9e en deux classes ou plus ?
checklist.interface.value = Value
checklist.interface.value.start-with-meaningful-values = 									    Tous les attributs de <ocl>self</ocl> ont-ils des valeurs initiales significatives ?
checklist.interface.value.convert-to-invariant = 										    Pourriez-vous \u00e9crire un invariant pour cette classe ?
checklist.interface.value.establish-invariant-in-constructors = 								    Tous les constructeurs \u00e9tablissent-ils l'invariant de classe ?
checklist.interface.value.maintain-invariant = 											    Toutes les op\u00e9rations maintiennent-elles l'invariant de classe ?
checklist.interface.location = Location
checklist.interface.location.move-somewhere = 											    La classe <ocl>self</ocl> pourrait-elle \u00eatre positionn\u00e9e diff\u00e9remment dans la hi\u00e9rarchie de classes ?
checklist.interface.location.planned-subclasses = 										    Avez-vous pr\u00e9vu d'avoir des sous-classes de <ocl>self</ocl> ?
checklist.interface.location.eliminate-from-model = 										    La classe <ocl>self</ocl> pourrait-elle \u00eatre \u00e9limin\u00e9e du mod\u00e8le ?
checklist.interface.location.eliminates-or-affects-something-else = 								    Existe-t-il une autre classe du mod\u00e8le qui pourrait \u00eatre revue ou \u00e9limin\u00e9e car elle a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.interface.updates = Updates
checklist.interface.updates.reasons-for-update = 										    \u00c0 quelles occasions les instances de <ocl>self</ocl> doivent-elles \u00eatre mises \u00e0 jour ?
checklist.interface.updates.affects-something-else = 										    Y a-t-il d'autres objets qui doivent \u00eatre mis \u00e0 jour lorsque <ocl>self</ocl> est mise \u00e0 jour ?
checklist.instance.general = General
checklist.instance.general.describe-clearly = 											    L'instance <ocl>self</ocl> d\u00e9crit-elle clairement ce qu'elle est ?
checklist.instance.naming = Naming
checklist.instance.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement l'instance ?
checklist.instance.naming.denotes-state = 											    Le terme \u00ab <ocl>self</ocl> \u00bb d\u00e9note-t-il bien un \u00e9tat plut\u00f4t qu'une activit\u00e9 ?
checklist.instance.naming.misinterpret = 											    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.instance.structure = Structure
checklist.instance.structure.merged-with-other = 										    L'\u00e9tat <ocl>self</ocl> est-il bien ind\u00e9pendant ou doit-il \u00eatre combin\u00e9 avec un autre \u00e9tat ?
checklist.instance.structure.do-just-one-thing = 										    L'\u00e9tat <ocl>self</ocl> fait-il une chose et la fait-il bien ?
checklist.instance.structure.break-into-parts = 										    L'\u00e9tat <ocl>self</ocl> pourrait-il \u00eatre scind\u00e9 en deux \u00e9tats ou plus ?
checklist.instance.structure.can-write-characteristic-equation = 								    Pourriez-vous \u00e9crire une \u00e9quation caract\u00e9ristique pour <ocl>self</ocl>?
checklist.instance.structure.belong = 												    L'\u00e9tat <ocl>self</ocl> appartient-il bien \u00e0 cet automate ou \u00e0 un autre ?
checklist.instance.structure.make-internal = 											    L'\u00e9tat <ocl>self</ocl> devrait-il \u00eatre un \u00e9tat initial ?
checklist.instance.structure.is-state-in-another-machine-exclusive = 								    Y a-t-il un autre \u00e9tat d'un autre automate qui soit exclusif de <ocl>self</ocl>?
checklist.instance.actions = Actions
checklist.instance.actions.list-entry-actions = 										    Quelles actions doivent-elles \u00eatre r\u00e9alis\u00e9es \u00e0 l'entr\u00e9e de <ocl>self</ocl> ?
checklist.instance.actions.update-attribute-on-entry = 										    Quels attributs doivent \u00eatre mis \u00e0 jour \u00e0 l'entr\u00e9e de <ocl>self</ocl> ?
checklist.instance.actions.list-exit-action = 											    Quelles actions doivent-elles \u00eatre r\u00e9alis\u00e9es \u00e0 la sortie de <ocl>self</ocl> ?
checklist.instance.actions.update-attribute-on-exit = 										    Quels attributs doivent \u00eatre mis \u00e0 jour \u00e0 la sortie de <ocl>self</ocl> ?
checklist.instance.actions.list-do-action = 											    Quelles actions doivent-elles \u00eatre r\u00e9alis\u00e9es \u00e0 l'int\u00e9rieur de <ocl>self</ocl> ?
checklist.instance.actions.maintained-state = 											    Les actions-\u00e9tats maintiennent-elles <ocl>self</ocl> comme \u00e9tat courant ?
checklist.instance.transitions = Transitions
checklist.instance.transitions.need-another-transition-into = 									    D'autres transitions vers <ocl>self</ocl> devraient-elles \u00eatre ajout\u00e9es ?
checklist.instance.transitions.use-all-transitions-into = 									    Toutes les transitions vers <ocl>self</ocl> sont-elles utilisables ?
checklist.instance.transitions.combine-with-other-incoming = 									    Certaines transitions entrantes doivent-elles \u00eatre combin\u00e9es ?
checklist.instance.transitions.need-another-transition-out-of = 								    D'autres transitions hors de <ocl>self</ocl> devraient-elles \u00eatre ajout\u00e9es ?
checklist.instance.transitions.use-all-transitions-out-of = 									    Toutes les transitions hors de <ocl>self</ocl> sont-elles utilisables ?
checklist.instance.transitions.are-transitions-out-of-exclusive = 								    Toutes les transitions sortantes sont-elles exclusives ?
checklist.instance.transitions.combine-with-other-outgoing = 									    Certaines transitions sortantes doivent-elles \u00eatre combin\u00e9es ?
checklist.link.naming = Naming
checklist.link.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement la classe ?
checklist.link.naming.is-noun = 												    \u00ab <ocl>self</ocl> \u00bb est-il un nom ou une phrase nominale ?
checklist.link.naming.misinterpret = 												    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.link.encoding = Encoding
checklist.link.encoding.convert-to-attribute = 											    <ocl>self</ocl> doit-elle \u00eatre sa propre classe ou un simple attribut d'une autre classe ?
checklist.link.encoding.do-just-one-thing = 											    La classe <ocl>self</ocl> fait-elle exactement une chose et la fait-elle bien ?
checklist.link.encoding.break-into-parts = 											    <ocl>self</ocl> pourrait-elle \u00eatre scind\u00e9e en deux classes ou plus ?
checklist.link.value = Value
checklist.link.value.start-with-meaningful-values = 										    Tous les attributs de <ocl>self</ocl> ont-ils des valeurs initiales significatives ?
checklist.link.value.convert-to-invariant = 											    Pourriez-vous \u00e9crire un invariant pour cette classe ?
checklist.link.value.establish-invariant-in-constructors = 									    Tous les constructeurs \u00e9tablissent-ils l'invariant de classe ?
checklist.link.value.maintain-invariant = 											    Toutes les op\u00e9rations maintiennent-elles l'invariant de classe ?
checklist.link.location = Location
checklist.link.location.move-somewhere = 											    La classe <ocl>self</ocl> pourrait-elle \u00eatre positionn\u00e9e diff\u00e9remment dans la hi\u00e9rarchie de classes ?
checklist.link.location.planned-subclasses = 											    Avez-vous pr\u00e9vu d'avoir des sous-classes de <ocl>self</ocl> ?
checklist.link.location.eliminate-from-model = 											    La classe <ocl>self</ocl> pourrait-elle \u00eatre \u00e9limin\u00e9e du mod\u00e8le ?
checklist.link.location.eliminates-or-affects-something-else = 									    Existe-t-il une autre classe du mod\u00e8le qui pourrait \u00eatre revue ou \u00e9limin\u00e9e car elle a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.link.updates = Updates
checklist.link.updates.reasons-for-update = 											    \u00c0 quelles occasions les instances de <ocl>self</ocl> doivent-elles \u00eatre mises \u00e0 jour ?
checklist.link.updates.affects-something-else = 										    Y a-t-il d'autres objets qui doivent \u00eatre mis \u00e0 jour lorsque <ocl>self</ocl> est mise \u00e0 jour ?
checklist.state.naming = Naming
checklist.state.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement l'\u00e9tat ?
checklist.state.naming.denotes-state = 												    Le terme \u00ab <ocl>self</ocl> \u00bb d\u00e9note-t-il bien un \u00e9tat plut\u00f4t qu'une activit\u00e9 ?
checklist.state.naming.misinterpret = 												    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.state.structure = Structure
checklist.state.structure.merged-with-other = 											    L'\u00e9tat <ocl>self</ocl> est-il bien ind\u00e9pendant ou doit-il \u00eatre combin\u00e9 avec un autre \u00e9tat ?
checklist.state.structure.do-just-one-thing = 											    L'\u00e9tat <ocl>self</ocl> fait-il une chose et la fait-il bien ?
checklist.state.structure.break-into-parts = 											    L'\u00e9tat <ocl>self</ocl> pourrait-il \u00eatre scind\u00e9 en deux \u00e9tats ou plus ?
checklist.state.structure.can-write-characteristic-equation = 									    Pourriez-vous \u00e9crire une \u00e9quation caract\u00e9ristique pour <ocl>self</ocl>?
checklist.state.structure.belong = 												    L'\u00e9tat <ocl>self</ocl> appartient-il bien \u00e0 cet automate ou \u00e0 un autre ?
checklist.state.structure.make-internal = 											    L'\u00e9tat <ocl>self</ocl> devrait-il \u00eatre un \u00e9tat initial ?
checklist.state.structure.is-state-in-another-machine-exclusive = 								    Y a-t-il un autre \u00e9tat d'un autre automate qui soit exclusif de <ocl>self</ocl>?
checklist.state.actions = Actions
checklist.state.actions.list-entry-actions = 											    Quelles actions doivent-elles \u00eatre r\u00e9alis\u00e9es \u00e0 l'entr\u00e9e de <ocl>self</ocl> ?
checklist.state.actions.update-attribute-on-entry = 										    Quels attributs doivent \u00eatre mis \u00e0 jour \u00e0 l'entr\u00e9e de <ocl>self</ocl> ?
checklist.state.actions.list-exit-action = 											    Quelles actions doivent-elles \u00eatre r\u00e9alis\u00e9es \u00e0 la sortie de <ocl>self</ocl> ?
checklist.state.actions.update-attribute-on-exit = 										    Quels attributs doivent \u00eatre mis \u00e0 jour \u00e0 la sortie de <ocl>self</ocl> ?
checklist.state.actions.list-do-action = 											    Quelles actions doivent-elles \u00eatre r\u00e9alis\u00e9es \u00e0 l'int\u00e9rieur de <ocl>self</ocl> ?
checklist.state.actions.maintained-state = 											    Les actions-\u00e9tats maintiennent-elles <ocl>self</ocl> comme \u00e9tat courant ?
checklist.state.transitions = Transitions
checklist.state.transitions.need-another-transition-into = 									    D'autres transitions vers <ocl>self</ocl> devraient-elles \u00eatre ajout\u00e9es ?
checklist.state.transitions.use-all-transitions-into = 										    Toutes les transitions vers <ocl>self</ocl> sont-elles utilisables ?
checklist.state.transitions.combine-with-other-incoming = 									    Certaines transitions entrantes doivent-elles \u00eatre combin\u00e9es ?
checklist.state.transitions.need-another-transition-out-of = 									    D'autres transitions hors de <ocl>self</ocl> devraient-elles \u00eatre ajout\u00e9es ?
checklist.state.transitions.use-all-transitions-out-of = 									    Toutes les transitions hors de <ocl>self</ocl> sont-elles utilisables ?
checklist.state.transitions.are-transitions-out-of-exclusive = 									    Toutes les transitions sortantes sont-elles exclusives ?
checklist.state.transitions.combine-with-other-outgoing = 									    Certaines transitions sortantes doivent-elles \u00eatre combin\u00e9es ?
checklist.transition.structure = Structure
checklist.transition.structure.start-somewhere-else = 										    Cette transition devrait-elle partir d'une autre source ?
checklist.transition.structure.end-somewhere-else = 										    Cette transition devrait-elle arriver \u00e0 une autre destination ?
checklist.transition.structure.need-another-like-this = 									    Devrait-il y avoir une autre transitions \u00ab similaire \u00bb \u00e0 celle-ci ?
checklist.transition.structure.unneeded-because-of-this = 									    Une autre transition devient-elle inutile \u00e0 caus e de celle-ci ?
checklist.transition.trigger = Trigger
checklist.transition.trigger.needed = 												    Cette transition a-t-elle besoin d'un d\u00e9clencheur ?
checklist.transition.trigger.happen-too-often = 										    Le d\u00e9clencheur s'active-t-il trop fr\u00e9quemment ?
checklist.transition.trigger.happen-too-rarely = 										    Le d\u00e9clencheur s'active-t-il trop rarement ?
checklist.transition.guard = Guard
checklist.transition.guard.taken-too-often = 											    Cette transition peut-elle \u00eatre franchie trop fr\u00e9quemment ?
checklist.transition.guard.is-too-restrictive = 										    Les conditions sur cette transition sont-elles trop restrictives ?
checklist.transition.guard.break-into-parts = 											    Cette transition peut-elle \u00eatre scind\u00e9e en deux transitions ou plus ?
checklist.transition.actions = Actions
checklist.transition.actions.should-have = 											    Cette transition devrait-elle \u00eatre associ\u00e9e \u00e0 une action ?
checklist.transition.actions.should-have-exit = 										    L'action de cette transition doit-elle \u00eatre une action de sortie ?
checklist.transition.actions.should-have-entry = 										    L'action de cette transition doit-elle \u00eatre une action d'entr\u00e9e ?
checklist.transition.actions.is-precondition-met = 										    La pr\u00e9condition de cette action est-elle toujours v\u00e9rifi\u00e9e ?
checklist.transition.actions.is-postcondition-consistant-with-destination = 							    La post-condition de cette action est-elle coh\u00e9rente avec la destination ?
checklist.usecase.naming = Naming
checklist.usecase.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement la classe ?
checklist.usecase.naming.is-noun = 												    \u00ab <ocl>self</ocl> \u00bb est-il un nom ou une phrase nominale ?
checklist.usecase.naming.misinterpret = 											    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.usecase.encoding = Encoding
checklist.usecase.encoding.convert-to-attribute = 										    <ocl>self</ocl> doit-elle \u00eatre sa propre classe ou un simple attribut d'une autre classe ?
checklist.usecase.encoding.do-just-one-thing = 											    La classe <ocl>self</ocl> fait-elle exactement une chose et la fait-elle bien ?
checklist.usecase.encoding.break-into-parts = 											    <ocl>self</ocl> pourrait-elle \u00eatre scind\u00e9e en deux classes ou plus ?
checklist.usecase.value = Value
checklist.usecase.value.start-with-meaningful-values = 										    Tous les attributs de <ocl>self</ocl> ont-ils des valeurs initiales significatives ?
checklist.usecase.value.convert-to-invariant = 											    Pourriez-vous \u00e9crire un invariant pour cette classe ?
checklist.usecase.value.establish-invariant-in-constructors = 									    Tous les constructeurs \u00e9tablissent-ils l'invariant de classe ?
checklist.usecase.value.maintain-invariant = 											    Toutes les op\u00e9rations maintiennent-elles l'invariant de classe ?
checklist.usecase.location = Location
checklist.usecase.location.move-somewhere = 											    La classe <ocl>self</ocl> pourrait-elle \u00eatre positionn\u00e9e diff\u00e9remment dans la hi\u00e9rarchie de classes ?
checklist.usecase.location.planned-subclasses = 										    Avez-vous pr\u00e9vu d'avoir des sous-classes de <ocl>self</ocl> ?
checklist.usecase.location.eliminate-from-model = 										    La classe <ocl>self</ocl> pourrait-elle \u00eatre \u00e9limin\u00e9e du mod\u00e8le ?
checklist.usecase.location.eliminates-or-affects-something-else = 								    Existe-t-il une autre classe du mod\u00e8le qui pourrait \u00eatre revue ou \u00e9limin\u00e9e car elle a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.usecase.updates = Updates
checklist.usecase.updates.reasons-for-update = 											    \u00c0 quelles occasions les instances de <ocl>self</ocl> doivent-elles \u00eatre mises \u00e0 jour ?
checklist.usecase.updates.affects-something-else = 										    Y a-t-il d'autres objets qui doivent \u00eatre mis \u00e0 jour lorsque <ocl>self</ocl> est mise \u00e0 jour ?
checklist.actor.naming = Naming
checklist.actor.naming.describe-clearly = 											    Le nom \u00ab <ocl>self</ocl> \u00bb d\u00e9crit-il clairement la classe ?
checklist.actor.naming.is-noun = 												    \u00ab <ocl>self</ocl> \u00bb est-il un nom ou une phrase nominale ?
checklist.actor.naming.misinterpret = 												    Le nom \u00ab <ocl>self</ocl> \u00bb pourrait-il \u00eatre mal interpr\u00e9t\u00e9 ou signifier quelque chose d'autre ?
checklist.actor.encoding = Encoding
checklist.actor.encoding.convert-to-attribute = 										    <ocl>self</ocl> doit-elle \u00eatre sa propre classe ou un simple attribut d'une autre classe ?
checklist.actor.encoding.do-just-one-thing = 											    La classe <ocl>self</ocl> fait-elle exactement une chose et la fait-elle bien ?
checklist.actor.encoding.break-into-parts = 											    <ocl>self</ocl> pourrait-elle \u00eatre scind\u00e9e en deux classes ou plus ?
checklist.actor.value = Value
checklist.actor.value.start-with-meaningful-values = 										    Tous les attributs de <ocl>self</ocl> ont-ils des valeurs initiales significatives ?
checklist.actor.value.convert-to-invariant = 											    Pourriez-vous \u00e9crire un invariant pour cette classe ?
checklist.actor.value.establish-invariant-in-constructors = 									    Tous les constructeurs \u00e9tablissent-ils l'invariant de classe ?
checklist.actor.value.maintain-invariant = 											    Toutes les op\u00e9rations maintiennent-elles l'invariant de classe ?
checklist.actor.location = Location
checklist.actor.location.move-somewhere = 											    La classe <ocl>self</ocl> pourrait-elle \u00eatre positionn\u00e9e diff\u00e9remment dans la hi\u00e9rarchie de classes ?
checklist.actor.location.planned-subclasses = 											    Avez-vous pr\u00e9vu d'avoir des sous-classes de <ocl>self</ocl> ?
checklist.actor.location.eliminate-from-model = 										    La classe <ocl>self</ocl> pourrait-elle \u00eatre \u00e9limin\u00e9e du mod\u00e8le ?
checklist.actor.location.eliminates-or-affects-something-else = 								    Existe-t-il une autre classe du mod\u00e8le qui pourrait \u00eatre revue ou \u00e9limin\u00e9e car elle a la m\u00eame fonction que <ocl>self</ocl> ?
checklist.actor.updates = Updates
checklist.actor.updates.reasons-for-update = 											    \u00c0 quelles occasions les instances de <ocl>self</ocl> doivent-elles \u00eatre mises \u00e0 jour ?
checklist.actor.updates.affects-something-else = 										    Y a-t-il d'autres objets qui doivent \u00eatre mis \u00e0 jour lorsque <ocl>self</ocl> est mise \u00e0 jour ?
