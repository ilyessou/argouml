<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Id$ -->
<!--
// Copyright (c) 1996-2005 The Regents of the University of California. All
// Rights Reserved. Permission to use, copy, modify, and distribute this
// software and its documentation without fee, and without a written
// agreement is hereby granted, provided that the above copyright notice
// and this paragraph appear in all copies.  This software program and
// documentation are copyrighted by The Regents of the University of
// California. The software program and documentation are supplied "AS
// IS", without any accompanying services from The Regents. The Regents
// does not warrant that the operation of the program will be
// uninterrupted or error-free. The end-user understands that the program
// was developed for research purposes and is advised not to rely
// exclusively on the program for any reason.  IN NO EVENT SHALL THE
// UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
// SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
-->

<!--

This is the final part of the tutorial. We show how code can be generated from
the design

-->

<chapter id="ch.tut.build">
  <title>Build (To be written)</title>

  <sect1>
    <title>Introduction</title>

    <para>
We now have our design fully specified.
With the right simulator we
      could actually execute the design and see if it works. &argouml; does not
      provide such functionality, but this functionality has been provided in
      alternative tools.</para>

    <para>&argouml; does allow you to generate code from the design. In the
      Build Phase take the design we have and supplement it with code for the
      detailed actions of the classes and their states.</para>

    <para>Central to this will be our System Architecture. It is this
      specification that provides the framework against which all our code will
      operate.</para>

    <para>Once again the <emphasis>recursive</emphasis>, and
      <emphasis>iterative</emphasis> nature of our process means we will come
      back to the 
Build phase many times in the future.
</para>

    <para>
This chapter is a little different from those that went before. 
UML
      itself is a notation for design. There is no new UML notation to
      understand here.</para>
  </sect1>

  <!-- Take the reader through the build process. This will be quite high
       level in the current version of the document. -->

  <sect1>
    <title>The Build Process (To be written)</title>

    <remark>To be written&hellip;</remark>

    <sect2>
      <title>Output of the Build Process (To be written)</title>

      <remark>To be written&hellip;</remark>

      <!-- The Code -->

      <sect3>
        <title>Code (To be written)</title>

        <remark>To be written&hellip;</remark>
      </sect3>

      <!-- What documents do we need. Use Cases as basis for Verification and
           User Documentation. -->

      <sect3>
        <title>Documents (To be written)</title>

        <remark>To be written&hellip;</remark>
      </sect3>
    </sect2>
  </sect1>

  <!-- Now show how to do in in Argo/UML. -->

  <sect1>
    <title>Adding Code to &argouml; (To be written)</title>

    <!-- Code for classes -->

    <sect2>
      <title>Classes (To be written)</title>

      <remark>To be written&hellip;</remark>
    </sect2>

    <!-- Code for Actions -->

    <sect2>
      <title>Actions (To be written)</title>

      <remark>To be written&hellip;</remark>
    </sect2>
  </sect1>

  <!-- Now illustrate these techniques with the Case Study. -->

  <sect1>
    <title>Case Study (To be written)</title>

    <sect2>
      <title>Coding for Classes (To be written)</title>

      <remark>To be written&hellip;</remark>

    </sect2>

    <sect2>
      <title>Coding Actions (To be written)</title>

      <remark>To be written&hellip;</remark>

    </sect2>
  </sect1>

  <!-- And round off with a summary -->

  <sect1>
    <title>Case Study (To be written)</title>

    <remark>To be written&hellip;</remark>

  </sect1>

</chapter>

<!-- Local stuff for Emacs - please do not delete

Local Variables:
mode: xml
sgml-doctype: "argomanual.xml"
sgml-parent-document: ("argomanual.xml" "chapter" nil)
sgml-validate-command: "nsgmls -wxml -sv ../docbook-setup/xml.dcl \
  argomanual.xml"
indent-tabs-mode: nil
End:

-->
