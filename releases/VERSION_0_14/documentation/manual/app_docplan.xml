<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Id$ -->

<!--

An overview of how I think the manual should be written

-->

<appendix id="app.docplan">
  <title>User Manual Plan</title>

  <!-- Target audiences -->

  <para>
TODO: Remove this from the user manual.
</para>

  <sect1>
    <title>Target Audiences</title>

    <para>Target audiences are the following.</para>

    <itemizedlist>
      <listitem><para>Experienced users of UML in &ooad; (perhaps with other
        tools) who wish to transfer to &argouml;.</para></listitem>

      <listitem><para>Designers who know &ooad;, and wish to adopt a UML
        based process.</para></listitem>
    </itemizedlist>

    <para>In the longer term it would be desirable to also target the
      following.</para>

    <itemizedlist>
      <listitem><para>Those who are learning design and wish to start with a
        UML based &ooad; process.</para></listitem>

      <listitem><para>People interested in modularised code design with a
        GUI.</para></listitem>
    </itemizedlist>
  </sect1>

  <!-- Goals -->

  <sect1>
    <title>Goals</title>

    <para>We want to keep the boundaries clearly defined, to avoid confusing
      duplication with the CookBook, FAQ, Quick Guide, online help etc. There
      are two goals (in priority order).</para>

    <orderedlist>
      <listitem><para>A comprehensive tutorial style explanation of &argouml;
        in the context of an &ooad; process.</para></listitem>

      <listitem><para><emphasis>Descriptive</emphasis> reference material on
        all components of ArgoUML</para></listitem>
    </orderedlist>

    <para>I think the existing User Manual is a good start particularly towards
      the second of these goals.</para>

    <!-- Non-Goals -->

    <sect2>
      <title>Non-Goals</title>

      <para>To keep the effort feasible the user manual should avoid the
        following (at least initially).</para>

      <itemizedlist>
        <listitem><para>Providing a quick overview&mdash;the Quick Guide
         already does this.</para></listitem>

        <listitem><para>Listing all the errors and what they mean. The help
          system does this&mdash;one day the manual will link to
          that.</para></listitem> 

        <listitem><para>Explaining the internal workings of ArgoUML. The
          cookbook, combined with Jason Robbins dissertation is already a good
          start for this.</para></listitem>
      </itemizedlist>
    </sect2>      
  </sect1>

  <!-- Structure -->

  <sect1>
    <title>Suggested Manual Structure</title>

    <para>Here are my thoughts. I think the user manual is really a set of two
      books, the tutorial manual (corresponding to Chapters 1&ndash;3 of the
      current manual), and the reference manual (Chapter 4 of the current
      manual)</para>

    <para>I suggest that the tutorial book be based around an &ooad; process
      (any preferences), and that each UML concept is introduced with each step
      of the process, followed by an explanation of how to do it under
      &argouml;. A <emphasis>simple</emphasis>case study will be needed
      throughout. A lot of this material can come from existing Chapters
      1&ndash;3, with some additional material from chapter 4 of the Cookbook,
      answers in the FAQ and Jason Robbins dissertation.</para>

    <sect2>
      <title>Tutorial Manual Structure</title>

      <orderedlist>

        <!-- Introduction puts everything into context -->

        <listitem><para>Introduction</para>
          <orderedlist>
            <listitem><para>Origins and overview of &argouml;</para></listitem>
            <listitem><para>Scope of the User Manual. Include cross-reference
              to other documentation (Cookbook, FAQ, Quick Guide, online help,
              &argouml; website etc).</para></listitem>
            <listitem><para>Overview of the User Manual. Explains that &argouml;
              will be explained in the context of an &ooad; process, and
              with an example running through.</para></listitem>
            <listitem><para>Assumptions. At this stage assume the user knows
              &ooad;, but not UML.</para></listitem>
          </orderedlist>
        </listitem>

        <!-- Need to explain how we're going to go about learning &argouml; -->

        <listitem><para>UML Based &ooad;</para>
          <orderedlist>
            <listitem><para>Background to UML&mdash;what it is, history
              etc.</para></listitem>
            <listitem><para>UML based processes for &ooad;</para></listitem>
            <listitem><para>ArgoUML Basics&mdash;projects, drawing, exploring,
              details</para></listitem>
            <listitem><para>What &argouml; has that other tools are missing
              (critics, to-do list, based in cognitive psychology
              theory).</para></listitem>
            <listitem><para>The Case Study</para></listitem>
          </orderedlist>
        </listitem>

        <!-- Diagrams associated with requirements capture. This will include
             a lot of &argouml; stuff, since you hit this at the first
             diagram.-->

        <listitem><para>Requirements Capture</para>
          <orderedlist>
            <listitem><para>Use Case Diagrams (this section will be relatively
              large, because its the first time we use ArgoUML to create
              something).</para></listitem>
          </orderedlist>
        </listitem>
        
        <!-- Diagrams for analysis. What goes where is a bit dependent on the
             specific process. -->

        <listitem><para>Analysis</para>
          <orderedlist>
            <listitem><para>Concept Class Diagrams</para></listitem>
            <listitem><para>System Sequence Charts and Collaboration
              Diagrams</para></listitem>
            <listitem><para>System State Diagrams</para></listitem>
          </orderedlist>
        </listitem>

        <!-- Design -->

        <listitem><para>Design</para>
          <orderedlist>
            <listitem><para>Class Diagrams for Realisation</para></listitem>
            <listitem><para>Sequence Charts and Collaboration Diagrams for
              Realisation</para></listitem>
            <listitem><para>State Diagrams for realisation</para></listitem>
            <listitem><para>Package Diagrams</para></listitem>
          </orderedlist>
        </listitem>

        <!-- Build -->
          
        <listitem><para>Build</para>
          <orderedlist>
            <listitem><para>Deployment Diagrams</para></listitem>
            <listitem><para>Code Generation in &argouml;</para></listitem>
          </orderedlist>
        </listitem>
      </orderedlist>

    </sect2>         

    <!-- What needs to be in the Reference Manual -->

    <sect2>
      <title>Reference Manual Structure</title>

      <para>This section largely follows Chapter 4 of the existing User Manual,
        including the Gloassary. However it needs a few extra things.</para>

      <orderedlist>
        <listitem><para>material on each of the
          diagram types, each of the artifacts that can appear on the diagrams
          and details of the features of each artifact type.</para></listitem>

        <listitem><para>An Index</para></listitem>
      </orderedlist>

    </sect2>
  </sect1>

  <!-- What we need to do to get to a final manual -->

  <sect1>
    <title>Actions, Priorities and Questions</title>

    <sect2>
      <title>Actions and priorities</title>

      <para>Here's my first call for what needs to be done in priority
        order. From the comments made over the last few days I think the first
        5 items won't take very long, meaning effort can concentrate on the
        main stuff.</para>

      <orderedlist>
        <listitem><para>Get buy-in for the approach</para></listitem>

        <listitem><para>Agree document structure (broadly)</para></listitem>

        <listitem><para>Choose a suitable example to run
          throughout.</para></listitem>

        <listitem><para>Break into several files (XML entities) to make the
          manual more manageable.</para></listitem>

        <listitem><para>Identify all existing sources of material to be
          reused</para></listitem>

        <listitem><para>Get writing! I suggest the priorities here
          are:</para>

          <orderedlist>
            <listitem><para>User Manual sections relating to &argouml; diagrams
              and artifacts (assume the reader knows UML already, and allows a
              quick advance by pulling together a lot of existing
              material).</para></listitem>

            <listitem><para>User Manual examples</para></listitem>

            <listitem><para>User Manual sections relating to additional
              &argouml; cognitive design features.</para></listitem>

            <listitem><para>User Manual sections relating to UML (for readers
              who don't know UML).</para></listitem>

            <listitem><para>Completion of Reference Manual
              material.</para></listitem>
          </orderedlist>
        </listitem>

        <listitem><para>Create an index.</para></listitem>
      </orderedlist>
    </sect2>

    <!-- What questions still need answering -->

    <sect2>
      <title>Remaining Questions</title>

      <orderedlist>
        <listitem><para>The current manual shows copyright held by Phillipe,
          and no legal notice. What is the position of this
          material?</para></listitem>
      </orderedlist>
    </sect2>
  </sect1>
          
</appendix>

<!-- Local stuff for Emacs - please do not delete

Local Variables:
mode: xml
sgml-doctype: "argomanual.xml"
sgml-parent-document: ("argomanual.xml" "appendix" nil)
sgml-validate-command: "nsgmls -wxml -sv ../docbook-setup/xml.dcl \
  argomanual.xml"
indent-tabs-mode: nil
End:

-->
